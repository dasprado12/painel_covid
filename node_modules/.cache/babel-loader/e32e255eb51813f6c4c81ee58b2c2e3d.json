{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js!/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js??ref--13-0!/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","mtime":1594248890680},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":1593699362690},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":1593699361522},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js","mtime":1593699361766}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9wcmFkby9EZXNrdG9wL3Vpb3QvcGFpbmVsX2NvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL3ByYWRvL0Rlc2t0b3AvdWlvdC9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHVybCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJICsgJy9hcGkvcmVnaW9ucyc7CnZhciB1cmwyID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BUEl2MiArICcvYXBpdjIvcmVnaWFvLyc7CnZhciBlbmRwb2ludHMgPSB7CiAgYWxsX2RhdGE6IHVybCwKICBtYW55X3JlZ2lvbnM6IHVybCArICcvbGlzdE1hbnknLAogIGFsbF9yZWdpb25zOiB1cmwgKyAnL2xpc3QnLAogIGFsbF9kYXRlczogdXJsICsgJy9kYXRlcycsCiAgbGFzdF9kYXRlOiB1cmwgKyAnL25ld2VzdERhdGUnCn07CmV4cG9ydCB2YXIgRGF0YSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gRGF0YSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEYXRhKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImdldF9hbGxfZGF0YSIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGF4aW9zLmdldChlbmRwb2ludHMuYWxsX2RhdGEpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfaGlzdF9kYXRhIiwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCArICc/cmVnaWFvPVRvdGFsIERGJyk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImdldF9hbGxfcmVnaW9ucyIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGF4aW9zLmdldChlbmRwb2ludHMuYWxsX3JlZ2lvbnMpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfYWxsX2RhdGVzIiwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KGVuZHBvaW50cy5hbGxfZGF0ZXMpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfbGFzdF9kYXRlIiwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KGVuZHBvaW50cy5sYXN0X2RhdGUpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfZGF0YV9ieV9yZWdpb24iLCBmdW5jdGlvbiAocmVnaW9uKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQodXJsICsgJz9yZWdpYW89JyArIHJlZ2lvbik7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImdldF9yZWdpb25fYnlfZGF0ZSIsIGZ1bmN0aW9uICh0aW1lKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQodXJsICsgJz9kYXRhRXh0cmFjYW89JyArIHRpbWUpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfcmVnaW9uX2J5X2RhdGUyIiwgZnVuY3Rpb24gKHRpbWUpIHsKICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwyICsgJz9kYXRhRXh0cmFjYW89JyArIHRpbWUpOwogICAgfSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRGF0YSwgW3sKICAgIGtleTogImdldF9tYW55X2RhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldF9tYW55X2RhdGEodHlwZSwgcmVnaW9ucykgewogICAgICBpZiAoIXR5cGUpIHsKICAgICAgICB0eXBlID0gJ251bSc7CiAgICAgIH0KCiAgICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLm1hbnlfcmVnaW9ucyArICIvIi5jb25jYXQodHlwZSkgKyAnP3JlZ2lhbz0nICsgcmVnaW9ucyk7CiAgICB9IC8vIGdldF9vbmVfcmVnaW9uX2J5X2RhdGEgPSAoZGF0ZSkgPT4gYXhpb3MuZ2V0KHVybCkKICAgIC8vIGdldF9hbGwgPSAoKSA9PiBheGlvcy5nZXQoZW5kcG9pbnRzLmFsbCkKCiAgfV0pOwoKICByZXR1cm4gRGF0YTsKfSgpOw=="},{"version":3,"sources":["/home/prado/Desktop/uiot/painel_covid/src/functions/index.js"],"names":["axios","url","process","env","VUE_APP_API","url2","VUE_APP_APIv2","endpoints","all_data","many_regions","all_regions","all_dates","last_date","Data","get","region","time","type","regions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0B,cAAtC;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,aAAZ,GAA4B,gBAAzC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAEP,GADI;AAEdQ,EAAAA,YAAY,EAAER,GAAG,GAAG,WAFN;AAGdS,EAAAA,WAAW,EAAET,GAAG,GAAG,OAHL;AAIdU,EAAAA,SAAS,EAAEV,GAAG,GAAG,QAJH;AAKdW,EAAAA,SAAS,EAAEX,GAAG,GAAG;AALH,CAAlB;AAQA,WAAaY,IAAb;AAAA;AAAA;;AAAA,0CAEmB;AAAA,aAAMb,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACC,QAApB,CAAN;AAAA,KAFnB;;AAAA,2CAIoB;AAAA,aAAMR,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,kBAAd,CAAN;AAAA,KAJpB;;AAAA,6CAMsB;AAAA,aAAMD,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACG,WAApB,CAAN;AAAA,KANtB;;AAAA,2CAQoB;AAAA,aAAMV,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACI,SAApB,CAAN;AAAA,KARpB;;AAAA,2CAUoB;AAAA,aAAMX,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACK,SAApB,CAAN;AAAA,KAVpB;;AAAA,gDAYyB,UAACG,MAAD;AAAA,aAAYf,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,UAAJ,GAAec,MAAzB,CAAZ;AAAA,KAZzB;;AAAA,gDAuByB,UAACC,IAAD;AAAA,aAAUhB,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,gBAAJ,GAAqBe,IAA/B,CAAV;AAAA,KAvBzB;;AAAA,iDAwByB,UAACA,IAAD;AAAA,aAAUhB,KAAK,CAACc,GAAN,CAAUT,IAAI,GAAC,gBAAL,GAAsBW,IAAhC,CAAV;AAAA,KAxBzB;AAAA;;AAAA;AAAA;AAAA,kCAckBC,IAdlB,EAcwBC,OAdxB,EAcgC;AACxB,UAAG,CAACD,IAAJ,EAAS;AACLA,QAAAA,IAAI,GAAG,KAAP;AACH;;AACD,aAAOjB,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACE,YAAV,cAA2BQ,IAA3B,IAAkC,UAAlC,GAA6CC,OAAvD,CAAP;AACH,KAnBL,CAqBI;AAKA;;AA1BJ;;AAAA;AAAA","sourcesContent":["import axios from 'axios'\n\nconst url = process.env.VUE_APP_API + '/api/regions'\nconst url2 = process.env.VUE_APP_APIv2 + '/apiv2/regiao/'\n\nconst endpoints = {\n    all_data: url,\n    many_regions: url + '/listMany',\n    all_regions: url + '/list',\n    all_dates: url + '/dates',\n    last_date: url + '/newestDate'\n}\n\nexport class Data {\n\n    get_all_data = () => axios.get(endpoints.all_data)\n\n    get_hist_data = () => axios.get(url+'?regiao=Total DF')\n\n    get_all_regions = () => axios.get(endpoints.all_regions)\n    \n    get_all_dates = () => axios.get(endpoints.all_dates)\n\n    get_last_date = () => axios.get(endpoints.last_date)\n\n    get_data_by_region = (region) => axios.get(url+'?regiao='+region)\n\n    get_many_data(type, regions){\n        if(!type){\n            type = 'num'\n        }\n        return axios.get(endpoints.many_regions+`/${type}`+'?regiao='+regions)\n    } \n\n    // get_one_region_by_data = (date) => axios.get(url)\n\n    get_region_by_date = (time) => axios.get(url+'?dataExtracao='+time)\n    get_region_by_date2 =(time) => axios.get(url2+'?dataExtracao='+time)\n\n    // get_all = () => axios.get(endpoints.all)\n}"]}]}