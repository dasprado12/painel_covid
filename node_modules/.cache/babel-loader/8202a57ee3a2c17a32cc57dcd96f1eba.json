{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js!/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue","mtime":1591416365729},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLWlzby1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGxpbmVDaGFydCBmcm9tICIuLi9jaGFydHMvTGluZUNoYXJ0LnZ1ZSI7CmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9leGFtcGxlL2Z1bmN0aW9ucy5qcyI7CnZhciBuZXdEYXRhID0gbmV3IERhdGEoKTsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ3JlZ2lvbiddLAogIGNvbXBvbmVudHM6IHsKICAgIGxpbmVDaGFydDogbGluZUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVnaW9uczogW10sCiAgICAgIGRhdGE6IG51bGwsCiAgICAgIGl0ZW1zOiBbIsOBR1VBUyBDTEFSQVMiLCAiUkVDQU5UTyBEQVMgRU1BUyIsICJTQU1BTUJBSUEiLCAiVEFHVUFUSU5HQSIsICJWSUNFTlRFIFBJUkVTIiwgIkNFTlRSQUwiLCAiU1VET0VTVEUiLCAiUExBTk8gUElMT1RPIiwgIlNVRE9FU1RFL09DVE9HT05BTCIsICJMQUdPIE5PUlRFIiwgIkxBR08gU1VMIiwgIlZBUkrDg08gRE8gVE9SVE8iLCAiQ0VOVFJPIFNVTCIsICJDQU5EQU5HT0zDgk5ESUEiLCAiUEFSS1dBWSIsICJHVUFSw4EiLCAiTsOaQ0xFTyBCQU5ERUlSQU5URSIsICJSSUFDSE8gRlVORE8gSSIsICJSSUFDSE8gRlVORE8gSUkiLCAiU0NJQSAoRVNUUlVUVVJBTCkiLCAiQ1JVWkVJUk8iLCAiTk9SVEUiLCAiRkVSQ0FMIiwgIlBMQU5BTFRJTkEiLCAiU09CUkFESU5ITyBJIiwgIlNPQlJBRElOSE8gSUkiLCAiR0FNQSIsICJTQU5UQSBNQVJJQSIsICJMRVNURSIsICJKQVJESU0gQk9Uw4JOSUNPIiwgIklUQVBPw4MiLCAiUEFSQU5Pw4EiLCAiU8ODTyBTRUJBU1RJw4NPIiwgIlNVTCIsICJPRVNURSIsICJCUkFaTMOCTkRJQSIsICJDRUlMw4JORElBIiwgIlBPUFVMQcOHw4NPIFBSSVZBREEgREUgTElCRVJEQURFIiwgIlMgSSBBIiwgIlJBIEVNIElOVkVTVElHQcOHw4NPIl0sCiAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgaW5mZWN0YWRvczogW251bGxdLAogICAgICBkYXRlczogW251bGxdLAogICAgICBvYml0b3M6IFtudWxsXSwKICAgICAgbnVtSWQ6IDAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRfcmVnaW9uKCcnKTsKICB9LAogIHdhdGNoOiB7CiAgICByZWdpb25zOiBmdW5jdGlvbiByZWdpb25zKHZhbCkgewogICAgICB0aGlzLmdldF9yZWdpb24odmFsKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldF9yZWdpb246IGZ1bmN0aW9uIGdldF9yZWdpb24ocmVnaW9uKSB7CiAgICAgIHZhciBkYXRhID0gbmV3RGF0YS5nZXRfYnlfcmVnaW9uKHJlZ2lvbik7CiAgICAgIHZhciBpbmZlY3RhZG9zID0gW107CiAgICAgIHZhciBkYXRlcyA9IFtdOwogICAgICB2YXIgb2JpdG9zID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICBpbmZlY3RhZG9zLnB1c2goZGF0YVtpXS5udW0pOwogICAgICAgIGRhdGVzLnB1c2gobmV3IERhdGUoZGF0YVtpXS5kYXRhRXh0cmFjYW8pLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXS5zbGljZSg1KSk7CiAgICAgICAgb2JpdG9zLnB1c2goZGF0YVtpXS5vYml0b3MpOwogICAgICB9CgogICAgICB0aGlzLmluZmVjdGFkb3MgPSBpbmZlY3RhZG9zOwogICAgICB0aGlzLmRhdGVzID0gZGF0ZXM7CiAgICAgIHRoaXMub2JpdG9zID0gb2JpdG9zOwogICAgICB0aGlzLm51bUlkKys7CiAgICB9LAogICAgY2hhbmdlQ2hhcnQ6IGZ1bmN0aW9uIGNoYW5nZUNoYXJ0KGl0ZW0pIHsKICAgICAgdGhpcy50eXBlID0gaXRlbTsKICAgICAgdGhpcy5udW1JZCsrOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RegionLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,SAAA,MAAA,yBAAA;AACA,SAAA,IAAA,QAAA,+BAAA;AAEA,IAAA,OAAA,GAAA,IAAA,IAAA,EAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,CACA,cADA,EACA,kBADA,EACA,WADA,EACA,YADA,EACA,eADA,EACA,SADA,EACA,UADA,EACA,cADA,EACA,oBADA,EACA,YADA,EACA,UADA,EACA,iBADA,EACA,YADA,EACA,gBADA,EACA,SADA,EACA,OADA,EACA,oBADA,EACA,gBADA,EACA,iBADA,EACA,mBADA,EACA,UADA,EACA,OADA,EACA,QADA,EACA,YADA,EACA,cADA,EACA,eADA,EACA,MADA,EACA,aADA,EACA,OADA,EACA,iBADA,EACA,QADA,EACA,SADA,EACA,eADA,EACA,KADA,EACA,OADA,EACA,YADA,EACA,WADA,EACA,gCADA,EACA,OADA,EACA,oBADA,CAHA;AAMA,MAAA,IAAA,EAAA,MANA;AAOA,MAAA,UAAA,EAAA,CAAA,IAAA,CAPA;AAQA,MAAA,KAAA,EAAA,CAAA,IAAA,CARA;AASA,MAAA,MAAA,EAAA,CAAA,IAAA,CATA;AAUA,MAAA,KAAA,EAAA;AAVA,KAAA;AAYA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,UAAA,CAAA,EAAA;AACA,GAnBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,WAAA,UAAA,CAAA,GAAA;AACA;AAHA,GApBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,UAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA,MAAA,CAAA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,YAAA,EAAA,WAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA;;AACA,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA;AACA,KAfA;AAgBA,IAAA,WAhBA,uBAgBA,IAhBA,EAgBA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA;AACA;AAnBA;AAzBA,CAAA","sourcesContent":["<template>\n    <div>\n        <v-card>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <line-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:type=\"type\"\n                :key=\"numId\"\n            />\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"changeChart('line')\">Line</v-btn>\n                <v-btn text @click=\"changeChart('bar')\">Bar</v-btn>\n            </v-card-actions>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport lineChart from \"../charts/LineChart.vue\"\nimport { Data } from \"../../../example/functions.js\";\n\nlet newData = new Data();\n\nexport default {\n    props: [ 'region' ],\n    components: { lineChart },\n    data(){\n        return {\n            regions: [ ],\n            data: null,\n            items: [ \n                \"ÁGUAS CLARAS\", \"RECANTO DAS EMAS\", \"SAMAMBAIA\", \"TAGUATINGA\", \"VICENTE PIRES\", \"CENTRAL\", \"SUDOESTE\", \"PLANO PILOTO\", \"SUDOESTE/OCTOGONAL\", \"LAGO NORTE\", \"LAGO SUL\", \"VARJÃO DO TORTO\", \"CENTRO SUL\", \"CANDANGOLÂNDIA\", \"PARKWAY\", \"GUARÁ\", \"NÚCLEO BANDEIRANTE\", \"RIACHO FUNDO I\", \"RIACHO FUNDO II\", \"SCIA (ESTRUTURAL)\", \"CRUZEIRO\", \"NORTE\", \"FERCAL\", \"PLANALTINA\", \"SOBRADINHO I\", \"SOBRADINHO II\", \"GAMA\", \"SANTA MARIA\", \"LESTE\", \"JARDIM BOTÂNICO\", \"ITAPOÃ\", \"PARANOÁ\", \"SÃO SEBASTIÃO\", \"SUL\", \"OESTE\", \"BRAZLÂNDIA\", \"CEILÂNDIA\", \"POPULAÇÃO PRIVADA DE LIBERDADE\", \"S I A\", \"RA EM INVESTIGAÇÃO\" \n            ],\n            type: 'line',\n            infectados: [null],\n            dates: [null],\n            obitos: [null],\n            numId: 0\n        }\n    },\n    mounted() {\n        this.get_region('')\n    },\n    watch: {\n        regions(val){\n            this.get_region(val)\n        }\n    },\n    methods: {\n        get_region(region){\n            let data = newData.get_by_region(region)\n            let infectados = []\n            let dates = []\n            let obitos = []\n            for(let i = 0; i < data.length; i++){\n                infectados.push(data[i].num)\n                dates.push( new Date( data[i].dataExtracao).toISOString().split('T')[0].slice(5) )\n                obitos.push(data[i].obitos)\n            }\n            this.infectados = infectados\n            this.dates = dates\n            this.obitos = obitos\n            this.numId++\n        },\n        changeChart(item){\n            this.type = item\n            this.numId++\n        }\n    }       \n}\n</script>"],"sourceRoot":"src/views/Projeto/visualize"}]}