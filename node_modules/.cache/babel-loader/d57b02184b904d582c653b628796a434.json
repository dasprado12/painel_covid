{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js??ref--13-0!/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","mtime":1592358707090},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9wcmFkby9EZXNrdG9wL3Vpb3QvcGFpbmVsX2NvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgdXJsID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BUEkgKyAnL2FwaS9yZWdpb25zJzsKdmFyIGVuZHBvaW50cyA9IHsKICBhbGxfZGF0YTogdXJsLAogIGFsbF9yZWdpb25zOiB1cmwgKyAnL2xpc3QnLAogIGFsbF9kYXRlczogdXJsICsgJy9kYXRlcycsCiAgbGFzdF9kYXRlOiB1cmwgKyAnL25ld2VzdERhdGUnCn07CmV4cG9ydCB2YXIgRGF0YSA9IGZ1bmN0aW9uIERhdGEoKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERhdGEpOwoKICBfZGVmaW5lUHJvcGVydHkodGhpcywgImdldF9hbGxfZGF0YSIsIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLmFsbF9kYXRhKTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfYWxsX3JlZ2lvbnMiLCBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gYXhpb3MuZ2V0KGVuZHBvaW50cy5hbGxfcmVnaW9ucyk7CiAgfSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2FsbF9kYXRlcyIsIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLmFsbF9kYXRlcyk7CiAgfSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2xhc3RfZGF0ZSIsIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLmxhc3RfZGF0ZSk7CiAgfSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2RhdGFfYnlfcmVnaW9uIiwgZnVuY3Rpb24gKHJlZ2lvbikgewogICAgcmV0dXJuIGF4aW9zLmdldCh1cmwgKyAnP3JlZ2lhbz0nICsgcmVnaW9uKTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfcmVnaW9uX2J5X2RhdGUiLCBmdW5jdGlvbiAodGltZSkgewogICAgcmV0dXJuIGF4aW9zLmdldCh1cmwgKyAnP2RhdGFFeHRyYWNhbz0nICsgdGltZSk7CiAgfSk7Cn0gLy8gZ2V0X2FsbCA9ICgpID0+IGF4aW9zLmdldChlbmRwb2ludHMuYWxsKQo7"},{"version":3,"sources":["/home/prado/Desktop/uiot/painel_covid/src/functions/index.js"],"names":["axios","url","process","env","VUE_APP_API","endpoints","all_data","all_regions","all_dates","last_date","Data","get","region","time"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0B,cAAtC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAEL,GADI;AAEdM,EAAAA,WAAW,EAAEN,GAAG,GAAG,OAFL;AAGdO,EAAAA,SAAS,EAAEP,GAAG,GAAG,QAHH;AAIdQ,EAAAA,SAAS,EAAER,GAAG,GAAG;AAJH,CAAlB;AAOA,WAAaS,IAAb;AAAA;;AAAA,wCAEmB;AAAA,WAAMV,KAAK,CAACW,GAAN,CAAUN,SAAS,CAACC,QAApB,CAAN;AAAA,GAFnB;;AAAA,2CAIsB;AAAA,WAAMN,KAAK,CAACW,GAAN,CAAUN,SAAS,CAACE,WAApB,CAAN;AAAA,GAJtB;;AAAA,yCAMoB;AAAA,WAAMP,KAAK,CAACW,GAAN,CAAUN,SAAS,CAACG,SAApB,CAAN;AAAA,GANpB;;AAAA,yCAQoB;AAAA,WAAMR,KAAK,CAACW,GAAN,CAAUN,SAAS,CAACI,SAApB,CAAN;AAAA,GARpB;;AAAA,8CAUyB,UAACG,MAAD;AAAA,WAAYZ,KAAK,CAACW,GAAN,CAAUV,GAAG,GAAC,UAAJ,GAAeW,MAAzB,CAAZ;AAAA,GAVzB;;AAAA,8CAcyB,UAACC,IAAD;AAAA,WAAUb,KAAK,CAACW,GAAN,CAAUV,GAAG,GAAC,gBAAJ,GAAqBY,IAA/B,CAAV;AAAA,GAdzB;AAAA,EAgBI;AAhBJ","sourcesContent":["import axios from 'axios'\n\nconst url = process.env.VUE_APP_API + '/api/regions'\n\nconst endpoints = {\n    all_data: url,\n    all_regions: url + '/list',\n    all_dates: url + '/dates',\n    last_date: url + '/newestDate'\n}\n\nexport class Data {\n\n    get_all_data = () => axios.get(endpoints.all_data)\n\n    get_all_regions = () => axios.get(endpoints.all_regions)\n    \n    get_all_dates = () => axios.get(endpoints.all_dates)\n\n    get_last_date = () => axios.get(endpoints.last_date)\n\n    get_data_by_region = (region) => axios.get(url+'?regiao='+region)\n\n    // get_one_region_by_data = (date) => axios.get(url)\n\n    get_region_by_date = (time) => axios.get(url+'?dataExtracao='+time)\n    \n    // get_all = () => axios.get(endpoints.all)\n}"]}]}