{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue","mtime":1592411877188},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBfZGF0YSBmcm9tICIuLi8uLi8uLi9leGFtcGxlL2luZGV4LmpzIjsKaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiOwppbXBvcnQgYmFyQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL0JhckNoYXJ0LnZ1ZSI7CmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiOwp2YXIgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFtdLAogIGNvbXBvbmVudHM6IHsKICAgIGJhckNoYXJ0OiBiYXJDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhZ2U6IDEsCiAgICAgIGRyYXdlcjogdHJ1ZSwKICAgICAgcmVnaW9uczogW10sCiAgICAgIGl0ZW1zOiBudWxsLAogICAgICBuYW1lOiAnREYnLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIGRhdGVzOiBkYXRlcy5kYXRlcywKICAgICAgZGFkb3M6IF9kYXRhLkRGLAogICAgICBkYWRvc19maWx0cmFkb3M6IHsKICAgICAgICBpbmZlY3RhZG9zOiBbXSwKICAgICAgICBkaWE6IFtdLAogICAgICAgIG9iaXRvczogW10KICAgICAgfSwKICAgICAgaW5mZWN0YWRvczogW10sCiAgICAgIGRpYTogW10sCiAgICAgIG9iaXRvczogW10sCiAgICAgIG51bUlkOiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfYWxsX2RhdGEoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5kYWRvcyA9IF9jb250ZXh0LnNlbnQuZGF0YTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldF9yZWdpb25zKCk7CiAgICB0aGlzLmZpbHRlcl9kYXRhKHRoaXMucmVnaW9ucyk7CiAgICB0aGlzLm51bUlkKys7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRfcmVnaW9uczogZnVuY3Rpb24gZ2V0X3JlZ2lvbnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfYWxsX3JlZ2lvbnMoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMyLml0ZW1zID0gX2NvbnRleHQyLnNlbnQuZGF0YTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmlsdGVyX2RhdGE6IGZ1bmN0aW9uIGZpbHRlcl9kYXRhKHJlZ2lvbnMpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgZGF5LCBpLCBpbmZlY3RhZG9zLCBvYml0b3MsIGo7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGRheSA9IF9jb250ZXh0My5zZW50LmRhdGE7CgogICAgICAgICAgICAgICAgLy9wYXJhIGNhZGEgcmVnaWFvCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcmVnaW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBpbmZlY3RhZG9zID0gMDsKICAgICAgICAgICAgICAgICAgb2JpdG9zID0gMDsKCiAgICAgICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBfdGhpczMuZGFkb3MubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgICAvL2NvbXBhcmEgc2UgYSByZWdpYW8gY29pbmNpZGUKICAgICAgICAgICAgICAgICAgICBpZiAocmVnaW9uc1tpXSA9PSBfdGhpczMuZGFkb3Nbal0ucmVnaWFvLnRvVXBwZXJDYXNlKCkpIHsKICAgICAgICAgICAgICAgICAgICAgIC8vY29tcGFyYSBzZSBhIGRhdGEgY29pbmNpZGUKICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXkgPT0gX3RoaXMzLmRhZG9zW2pdLmRhdGFFeHRyYWNhbykgewogICAgICAgICAgICAgICAgICAgICAgICBpbmZlY3RhZG9zICs9IF90aGlzMy5kYWRvc1tqXS5udW07CiAgICAgICAgICAgICAgICAgICAgICAgIG9iaXRvcyArPSBfdGhpczMuZGFkb3Nbal0ub2JpdG9zOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgX3RoaXMzLmRhZG9zX2ZpbHRyYWRvcy5pbmZlY3RhZG9zLnB1c2goaW5mZWN0YWRvcyk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuZGFkb3NfZmlsdHJhZG9zLm9iaXRvcy5wdXNoKG9iaXRvcyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMzLmluZmVjdGFkb3MgPSBfdGhpczMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3M7CiAgICAgICAgICAgICAgICBfdGhpczMub2JpdG9zID0gX3RoaXMzLmRhZG9zX2ZpbHRyYWRvcy5vYml0b3M7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHJlZ2lvbnM6IGZ1bmN0aW9uIHJlZ2lvbnModmFsKSB7CiAgICAgIHRoaXMuZGFkb3NfZmlsdHJhZG9zID0gewogICAgICAgIGluZmVjdGFkb3M6IFtdLAogICAgICAgIGRpYTogW10sCiAgICAgICAgb2JpdG9zOiBbXQogICAgICB9OwogICAgICB0aGlzLmZpbHRlcl9kYXRhKHZhbCk7CiAgICAgIHRoaXMubnVtSWQrKzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n                <v-spacer/>\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips multiple/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <bar-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:region=\"regions\"\n                :key=\"numId\"\n            />\n            <!-- <v-card-actions>\n                <v-pagination\n                    v-model=\"page\"\n                    :length=\"3\"\n                    :total-visible=\"7\"\n                ></v-pagination>\n            </v-card-actions> -->\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport data from \"../../../example/index.js\"\nimport dates from \"../../../example/dates.js\"\nimport barChart from \"../charts/BarChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ \n    ],\n    components: { \n        barChart\n    },\n    data(){\n        return {\n            page: 1,\n            drawer: true,\n            regions: [ ],\n            items: null,\n            name: 'DF',\n            selected: [],\n            dates: dates.dates,\n            dados: data.DF,\n            dados_filtrados: {\n                infectados: [],\n                dia: [],\n                obitos: []\n            },\n            infectados: [],\n            dia: [],\n            obitos: [],\n            numId: 0\n        }\n    },\n    async created(){\n        this.dados = (await api_data.get_all_data()).data\n    },\n    mounted(){\n        this.get_regions()\n        this.filter_data(this.regions)\n        this.numId++\n    },\n    methods: {\n        async get_regions(){\n            this.items = (await api_data.get_all_regions()).data\n        },\n        async filter_data(regions){\n            let day = (await api_data.get_last_date()).data\n\n            //para cada regiao\n            for(let i = 0; i < regions.length; i++ ){\n                let infectados = 0\n                let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    //compara se a regiao coincide\n                    if( regions[i] == this.dados[j].regiao.toUpperCase() ){\n                        //compara se a data coincide\n                        \n                        if(day == this.dados[j].dataExtracao){\n                            infectados += this.dados[j].num\n                            obitos += this.dados[j].obitos\n                        }\n                    }\n                }\n                this.dados_filtrados.infectados.push(infectados)\n                this.dados_filtrados.obitos.push(obitos)\n            }\n            this.infectados = this.dados_filtrados.infectados\n            this.obitos = this.dados_filtrados.obitos\n        }\n    },\n    watch: {\n        regions: function(val) {\n            this.dados_filtrados = {\n                infectados: [],\n                dia: [],\n                obitos: []\n            }\n            this.filter_data(val)\n            this.numId++\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>\n\n\n"],"sourceRoot":"src/views/Projeto/visualize"}]}