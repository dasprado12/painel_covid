{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue","mtime":1592358783725},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBfZGF0YSBmcm9tICIuLi8uLi8uLi9leGFtcGxlL2luZGV4LmpzIjsKaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiOwppbXBvcnQgYmFyQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL0JhckNoYXJ0LnZ1ZSI7CmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiOwp2YXIgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFtdLAogIGNvbXBvbmVudHM6IHsKICAgIGJhckNoYXJ0OiBiYXJDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhZ2U6IDEsCiAgICAgIGRyYXdlcjogdHJ1ZSwKICAgICAgcmVnaW9uczogW10sCiAgICAgIGl0ZW1zOiBbIsOBR1VBUyBDTEFSQVMiLCAiUkVDQU5UTyBEQVMgRU1BUyIsICJTQU1BTUJBSUEiLCAiVEFHVUFUSU5HQSIsICJWSUNFTlRFIFBJUkVTIiwgIkNFTlRSQUwiLCAiU1VET0VTVEUiLCAiUExBTk8gUElMT1RPIiwgIlNVRE9FU1RFL09DVE9HT05BTCIsICJMQUdPIE5PUlRFIiwgIkxBR08gU1VMIiwgIlZBUkrDg08gRE8gVE9SVE8iLCAiQ0VOVFJPIFNVTCIsICJDQU5EQU5HT0zDgk5ESUEiLCAiUEFSS1dBWSIsICJHVUFSw4EiLCAiTsOaQ0xFTyBCQU5ERUlSQU5URSIsICJSSUFDSE8gRlVORE8gSSIsICJSSUFDSE8gRlVORE8gSUkiLCAiU0NJQSAoRVNUUlVUVVJBTCkiLCAiQ1JVWkVJUk8iLCAiTk9SVEUiLCAiRkVSQ0FMIiwgIlBMQU5BTFRJTkEiLCAiU09CUkFESU5ITyBJIiwgIlNPQlJBRElOSE8gSUkiLCAiR0FNQSIsICJTQU5UQSBNQVJJQSIsICJMRVNURSIsICJKQVJESU0gQk9Uw4JOSUNPIiwgIklUQVBPw4MiLCAiUEFSQU5Pw4EiLCAiU8ODTyBTRUJBU1RJw4NPIiwgIlNVTCIsICJPRVNURSIsICJCUkFaTMOCTkRJQSIsICJDRUlMw4JORElBIiwgIlBPUFVMQcOHw4NPIFBSSVZBREEgREUgTElCRVJEQURFIiwgIlMgSSBBIiwgIlJBIEVNIElOVkVTVElHQcOHw4NPIl0sCiAgICAgIG5hbWU6ICdERicsCiAgICAgIHNlbGVjdGVkOiBbXSwKICAgICAgZGF0ZXM6IGRhdGVzLmRhdGVzLAogICAgICBkYWRvczogX2RhdGEuREYsCiAgICAgIGRhZG9zX2ZpbHRyYWRvczogewogICAgICAgIGluZmVjdGFkb3M6IFtdLAogICAgICAgIGRpYTogW10sCiAgICAgICAgb2JpdG9zOiBbXQogICAgICB9LAogICAgICBpbmZlY3RhZG9zOiBbXSwKICAgICAgZGlhOiBbXSwKICAgICAgb2JpdG9zOiBbXSwKICAgICAgbnVtSWQ6IDAKICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZmlsdGVyX2RhdGEoKTsKICAgIHRoaXMubnVtSWQrKzsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbHRlcl9kYXRhOiBmdW5jdGlvbiBmaWx0ZXJfZGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRheSwgaSwgaW5mZWN0YWRvcywgb2JpdG9zLCBqOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF5ID0gX2NvbnRleHQuc2VudC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImRheSBpczogIiArIGRheSk7IC8vcGFyYSBjYWRhIHJlZ2lhbwoKICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBfdGhpcy5yZWdpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgIGluZmVjdGFkb3MgPSAwOwogICAgICAgICAgICAgICAgICBvYml0b3MgPSAwOwoKICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IF90aGlzLmRhZG9zLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgLy9jb21wYXJhIHNlIGEgcmVnaWFvIGNvaW5jaWRlCiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLnJlZ2lvbnNbaV0gPT0gX3RoaXMuZGFkb3Nbal0ucmVnaWFvLnRvVXBwZXJDYXNlKCkpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmRhZG9zW2pdLmRhdGFFeHRyYWNhbyk7IC8vY29tcGFyYSBzZSBhIGRhdGEgY29pbmNpZGUKCiAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF5ID09IF90aGlzLmRhZG9zW2pdLmRhdGFFeHRyYWNhbykgewogICAgICAgICAgICAgICAgICAgICAgICBpbmZlY3RhZG9zICs9IF90aGlzLmRhZG9zW2pdLm51bTsKICAgICAgICAgICAgICAgICAgICAgICAgb2JpdG9zICs9IF90aGlzLmRhZG9zW2pdLm9iaXRvczsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIm9iaXRvcyAiICsgb2JpdG9zKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF90aGlzLmRhZG9zX2ZpbHRyYWRvcy5pbmZlY3RhZG9zLnB1c2goaW5mZWN0YWRvcyk7CgogICAgICAgICAgICAgICAgICBfdGhpcy5kYWRvc19maWx0cmFkb3Mub2JpdG9zLnB1c2gob2JpdG9zKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5pbmZlY3RhZG9zID0gX3RoaXMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3M7CiAgICAgICAgICAgICAgICBfdGhpcy5vYml0b3MgPSBfdGhpcy5kYWRvc19maWx0cmFkb3Mub2JpdG9zOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgcmVnaW9uczogZnVuY3Rpb24gcmVnaW9ucyh2YWwpIHsKICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgdGhpcy5kYWRvc19maWx0cmFkb3MgPSB7CiAgICAgICAgaW5mZWN0YWRvczogW10sCiAgICAgICAgZGlhOiBbXSwKICAgICAgICBvYml0b3M6IFtdCiAgICAgIH07CiAgICAgIHRoaXMuZmlsdGVyX2RhdGEoKTsKICAgICAgdGhpcy5udW1JZCsrOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,KAAA,MAAA,2BAAA;AACA,OAAA,KAAA,MAAA,2BAAA;AACA,OAAA,QAAA,MAAA,wBAAA;AACA,SAAA,IAAA,QAAA,6BAAA;AAEA,IAAA,QAAA,GAAA,IAAA,IAAA,EAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,EADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CADA;AAEA,MAAA,MAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,CACA,cADA,EACA,kBADA,EACA,WADA,EACA,YADA,EACA,eADA,EACA,SADA,EACA,UADA,EACA,cADA,EACA,oBADA,EACA,YADA,EACA,UADA,EACA,iBADA,EACA,YADA,EACA,gBADA,EACA,SADA,EACA,OADA,EACA,oBADA,EACA,gBADA,EACA,iBADA,EACA,mBADA,EACA,UADA,EACA,OADA,EACA,QADA,EACA,YADA,EACA,cADA,EACA,eADA,EACA,MADA,EACA,aADA,EACA,OADA,EACA,iBADA,EACA,QADA,EACA,SADA,EACA,eADA,EACA,KADA,EACA,OADA,EACA,YADA,EACA,WADA,EACA,gCADA,EACA,OADA,EACA,oBADA,CAJA;AAOA,MAAA,IAAA,EAAA,IAPA;AAQA,MAAA,QAAA,EAAA,EARA;AASA,MAAA,KAAA,EAAA,KAAA,CAAA,KATA;AAUA,MAAA,KAAA,EAAA,KAAA,CAAA,EAVA;AAWA,MAAA,eAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAXA;AAgBA,MAAA,UAAA,EAAA,EAhBA;AAiBA,MAAA,GAAA,EAAA,EAjBA;AAkBA,MAAA,MAAA,EAAA,EAlBA;AAmBA,MAAA,KAAA,EAAA;AAnBA,KAAA;AAqBA,GA5BA;AA6BA,EAAA,QAAA,EAAA,EA7BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,WAAA;AACA,SAAA,KAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,QAAA,CAAA,aAAA,EADA;;AAAA;AACA,gBAAA,GADA,iBACA,IADA;AAEA,gBAAA,OAAA,CAAA,GAAA,CAAA,aAAA,GAAA,EAFA,CAIA;;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,UADA,GACA,CADA;AAEA,kBAAA,MAFA,GAEA,CAFA;;AAGA,uBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA;AAEA,wBAAA,KAAA,CAAA,OAAA,CAAA,CAAA,KAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,WAAA,EAAA,EAAA;AACA,sBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,YAAA,EADA,CAEA;;AACA,0BAAA,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,YAAA,EAAA;AAEA,wBAAA,UAAA,IAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA;AACA,wBAAA,MAAA,IAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA;AACA,wBAAA,OAAA,CAAA,GAAA,CAAA,YAAA,MAAA;AACA;AACA;AACA;;AACA,kBAAA,KAAA,CAAA,eAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA;;AACA,kBAAA,KAAA,CAAA,eAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA;AACA;;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,eAAA,CAAA,UAAA;AACA,gBAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,eAAA,CAAA,MAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AA5BA,GAnCA;AAiEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WAAA,eAAA,GAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAAA;AAKA,WAAA,WAAA;AACA,WAAA,KAAA;AACA;AAVA;AAjEA,CAAA","sourcesContent":["<template>\n    <div>\n        <v-card>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n                <v-spacer/>\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips multiple/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <bar-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:region=\"regions\"\n                :key=\"numId\"\n            />\n            <v-card-actions>\n                <v-pagination\n                    v-model=\"page\"\n                    :length=\"3\"\n                    :total-visible=\"7\"\n                ></v-pagination>\n            </v-card-actions>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport data from \"../../../example/index.js\"\nimport dates from \"../../../example/dates.js\"\nimport barChart from \"../charts/BarChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ \n    ],\n    components: { \n        barChart\n    },\n    data(){\n        return {\n            page: 1,\n            drawer: true,\n            regions: [ ],\n            items: [\n                \"ÁGUAS CLARAS\", \"RECANTO DAS EMAS\", \"SAMAMBAIA\", \"TAGUATINGA\", \"VICENTE PIRES\", \"CENTRAL\", \"SUDOESTE\", \"PLANO PILOTO\", \"SUDOESTE/OCTOGONAL\", \"LAGO NORTE\", \"LAGO SUL\", \"VARJÃO DO TORTO\", \"CENTRO SUL\", \"CANDANGOLÂNDIA\", \"PARKWAY\", \"GUARÁ\", \"NÚCLEO BANDEIRANTE\", \"RIACHO FUNDO I\", \"RIACHO FUNDO II\", \"SCIA (ESTRUTURAL)\", \"CRUZEIRO\", \"NORTE\", \"FERCAL\", \"PLANALTINA\", \"SOBRADINHO I\", \"SOBRADINHO II\", \"GAMA\", \"SANTA MARIA\", \"LESTE\", \"JARDIM BOTÂNICO\", \"ITAPOÃ\", \"PARANOÁ\", \"SÃO SEBASTIÃO\", \"SUL\", \"OESTE\", \"BRAZLÂNDIA\", \"CEILÂNDIA\", \"POPULAÇÃO PRIVADA DE LIBERDADE\", \"S I A\", \"RA EM INVESTIGAÇÃO\"\n            ],\n            name: 'DF',\n            selected: [],\n            dates: dates.dates,\n            dados: data.DF,\n            dados_filtrados: {\n                infectados: [],\n                dia: [],\n                obitos: []\n            },\n            infectados: [],\n            dia: [],\n            obitos: [],\n            numId: 0\n        }\n    },\n    computed: {\n    },\n    mounted(){\n        this.filter_data()\n        this.numId++\n    },\n    methods: {\n        async filter_data(){\n            let day = (await api_data.get_last_date()).data\n            console.log(\"day is: \" + day)\n\n            //para cada regiao\n            for(let i = 0; i < this.regions.length; i++ ){\n                let infectados = 0\n                let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    //compara se a regiao coincide\n\n                    if( this.regions[i] == this.dados[j].regiao.toUpperCase() ){\n                        console.log(this.dados[j].dataExtracao);\n                        //compara se a data coincide\n                        if(day == this.dados[j].dataExtracao){\n            \n                        infectados += this.dados[j].num\n                        obitos += this.dados[j].obitos\n                        console.log(\"obitos \"+ obitos);\n                        }\n                    }\n                }\n                this.dados_filtrados.infectados.push(infectados)\n                this.dados_filtrados.obitos.push(obitos)\n            }\n            this.infectados = this.dados_filtrados.infectados\n            this.obitos = this.dados_filtrados.obitos\n        }\n    },\n    watch: {\n        regions: function(val) {\n            console.log(val)\n            this.dados_filtrados = {\n                infectados: [],\n                dia: [],\n                obitos: []\n            }\n            this.filter_data()\n            this.numId++\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>\n\n\n"],"sourceRoot":"src/views/Projeto/visualize"}]}