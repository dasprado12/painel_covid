{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue","mtime":1597692114466},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9wcmFkby9EZXNrdG9wL3Vpb3QvcGFpbmVsX2NvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFRyZWVNYXBJbmYgZnJvbSAiLi4vY2hhcnRzL1BpZUNoYXJ0LnZ1ZSI7CmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiOwp2YXIgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsncmVnaW9ucyddLAogIGNvbXBvbmVudHM6IHsKICAgIFRyZWVNYXBJbmY6IFRyZWVNYXBJbmYKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXJfZGF0YTogW10sCiAgICAgIGFtb3VudERhdGE6IFtdLAogICAgICBhbW91bnRSZWdpb25zOiBbXSwKICAgICAgY29sb3JzOiBbJyNlODUwNDYnLCAnI2U4ODc0NicsICcjZThjMDQ2JywgJyM4NTFjM2InLCAnIzQ4MWM4NSddLAogICAgICBrZXk6IDAKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMuZ2V0X2RhdGEoX3RoaXMucmVnaW9ucyk7CgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRfZGF0YTogZnVuY3Rpb24gZ2V0X2RhdGEocmVnaW9ucykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBsYXN0X2RhdGUsIGRhdGEsIGksIGo7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGxhc3RfZGF0ZSA9IF9jb250ZXh0Mi5zZW50LmRhdGEuc3BsaXQoIlQiKVswXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfcmVnaW9uX2J5X2RhdGUobGFzdF9kYXRlKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50LmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpczIuYW1vdW50RGF0YSA9IFtdOwogICAgICAgICAgICAgICAgX3RoaXMyLmFtb3VudFJlZ2lvbnMgPSBbXTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgcmVnaW9ucy5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgIGlmIChkYXRhW2ldLnJlZ2lhbyA9PSByZWdpb25zW2pdKSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpczIuYW1vdW50RGF0YS5wdXNoKGRhdGFbaV0ub2JpdG9zKTsKCiAgICAgICAgICAgICAgICAgICAgICBfdGhpczIuYW1vdW50UmVnaW9ucy5wdXNoKGRhdGFbaV0ucmVnaWFvKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpczIua2V5Kys7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICByZWdpb25zOiBmdW5jdGlvbiByZWdpb25zKHZhbCkgewogICAgICB0aGlzLmdldF9kYXRhKHZhbCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TreeObitos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAgBA,OAAA,UAAA,MAAA,wBAAA;AACA,SAAA,IAAA,QAAA,6BAAA;AAEA,IAAA,QAAA,GAAA,IAAA,IAAA,EAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,SAAA,CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAJA;AAKA,MAAA,GAAA,EAAA;AALA,KAAA;AAOA,GAXA;AAYA,EAAA,OAZA,qBAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,OADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,QAAA,CAAA,aAAA,EADA;;AAAA;AACA,gBAAA,SADA,kBACA,IADA,CACA,KADA,CACA,GADA,EACA,CADA;AAAA;AAAA,uBAEA,QAAA,CAAA,kBAAA,CAAA,SAAA,CAFA;;AAAA;AAEA,gBAAA,IAFA,kBAEA,IAFA;AAGA,gBAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,EAAA;;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,uBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,wBAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA;AACA,sBAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA;;AACA,sBAAA,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA;AACA;AACA;;AACA,gBAAA,MAAA,CAAA,GAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAfA,GAfA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,WAAA,QAAA,CAAA,GAAA;AACA;AAHA;AAhCA,CAAA","sourcesContent":["<template>\n    <div>\n        <v-card outlined color=\"grey lighten-4\">\n            <v-card-title class=\"font-weight-light\"> Regiões com mais óbitos </v-card-title>\n                <tree-map-inf \n                    :data=\"amountData\"\n                    :regions=\"amountRegions\"\n                    :colors=\"colors\"\n                    v-bind:obj=\"data_inf\" \n                    :key=\"key\"\n                />\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport TreeMapInf from \"../charts/PieChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ 'regions' ],\n    components: { TreeMapInf },\n    data(){\n        return {\n            filter_data: [],\n            amountData: [],\n            amountRegions: [],\n            colors: [ '#e85046', '#e88746', '#e8c046', '#851c3b', '#481c85'  ],\n            key: 0,\n        }\n    },\n    async created(){\n        this.get_data(this.regions)\n    },\n    methods: {\n        async get_data(regions){\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n            let data = ( await api_data.get_region_by_date(last_date) ).data\n            this.amountData = []\n            this.amountRegions = []\n            for(let i = 0; i < data.length; i++){\n                for(let j = 0; j < regions.length; j++){\n                    if(data[i].regiao == regions[j]){\n                        this.amountData.push(data[i].obitos)\n                        this.amountRegions.push(data[i].regiao)\n                    }\n                }\n            }\n            this.key++\n        },\n    },\n    watch:{\n        regions(val){\n            this.get_data(val)\n        }\n    }\n    \n}\n</script>"],"sourceRoot":"src/views/Projeto/components"}]}