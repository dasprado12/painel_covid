{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js!/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595856076030},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mapCss\">\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n        <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n        <span v-for=\"item in geojson\" :key=\"item\">\n            <l-geo-json :geojson=\"item\" :options=\"item.style\" ></l-geo-json>\n        </span> \n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n            <v-marker-cluster>\n                <l-marker v-show=\"showPoints\" v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                    <l-popup>\n                        <div @click=\"innerClick\">\n                            <v-card flat>\n                                <v-card-text>\n                                    <b>Região:</b> {{ point.regiao }}\n                                    <b>Infectados:</b> {{ point.num }}\n                                    <b>Óbitos:</b> {{ point.obitos }}\n                                </v-card-text>\n                            </v-card>\n                        </div>\n                    </l-popup>\n                </l-marker>\n            </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\nprops: [ 'showPoints', 'type' ],  \ncomponents: { \n        LGeoJson, \n        LMap, \n        LTileLayer, \n        LMarker, \n        LPopup, \n        LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster \n    },\ndata() {\n    return {\n        data: null,\n        filteredData: [],\n        geojson: null,\n        last_date: null,\n        zoom: 10,\n        colors: {\n            num: [ '#ccffd1', '#8de096', '#4cba58', '#4cba58', '#0f851b' ],\n            obitos: [ '#ffc2c2', '#e08080', '#c24c4c', '#ab2727', '#870b0b' ]\n        },\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        range: {\n            \"num\": [ 40, 80, 120, 160 ],\n            \"obitos\":[ 40, 80, 120, 160 ]\n        }\n    };\n},\nwatch:{\n    showPoints(val){\n        if(val == true){\n            this.filteredData = this.data\n        }\n        if(val == false){\n            this.filteredData = []\n        }\n    }\n},\nasync created(){\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json() \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date2(last_date) ).data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude, lng: data.longitude}\n            return data\n        })\n        this.data = data\n        for(let i = 0; i < geojson.length; i++){\n            for(let j = 0; j < data.length; j++){\n                if(geojson[i].name == data[j].regiao){\n                    if(data[j][this.type] < this.range[this.type][0]){\n                        geojson[i]['style'] = { color: this.colors[this.type][0], weight: 1 }\n                    }else if(data[j][this.type] >= this.range[this.type][0] && data[j][this.type] < this.range[this.type][1] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][1], weight: 1 }\n                    }else if(data[j][this.type] >= this.range[this.type][1] && data[j][this.type] < this.range[this.type][2]){\n                        geojson[i]['style'] = { color: this.colors[this.type][2], weight: 1 }\n                    }else if(data[j][this.type] >= this.range[this.type][2] && data[j][this.type] < this.range[this.type][3] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][3], weight: 1 }\n                    }else if(data[j][this.type] >= this.range[this.type][3]){\n                        geojson[i]['style'] = { color: this.colors[this.type][4], weight: 1 }\n                    }else{\n                        geojson[i]['style'] = { color: \"#828282\" }\n                    }\n                }\n            }\n        }\n        this.geojson = geojson\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}