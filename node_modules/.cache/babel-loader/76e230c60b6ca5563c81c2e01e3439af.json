{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue","mtime":1592357361714},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLWlzby1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBsaW5lQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL0xpbmVDaGFydC52dWUiOwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsKdmFyIGFwaV9kYXRhID0gbmV3IERhdGEoKTsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ3JlZ2lvbiddLAogIGNvbXBvbmVudHM6IHsKICAgIGxpbmVDaGFydDogbGluZUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVnaW9uczogW10sCiAgICAgIGRhdGE6IG51bGwsCiAgICAgIGl0ZW1zOiBudWxsLAogICAgICB0eXBlOiAnbGluZScsCiAgICAgIGluZmVjdGFkb3M6IFtudWxsXSwKICAgICAgZGF0ZXM6IFtudWxsXSwKICAgICAgb2JpdG9zOiBbbnVsbF0sCiAgICAgIG51bUlkOiAwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF90aGlzLmdldF9yZWdpb25zKCk7CgogICAgICAgICAgICAgIF90aGlzLmdldF9kYXRhKCcnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIHdhdGNoOiB7CiAgICByZWdpb25zOiBmdW5jdGlvbiByZWdpb25zKHZhbCkgewogICAgICB0aGlzLmdldF9kYXRhKHZhbCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRfZGF0YTogZnVuY3Rpb24gZ2V0X2RhdGEocmVnaW9uKSB7CiAgICAgIHZhciBkYXRhID0gYXBpX2RhdGEuZ2V0X2RhdGFfYnlfcmVnaW9uKHJlZ2lvbik7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICB2YXIgaW5mZWN0YWRvcyA9IFtdOwogICAgICB2YXIgZGF0ZXMgPSBbXTsKICAgICAgdmFyIG9iaXRvcyA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaW5mZWN0YWRvcy5wdXNoKGRhdGFbaV0ubnVtKTsKICAgICAgICBkYXRlcy5wdXNoKG5ldyBEYXRlKGRhdGFbaV0uZGF0YUV4dHJhY2FvKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0uc2xpY2UoNSkpOwogICAgICAgIG9iaXRvcy5wdXNoKGRhdGFbaV0ub2JpdG9zKTsKICAgICAgfQoKICAgICAgdGhpcy5pbmZlY3RhZG9zID0gaW5mZWN0YWRvczsKICAgICAgdGhpcy5kYXRlcyA9IGRhdGVzOwogICAgICB0aGlzLm9iaXRvcyA9IG9iaXRvczsKICAgICAgdGhpcy5udW1JZCsrOwogICAgfSwKICAgIGdldF9yZWdpb25zOiBmdW5jdGlvbiBnZXRfcmVnaW9ucygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9hbGxfcmVnaW9ucygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczIuaXRlbXMgPSBfY29udGV4dDIuc2VudC5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjaGFuZ2VDaGFydDogZnVuY3Rpb24gY2hhbmdlQ2hhcnQoaXRlbSkgewogICAgICB0aGlzLnR5cGUgPSBpdGVtOwogICAgICB0aGlzLm51bUlkKys7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RegionLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,SAAA,MAAA,yBAAA;AACA,SAAA,IAAA,QAAA,6BAAA;AAEA,IAAA,QAAA,GAAA,IAAA,IAAA,EAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,MAJA;AAKA,MAAA,UAAA,EAAA,CAAA,IAAA,CALA;AAMA,MAAA,KAAA,EAAA,CAAA,IAAA,CANA;AAOA,MAAA,MAAA,EAAA,CAAA,IAAA,CAPA;AAQA,MAAA,KAAA,EAAA;AARA,KAAA;AAUA,GAdA;AAeA,EAAA,OAfA,qBAeA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,KAAA,CAAA,WAAA;;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,EAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,GAlBA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,WAAA,QAAA,CAAA,GAAA;AACA;AAHA,GAnBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,MADA,EACA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,kBAAA,CAAA,MAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,YAAA,EAAA,WAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA;;AACA,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA;AACA,KAhBA;AAiBA,IAAA,WAjBA,yBAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,QAAA,CAAA,eAAA,EADA;;AAAA;AACA,gBAAA,MAAA,CAAA,KADA,kBACA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAnBA;AAoBA,IAAA,WApBA,uBAoBA,IApBA,EAoBA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA;AACA;AAvBA;AAxBA,CAAA","sourcesContent":["<template>\n    <div>\n        <v-card>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <line-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:type=\"type\"\n                :key=\"numId\"\n            />\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"changeChart('line')\">Line</v-btn>\n                <v-btn text @click=\"changeChart('bar')\">Bar</v-btn>\n            </v-card-actions>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport lineChart from \"../charts/LineChart.vue\"\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ 'region' ],\n    components: { lineChart },\n    data(){\n        return {\n            regions: [ ],\n            data: null,\n            items: null,\n            type: 'line',\n            infectados: [null],\n            dates: [null],\n            obitos: [null],\n            numId: 0\n        }\n    },\n    async mounted(){\n        this.get_regions()\n        this.get_data('')\n    },\n    watch: {\n        regions(val){\n            this.get_data(val)\n        }\n    },\n    methods: {\n        get_data(region){\n            let data = api_data.get_data_by_region(region)\n            console.log(data)\n            let infectados = []\n            let dates = []\n            let obitos = []\n            for(let i = 0; i < data.length; i++){\n                infectados.push(data[i].num)\n                dates.push( new Date( data[i].dataExtracao).toISOString().split('T')[0].slice(5) )\n                obitos.push(data[i].obitos)\n            }\n            this.infectados = infectados\n            this.dates = dates\n            this.obitos = obitos\n            this.numId++\n        },\n        async get_regions(){\n            this.items = (await api_data.get_all_regions()).data\n        },\n        changeChart(item){\n            this.type = item\n            this.numId++\n        }\n    }       \n}\n</script>"],"sourceRoot":"src/views/Projeto/visualize"}]}