{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1597697156094},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mapCss\">\n        <div class=\"legenda\">\n            <v-card elevation=\"5\">\n                <v-row>\n                    <v-col cols=\"6\">\n                        <v-card-title class=\"`white--text`\">\n                            <h5 :class=\"`${changeTxtColor(currentOption.color)}--text`\">{{currentOption.name}}</h5>\n                        </v-card-title>\n                        <v-card-text>\n                            <span class=\"legenda-texto\"> <b>Infectados:</b> {{currentOption.num}} </span><br>\n                            <span class=\"legenda-texto\"> <b>Óbitos:</b> {{currentOption.obitos}} </span>\n                        </v-card-text>\n                    </v-col>\n                    <v-col cols=\"6\">\n                            <v-card-text>\n                                <div v-for=\"(item,idx) in legenda()\" :key=\"item\">\n                                    <span v-if=\"idx==0\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> 0 - {{item.menor-1}}  </span>\n                                    <span v-if=\"idx>=1 && idx <=3\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> {{item.maior}} - {{item.menor-1}}  </span>\n                                    <span v-if=\"idx==4\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> {{item.maior}} - maior  </span>\n                                </div>\n                            </v-card-text>\n                    </v-col>\n                </v-row>\n            </v-card>\n        </div>\n        <div class=\"legenda2\">\n            <v-card flat color=\"transparent\">\n                \n            </v-card>\n        </div>\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n            <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n            <l-geo-json \n                v-for=\"item in geojson\" \n                :geojson=\"item\" \n                :options=\"item.style\" \n                :key=\"item.name\"\n                @mouseover=\"mouseOver(item)\"\n            />                \n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n                <v-marker-cluster>\n                    <l-marker  v-for=\"point in filteredData\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                        <l-popup>\n                            <div @click=\"innerClick\">\n                                <v-card flat>\n                                    <v-card-title><b>Região:</b> {{ point.regiao }}</v-card-title>\n                                    <v-card-text>\n                                        <b>Infectados:</b> {{ point.num }}\n                                        <b>Óbitos:</b> {{ point.obitos }}\n                                    </v-card-text>\n                                </v-card>\n                            </div>\n                        </l-popup>\n                    </l-marker>\n                </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\nprops: [ 'showPoints', 'type' ],  \ncomponents: { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster,\n},\ndata() {\n    return {\n        data: null,\n        filteredData: null,\n        geojson: null,\n        last_date: null,\n        zoom: 10,\n        colors: {\n            num:    [ '#edded1', '#e3bd9d', '#d4935d', '#d16b17', '#854007' ],\n            obitos: [ '#f2e6e6', '#edbbbb', '#d67c7c', '#b33e3e', '#660404' ]\n        },\n        center: latLng(-15.793599, -47.814987),\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        range: {\n            num: [ 1000, 2000, 3000, 4000 ],\n            obitos:[ 10, 20, 30, 40 ]\n        },\n        currentOption: {\n            name: '',\n            num: '',\n            obitos: '',\n            color: null\n        }\n    }\n},\nasync mounted(){\n    this.create();\n    this.setCurrent({style:{color:''}, data:{regiao:'Região', num:'--------', obitos: '---------' }})\n},\nmethods: {\n    async create(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json() \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        this.range = {\n            num: [ 1000, 2000, 3000, 4000 ],\n            obitos:[ 10, 20, 30, 40 ]\n        }//(await api_data.get_incid()).data.map(function(item){return ~~item})\n        let data = (await api_data.get_region_by_date(last_date) ).data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude, lng: data.longitude}\n            return data\n        })\n        this.data = data\n        for(let i = 0; i < geojson.length; i++){\n            for(let j = 0; j < data.length; j++){\n                if(geojson[i].name == data[j].regiao){\n                    geojson[i]['data'] = { \"regiao\": data[j].regiao, \"num\": data[j].num, \"obitos\": data[j].obitos   }\n                    if(data[j][this.type] < this.range[this.type][0]){\n                        geojson[i]['style'] = { color: this.colors[this.type][0], weight: 2 }\n                    }else if(data[j][this.type] >= this.range[this.type][0] && data[j][this.type] < this.range[this.type][1] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][1], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][1] && data[j][this.type] < this.range[this.type][2]){\n                        geojson[i]['style'] = { color: this.colors[this.type][2], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][2] && data[j][this.type] < this.range[this.type][3] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][3], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][3]){\n                        geojson[i]['style'] = { color: this.colors[this.type][4], weight: 2 }\n                    \n                    }else{\n                        geojson[i]['style'] = { color: \"#828282\" }\n                    }\n                }\n            }\n        }\n        this.geojson = geojson\n    },\n    legenda(){\n        let ret = this.range[this.type]\n        let arr_ret = []\n        for(let i = 0; i < ret.length; i++){\n            if(i==0){\n                arr_ret.push({'menor': ret[i]})\n            }else if(i == 1){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n            }else if(i == 2){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n            }else if(i == 3){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n                arr_ret.push({'maior': ret[i]})\n            }\n        }\n        return arr_ret\n    },\n    getColor(tipo, posicao){\n        return this.colors[this.type][posicao]\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    },\n    showPopup(val){\n        alert(val)\n    },\n    mouseOver(item){\n        this.setCurrent(item)\n    },\n    setCurrent(item){\n        this.currentOption.color = item.style.color\n        this.currentOption.name = item.data.regiao\n        this.currentOption.num = item.data.num\n        this.currentOption.obitos = item.data.obitos\n    },\n    changeTxtColor(color){\n        console.log(color)\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n.cardColor{\n    background-color: rgb(240, 240, 240);\n}\n.legenda{\n    margin-left: 25px;\n    margin-top: 305px;\n    position: absolute;\n    z-index: 500;\n    color: rgb(202, 109, 109);\n}\n\n.text-legend{\n    position: absolute;\n    z-index: 500;\n}\n\n.simple-space{\n    padding-left: 20px;\n}\n\n.currentColor{\n    position: absolute;\n}\n\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}