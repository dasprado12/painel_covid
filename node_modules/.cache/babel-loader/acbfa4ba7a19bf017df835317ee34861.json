{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js??ref--13-0!/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/functions/index.js","mtime":1598028796728},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL3ByYWRvL0Rlc2t0b3AvdWlvdC9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9wcmFkby9EZXNrdG9wL3Vpb3QvcGFpbmVsX2NvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciB1cmwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0FQSSArICcvYXBpL3JlZ2lvbnMnOwp2YXIgdXJsMiA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJdjIgKyAnL2FwaXYyL3JlZ2lhby8nOwp2YXIgZW5kcG9pbnRzID0gewogIGFsbF9kYXRhOiB1cmwsCiAgbWFueV9yZWdpb25zOiB1cmwgKyAnL2xpc3RNYW55JywKICBhbGxfcmVnaW9uczogdXJsICsgJy9saXN0JywKICBhbGxfZGF0ZXM6IHVybCArICcvZGF0ZXMnLAogIGxhc3RfZGF0ZTogdXJsICsgJy9uZXdlc3REYXRlJwp9OwpleHBvcnQgdmFyIERhdGEgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIERhdGEoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGF0YSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfYWxsX2RhdGEiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLmFsbF9kYXRhKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2hpc3RfZGF0YSIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwgKyAnP3JlZ2lhbz1Ub3RhbCBERicpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfYWxsX3JlZ2lvbnMiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQoZW5kcG9pbnRzLmFsbF9yZWdpb25zKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2FsbF9kYXRlcyIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGF4aW9zLmdldChlbmRwb2ludHMuYWxsX2RhdGVzKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2RhdGFfYnlfcmVnaW9uIiwgZnVuY3Rpb24gKHJlZ2lvbikgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCArICc/cmVnaWFvPScgKyByZWdpb24pOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJnZXRfcmVnaW9uX2J5X2RhdGUiLCBmdW5jdGlvbiAodGltZSkgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCArICc/ZGF0YUV4dHJhY2FvPScgKyB0aW1lKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X3JlZ2lvbl9ieV9kYXRlMiIsIGZ1bmN0aW9uICh0aW1lKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQodXJsMiArICc/ZGF0YUV4dHJhY2FvPScgKyB0aW1lKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0X2luY2lkIiwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybDIgKyAnbWF4aW5jaWQnKTsKICAgIH0pOwogIH0KCiAgX2NyZWF0ZUNsYXNzKERhdGEsIFt7CiAgICBrZXk6ICJnZXRfbGFzdF9kYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0X2xhc3RfZGF0ZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgbGFzdF9kYXRlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChlbmRwb2ludHMuZGF0ZXMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBsYXN0X2RhdGUgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRFU1RBTkRPOiAiICsgbGFzdF9kYXRlKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGxhc3RfZGF0ZSgtMSlbMF0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0X2xhc3RfZGF0ZSgpIHsKICAgICAgICByZXR1cm4gX2dldF9sYXN0X2RhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldF9sYXN0X2RhdGU7CiAgICB9KCkgLy8gZ2V0X2xhc3RfZGF0ZSA9ICgpID0+IGF4aW9zLmdldChlbmRwb2ludHMubGFzdF9kYXRlKQoKICB9LCB7CiAgICBrZXk6ICJnZXRfbWFueV9kYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRfbWFueV9kYXRhKHR5cGUsIHJlZ2lvbnMpIHsKICAgICAgaWYgKCF0eXBlKSB7CiAgICAgICAgdHlwZSA9ICdudW0nOwogICAgICB9CgogICAgICByZXR1cm4gYXhpb3MuZ2V0KGVuZHBvaW50cy5tYW55X3JlZ2lvbnMgKyAiLyIuY29uY2F0KHR5cGUpICsgJz9yZWdpYW89JyArIHJlZ2lvbnMpOwogICAgfSAvLyBnZXRfb25lX3JlZ2lvbl9ieV9kYXRhID0gKGRhdGUpID0+IGF4aW9zLmdldCh1cmwpCiAgICAvLyBnZXRfYWxsID0gKCkgPT4gYXhpb3MuZ2V0KGVuZHBvaW50cy5hbGwpCgogIH1dKTsKCiAgcmV0dXJuIERhdGE7Cn0oKTs="},{"version":3,"sources":["/home/prado/Desktop/uiot/painel_covid/src/functions/index.js"],"names":["axios","url","process","env","VUE_APP_API","url2","VUE_APP_APIv2","endpoints","all_data","many_regions","all_regions","all_dates","last_date","Data","get","region","time","dates","console","log","type","regions"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0B,cAAtC;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,aAAZ,GAA4B,gBAAzC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAEP,GADI;AAEdQ,EAAAA,YAAY,EAAER,GAAG,GAAG,WAFN;AAGdS,EAAAA,WAAW,EAAET,GAAG,GAAG,OAHL;AAIdU,EAAAA,SAAS,EAAEV,GAAG,GAAG,QAJH;AAKdW,EAAAA,SAAS,EAAEX,GAAG,GAAG;AALH,CAAlB;AAQA,WAAaY,IAAb;AAAA;AAAA;;AAAA,0CAEmB;AAAA,aAAMb,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACC,QAApB,CAAN;AAAA,KAFnB;;AAAA,2CAIoB;AAAA,aAAMR,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,kBAAd,CAAN;AAAA,KAJpB;;AAAA,6CAMsB;AAAA,aAAMD,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACG,WAApB,CAAN;AAAA,KANtB;;AAAA,2CAQoB;AAAA,aAAMV,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACI,SAApB,CAAN;AAAA,KARpB;;AAAA,gDAiByB,UAACI,MAAD;AAAA,aAAYf,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,UAAJ,GAAec,MAAzB,CAAZ;AAAA,KAjBzB;;AAAA,gDA4ByB,UAACC,IAAD;AAAA,aAAUhB,KAAK,CAACc,GAAN,CAAUb,GAAG,GAAC,gBAAJ,GAAqBe,IAA/B,CAAV;AAAA,KA5BzB;;AAAA,iDA6ByB,UAACA,IAAD;AAAA,aAAUhB,KAAK,CAACc,GAAN,CAAUT,IAAI,GAAC,gBAAL,GAAsBW,IAAhC,CAAV;AAAA,KA7BzB;;AAAA,uCA+BgB;AAAA,aAAMhB,KAAK,CAACc,GAAN,CAAUT,IAAI,GAAC,UAAf,CAAN;AAAA,KA/BhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAW8BL,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACU,KAApB,CAX9B;;AAAA;AAWYL,gBAAAA,SAXZ;AAYQM,gBAAAA,OAAO,CAACC,GAAR,CAAY,eAAeP,SAA3B;AAZR,iDAaeA,SAAS,CAAC,CAAC,CAAF,CAAT,CAAc,CAAd,CAbf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAeI;;AAfJ;AAAA;AAAA,kCAmBkBQ,IAnBlB,EAmBwBC,OAnBxB,EAmBgC;AACxB,UAAG,CAACD,IAAJ,EAAS;AACLA,QAAAA,IAAI,GAAG,KAAP;AACH;;AACD,aAAOpB,KAAK,CAACc,GAAN,CAAUP,SAAS,CAACE,YAAV,cAA2BW,IAA3B,IAAkC,UAAlC,GAA6CC,OAAvD,CAAP;AACH,KAxBL,CA0BI;AAOA;;AAjCJ;;AAAA;AAAA","sourcesContent":["import axios from 'axios'\n\nconst url = process.env.VUE_APP_API + '/api/regions'\nconst url2 = process.env.VUE_APP_APIv2 + '/apiv2/regiao/'\n\nconst endpoints = {\n    all_data: url,\n    many_regions: url + '/listMany',\n    all_regions: url + '/list',\n    all_dates: url + '/dates',\n    last_date: url + '/newestDate'\n}\n\nexport class Data {\n\n    get_all_data = () => axios.get(endpoints.all_data)\n\n    get_hist_data = () => axios.get(url+'?regiao=Total DF')\n\n    get_all_regions = () => axios.get(endpoints.all_regions)\n    \n    get_all_dates = () => axios.get(endpoints.all_dates)\n\n    async get_last_date(){\n        let last_date = await axios.get(endpoints.dates)\n        console.log(\"TESTANDO: \" + last_date)\n        return last_date(-1)[0]\n    }\n    // get_last_date = () => axios.get(endpoints.last_date)\n\n    get_data_by_region = (region) => axios.get(url+'?regiao='+region)\n\n    get_many_data(type, regions){\n        if(!type){\n            type = 'num'\n        }\n        return axios.get(endpoints.many_regions+`/${type}`+'?regiao='+regions)\n    } \n\n    // get_one_region_by_data = (date) => axios.get(url)\n\n    get_region_by_date = (time) => axios.get(url+'?dataExtracao='+time)\n    get_region_by_date2 =(time) => axios.get(url2+'?dataExtracao='+time)\n\n    get_incid = () => axios.get(url2+'maxincid')\n\n    // get_all = () => axios.get(endpoints.all)\n}\n"]}]}