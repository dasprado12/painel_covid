{"remainingRequest":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\BrasilLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\BrasilLine.vue","mtime":1593045827591},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591025987221},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":1590690790716},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1592265207055},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":1593041807827}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy9uYXRoYS9Qcm9qZXRvcy9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsgLy8gaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiCgppbXBvcnQgbGluZUNoYXJ0IGZyb20gIi4uL2NoYXJ0cy9MaW5lQ2hhcnQudnVlIjsKdmFyIGFwaV9kYXRhID0gbmV3IERhdGEoKTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIGxpbmVDaGFydDogbGluZUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gRGFkb3MgcXVlIHZhbyBwYXJhIG8gbGluZUNoYXJ0CiAgICAgIHR5cGU6ICJsaW5lIiwKICAgICAgaW5mZWN0YWRvczogW10sCiAgICAgIG9iaXRvczogW10sCiAgICAgIG51bUlkOiAwLAogICAgICBzZWxlY3RlZDogWyJJbmZlY3RhZG9zIiwgIk9iaXRvcyJdLAogICAgICBkYXRlczogbnVsbCwKICAgICAgLy8gRGF0YXMgdmluZG9zIGRhIEFQSQogICAgICBkYWRvczogbnVsbCAvLyBEYWRvcyB2aW5kb3MgZGEgQVBJCgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpcy5saXN0X2RhdGEoKTsKCiAgICAgICAgICAgICAgX3RoaXMubGlzdF9kYXRlcygpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsvLyB0aGlzLm1vZGlmeV9kYXRlcygpCiAgfSwKICBtZXRob2RzOiB7CiAgICBsaXN0X2RhdGE6IGZ1bmN0aW9uIGxpc3RfZGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9hbGxfZGF0YSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczIuZGFkb3MgPSBfY29udGV4dDIuc2VudC5kYXRhLm1hcChmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIG51bTogZGF0YS5udW0sCiAgICAgICAgICAgICAgICAgICAgb2JpdG9zOiBkYXRhLm9iaXRvcywKICAgICAgICAgICAgICAgICAgICBkYXRhRXh0cmFjYW86IGRhdGEuZGF0YUV4dHJhY2FvLnNwbGl0KCJUIilbMF0KICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsaXN0X2RhdGVzOiBmdW5jdGlvbiBsaXN0X2RhdGVzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpX2RhdGEuZ2V0X2FsbF9kYXRlcygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczMuZGF0ZXMgPSBfY29udGV4dDMuc2VudC5kYXRhLnNvcnQoKS5tYXAoZnVuY3Rpb24gKGRhdGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGUuc3BsaXQoIlQiKVswXTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjaGFuZ2VDaGFydDogZnVuY3Rpb24gY2hhbmdlQ2hhcnQoaXRlbSkgewogICAgICB0aGlzLnR5cGUgPSBpdGVtOwogICAgICB0aGlzLm51bUlkKys7CiAgICB9LAogICAgZmlsdGVyX2RhdGE6IGZ1bmN0aW9uIGZpbHRlcl9kYXRhKCkgewogICAgICB2YXIgZmlsdHJhZG9faW5mZWN0YWRvcyA9IFtdOwogICAgICB2YXIgZmlsdHJhZG9fb2JpdG9zID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZGF0ZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgaW5mZWN0YWRvcyA9IDA7CiAgICAgICAgdmFyIG9iaXRvcyA9IDA7CgogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5kYWRvcy5sZW5ndGg7IGorKykgewogICAgICAgICAgaWYgKHRoaXMuZGF0ZXNbaV0gPT0gdGhpcy5kYWRvc1tqXS5kYXRhRXh0cmFjYW8pIHsKICAgICAgICAgICAgaW5mZWN0YWRvcyArPSB0aGlzLmRhZG9zW2pdLm51bTsKICAgICAgICAgICAgb2JpdG9zICs9IHRoaXMuZGFkb3Nbal0ub2JpdG9zOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZmlsdHJhZG9faW5mZWN0YWRvcy5wdXNoKGluZmVjdGFkb3MpOwogICAgICAgIGZpbHRyYWRvX29iaXRvcy5wdXNoKG9iaXRvcyk7CiAgICAgIH0KCiAgICAgIHRoaXMuaW5mZWN0YWRvcyA9IGZpbHRyYWRvX2luZmVjdGFkb3M7CiAgICAgIHRoaXMub2JpdG9zID0gZmlsdHJhZG9fb2JpdG9zOwogICAgICB0aGlzLm51bUlkKys7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGF0ZXM6IGZ1bmN0aW9uIGRhdGVzKHZhbCkgewogICAgICBpZiAodmFsICE9IG51bGwpIHsKICAgICAgICB0aGlzLmZpbHRlcl9kYXRhKCk7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RlZDogZnVuY3Rpb24gc2VsZWN0ZWQodmFsKSB7CiAgICAgIGlmICghdmFsLmluY2x1ZGVzKCJPYml0b3MiKSkgewogICAgICAgIHRoaXMub2JpdG9zID0gWzBdOwogICAgICAgIHRoaXMubnVtSWQrKzsKICAgICAgfQoKICAgICAgaWYgKHZhbC5pbmNsdWRlcygiT2JpdG9zIikpIHsKICAgICAgICB0aGlzLm9iaXRvcyA9IHRoaXMuZGFkb3NfZmlsdHJhZG9zLm9iaXRvczsKICAgICAgICB0aGlzLm51bUlkKys7CiAgICAgIH0KCiAgICAgIGlmICghdmFsLmluY2x1ZGVzKCJJbmZlY3RhZG9zIikpIHsKICAgICAgICB0aGlzLmluZmVjdGFkb3MgPSBbMF07CiAgICAgICAgdGhpcy5udW1JZCsrOwogICAgICB9CgogICAgICBpZiAodmFsLmluY2x1ZGVzKCJJbmZlY3RhZG9zIikpIHsKICAgICAgICB0aGlzLmluZmVjdGFkb3MgPSB0aGlzLmRhZG9zX2ZpbHRyYWRvcy5pbmZlY3RhZG9zOwogICAgICAgIHRoaXMubnVtSWQrKzsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["BrasilLine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <v-card flat outlined>\r\n      <v-card-title>\r\n        <span class=\"font-weight-light\"> Total </span>\r\n        <v-spacer />\r\n        <v-btn text small class=\"font-weight-light\" @click=\"changeChart('line')\"\r\n          >Linha</v-btn\r\n        >\r\n        <v-btn text small class=\"font-weight-light\" @click=\"changeChart('bar')\"\r\n          >Barra</v-btn\r\n        >\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n      <v-card-text>\r\n        <line-chart\r\n          v-bind:infected=\"infectados\"\r\n          v-bind:time=\"dates\"\r\n          v-bind:death=\"obitos\"\r\n          v-bind:type=\"type\"\r\n          :key=\"numId\"\r\n        />\r\n      </v-card-text>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Data } from \"../../../functions/index.js\";\r\n// import dates from \"../../../example/dates.js\"\r\nimport lineChart from \"../charts/LineChart.vue\";\r\n\r\nlet api_data = new Data();\r\n\r\nexport default {\r\n  components: {\r\n    lineChart\r\n  },\r\n  data() {\r\n    return {\r\n      // Dados que vao para o lineChart\r\n      type: \"line\",\r\n      infectados: [],\r\n      obitos: [],\r\n      numId: 0,\r\n\r\n      selected: [\"Infectados\", \"Obitos\"],\r\n\r\n      dates: null, // Datas vindos da API\r\n      dados: null // Dados vindos da API\r\n    };\r\n  },\r\n  async created() {\r\n    this.list_data();\r\n    this.list_dates();\r\n  },\r\n  mounted() {\r\n    // this.modify_dates()\r\n  },\r\n  methods: {\r\n    async list_data() {\r\n      this.dados = (await api_data.get_all_data()).data.map(function(data) {\r\n        return {\r\n          num: data.num,\r\n          obitos: data.obitos,\r\n          dataExtracao: data.dataExtracao.split(\"T\")[0]\r\n        };\r\n      });\r\n    },\r\n    async list_dates() {\r\n      this.dates = (await api_data.get_all_dates()).data\r\n        .sort()\r\n        .map(function(date) {\r\n          return date.split(\"T\")[0];\r\n        });\r\n    },\r\n    changeChart(item) {\r\n      this.type = item;\r\n      this.numId++;\r\n    },\r\n    filter_data() {\r\n      let filtrado_infectados = [];\r\n      let filtrado_obitos = [];\r\n      for (let i = 0; i < this.dates.length; i++) {\r\n        let infectados = 0;\r\n        let obitos = 0;\r\n        for (let j = 0; j < this.dados.length; j++) {\r\n          if (this.dates[i] == this.dados[j].dataExtracao) {\r\n            infectados += this.dados[j].num;\r\n            obitos += this.dados[j].obitos;\r\n          }\r\n        }\r\n        filtrado_infectados.push(infectados);\r\n        filtrado_obitos.push(obitos);\r\n      }\r\n      this.infectados = filtrado_infectados;\r\n      this.obitos = filtrado_obitos;\r\n      this.numId++;\r\n    }\r\n  },\r\n  watch: {\r\n    dates(val) {\r\n      if (val != null) {\r\n        this.filter_data();\r\n      }\r\n    },\r\n    selected: function(val) {\r\n      if (!val.includes(\"Obitos\")) {\r\n        this.obitos = [0];\r\n        this.numId++;\r\n      }\r\n      if (val.includes(\"Obitos\")) {\r\n        this.obitos = this.dados_filtrados.obitos;\r\n        this.numId++;\r\n      }\r\n      if (!val.includes(\"Infectados\")) {\r\n        this.infectados = [0];\r\n        this.numId++;\r\n      }\r\n      if (val.includes(\"Infectados\")) {\r\n        this.infectados = this.dados_filtrados.infectados;\r\n        this.numId++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.selector {\r\n  text-align: center;\r\n  align-content: center;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/Projeto/visualize"}]}