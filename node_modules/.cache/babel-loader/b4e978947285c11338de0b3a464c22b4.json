{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/BrasilLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/BrasilLine.vue","mtime":1592411492496},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ByYWRvL0Rlc2t0b3AvdWlvdC9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsgLy8gaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiCgppbXBvcnQgbGluZUNoYXJ0IGZyb20gIi4uL2NoYXJ0cy9MaW5lQ2hhcnQudnVlIjsKdmFyIGFwaV9kYXRhID0gbmV3IERhdGEoKTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIGxpbmVDaGFydDogbGluZUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHlwZTogJ2xpbmUnLAogICAgICBuYW1lOiAnQnJhc2lsJywKICAgICAgc2VsZWN0ZWQ6IFsnSW5mZWN0YWRvcycsICdPYml0b3MnXSwKICAgICAgZGF0ZXM6IG51bGwsCiAgICAgIGRhZG9zOiBudWxsLAogICAgICB0aW1lOiBudWxsLAogICAgICBkYWRvc19maWx0cmFkb3M6IHsKICAgICAgICBpbmZlY3RhZG9zOiBbXSwKICAgICAgICBkaWE6IFtdLAogICAgICAgIG9iaXRvczogW10KICAgICAgfSwKICAgICAgaW5mZWN0YWRvczogW10sCiAgICAgIGRpYTogW10sCiAgICAgIG9iaXRvczogW10sCiAgICAgIG51bUlkOiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF90aGlzLmxpc3RfZGF0YSgpOwoKICAgICAgICAgICAgICBfdGhpcy5saXN0X2RhdGVzKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5tb2RpZnlfZGF0ZXMoKTsKICAgIHRoaXMuZmlsdGVyX2RhdGEoKTsKICAgIHRoaXMubnVtSWQrKzsKICB9LAogIG1ldGhvZHM6IHsKICAgIG1vZGlmeV9kYXRlczogZnVuY3Rpb24gbW9kaWZ5X2RhdGVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIudGltZSA9IF90aGlzMi5kYXRlcy5tYXAoZnVuY3Rpb24gKHRpbWUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRpbWUuc3BsaXQoJ1QnKVswXS5zbGljZSg1KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsaXN0X2RhdGE6IGZ1bmN0aW9uIGxpc3RfZGF0YSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9hbGxfZGF0YSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczMuZGFkb3MgPSBfY29udGV4dDMuc2VudC5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsaXN0X2RhdGVzOiBmdW5jdGlvbiBsaXN0X2RhdGVzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpX2RhdGEuZ2V0X2FsbF9kYXRlcygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczQuZGF0ZXMgPSBfY29udGV4dDQuc2VudC5kYXRhLnNvcnQoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY2hhbmdlQ2hhcnQ6IGZ1bmN0aW9uIGNoYW5nZUNoYXJ0KGl0ZW0pIHsKICAgICAgdGhpcy50eXBlID0gaXRlbTsKICAgICAgdGhpcy5udW1JZCsrOwogICAgfSwKICAgIGZpbHRlcl9kYXRhOiBmdW5jdGlvbiBmaWx0ZXJfZGF0YSgpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmRhdGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGluZmVjdGFkb3MgPSAwOwogICAgICAgIHZhciBvYml0b3MgPSAwOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuZGFkb3MubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIGlmICh0aGlzLmRhdGVzW2ldID09IHRoaXMuZGFkb3Nbal0uZGF0YUV4dHJhY2FvKSB7CiAgICAgICAgICAgIGluZmVjdGFkb3MgKz0gdGhpcy5kYWRvc1tqXS5udW07CiAgICAgICAgICAgIG9iaXRvcyArPSB0aGlzLmRhZG9zW2pdLm9iaXRvczsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3MucHVzaChpbmZlY3RhZG9zKTsKICAgICAgICB0aGlzLmRhZG9zX2ZpbHRyYWRvcy5vYml0b3MucHVzaChvYml0b3MpOwogICAgICB9CgogICAgICB0aGlzLmluZmVjdGFkb3MgPSB0aGlzLmRhZG9zX2ZpbHRyYWRvcy5pbmZlY3RhZG9zOwogICAgICB0aGlzLm9iaXRvcyA9IHRoaXMuZGFkb3NfZmlsdHJhZG9zLm9iaXRvczsKICAgICAgdGhpcy5udW1JZCsrOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRhZG9zOiBmdW5jdGlvbiBkYWRvcyh2YWwpIHsKICAgICAgaWYgKHZhbCAhPSBbXSkgewogICAgICAgIHRoaXMuZmlsdGVyX2RhdGEoKTsKICAgICAgfQogICAgfSwKICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZCh2YWwpIHsKICAgICAgaWYgKCF2YWwuaW5jbHVkZXMoJ09iaXRvcycpKSB7CiAgICAgICAgdGhpcy5vYml0b3MgPSBbMF07CiAgICAgICAgdGhpcy5udW1JZCsrOwogICAgICB9CgogICAgICBpZiAodmFsLmluY2x1ZGVzKCdPYml0b3MnKSkgewogICAgICAgIHRoaXMub2JpdG9zID0gdGhpcy5kYWRvc19maWx0cmFkb3Mub2JpdG9zOwogICAgICAgIHRoaXMubnVtSWQrKzsKICAgICAgfQoKICAgICAgaWYgKCF2YWwuaW5jbHVkZXMoJ0luZmVjdGFkb3MnKSkgewogICAgICAgIHRoaXMuaW5mZWN0YWRvcyA9IFswXTsKICAgICAgICB0aGlzLm51bUlkKys7CiAgICAgIH0KCiAgICAgIGlmICh2YWwuaW5jbHVkZXMoJ0luZmVjdGFkb3MnKSkgewogICAgICAgIHRoaXMuaW5mZWN0YWRvcyA9IHRoaXMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3M7CiAgICAgICAgdGhpcy5udW1JZCsrOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["BrasilLine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card flat>\n            <v-card-title>\n                <span class=\"font-weight-light\"> Total </span>\n                <v-spacer/>\n                <v-btn text @click=\"changeChart('line')\">Line</v-btn>\n                <v-btn text @click=\"changeChart('bar')\">Bar</v-btn>\n            </v-card-title>\n            <v-divider></v-divider>\n            <v-card-text>\n                <line-chart\n                    v-bind:infected=\"infectados\"\n                    v-bind:time=\"dates\"\n                    v-bind:death=\"obitos\"\n                    v-bind:type=\"type\"\n                    :key=\"numId\"\n                />\n            </v-card-text>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\";\n// import dates from \"../../../example/dates.js\"\nimport lineChart from \"../charts/LineChart.vue\"\n\nlet api_data = new Data()\n\nexport default {\n    components: { \n        lineChart\n    },\n    data(){\n        return {\n            type: 'line',\n            name: 'Brasil',\n            selected: ['Infectados', 'Obitos'],\n            dates: null,\n            dados: null,\n            time: null,\n            dados_filtrados: {\n                infectados: [],\n                dia: [],\n                obitos: []\n            },\n            infectados: [],\n            dia: [],\n            obitos: [],\n            numId: 0\n        }\n    },\n    async created(){\n        this.list_data()\n        this.list_dates()\n    },\n    mounted(){\n        this.modify_dates()\n        \n        this.filter_data()\n        this.numId++\n    },\n    methods: {\n        async modify_dates(){\n        this.time = this.dates.map(function(time){\n            return time.split('T')[0].slice(5)\n        })\n        },\n        async list_data(){\n            this.dados = (await api_data.get_all_data()).data\n        },\n        async list_dates(){\n            this.dates = (await api_data.get_all_dates()).data.sort()\n            // this.dates = dates.\n        },\n        changeChart(item){\n            this.type = item\n            this.numId++\n        },\n        filter_data(){\n            for(let i = 0; i < this.dates.length; i++ ){\n                let infectados = 0\n                let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    if( this.dates[i] == this.dados[j].dataExtracao ){\n                        infectados += this.dados[j].num\n                        obitos += this.dados[j].obitos\n                    }\n                }\n                this.dados_filtrados.infectados.push(infectados)\n                this.dados_filtrados.obitos.push(obitos)\n            }\n            this.infectados = this.dados_filtrados.infectados\n            this.obitos = this.dados_filtrados.obitos\n            this.numId++\n        }\n    },\n    watch: {\n        dados(val){\n            if(val != []){\n                this.filter_data()\n            }\n        },\n        selected: function(val) {\n            if( !val.includes('Obitos') ){\n                this.obitos = [0]\n                this.numId++\n            }\n            if( val.includes('Obitos') ){\n                this.obitos = this.dados_filtrados.obitos\n                this.numId++\n            }\n            if( !val.includes('Infectados') ){\n                this.infectados = [0]\n                this.numId++\n            }\n            if( val.includes('Infectados') ){\n                this.infectados = this.dados_filtrados.infectados\n                this.numId++\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>"],"sourceRoot":"src/views/Projeto/visualize"}]}