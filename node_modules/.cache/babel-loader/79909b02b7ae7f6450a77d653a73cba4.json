{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1594775617680},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":1593699361522},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1593699362786},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":1593699362726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ByYWRvL0Rlc2t0b3AvdWlvdC9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsKaW1wb3J0IHsgbGF0TG5nIH0gZnJvbSAibGVhZmxldCI7CmltcG9ydCB7IExHZW9Kc29uLCBMTWFwLCBMVGlsZUxheWVyLCBMTWFya2VyLCBMUG9wdXAsIExJY29uRGVmYXVsdCB9IGZyb20gInZ1ZTItbGVhZmxldCI7CmltcG9ydCBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIgZnJvbSAndnVlMi1sZWFmbGV0LW1hcmtlcmNsdXN0ZXInOwp2YXIgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkV4YW1wbGUiLAogIGNvbXBvbmVudHM6IHsKICAgIExHZW9Kc29uOiBMR2VvSnNvbiwKICAgIExNYXA6IExNYXAsCiAgICBMVGlsZUxheWVyOiBMVGlsZUxheWVyLAogICAgTE1hcmtlcjogTE1hcmtlciwKICAgIExQb3B1cDogTFBvcHVwLAogICAgTEljb25EZWZhdWx0OiBMSWNvbkRlZmF1bHQsCiAgICAndi1tYXJrZXItY2x1c3Rlcic6IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IG51bGwsCiAgICAgIGxhc3RfZGF0ZTogbnVsbCwKICAgICAgem9vbTogMTAsCiAgICAgIGNlbnRlcjogbGF0TG5nKC0xNS43OTM1OTksIC00Ny44MTQ5ODcpLAogICAgICB1cmw6ICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgIGN1cnJlbnRab29tOiAxMS41LAogICAgICBjdXJyZW50Q2VudGVyOiBsYXRMbmcoNDcuNDEzMjIsIC0xLjIxOTQ4MiksCiAgICAgIGdlb2pzb246IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMubGlzdF9kYXRhKCk7CgogICAgICAgICAgICAgIF90aGlzLmNyZWF0ZWQoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYXNwcmFkbzEyL0JyYXNpbGlhLVJBcy1nZW9ycmVmZXJlbmNpYWRhcy9tYXN0ZXIvR2VvanNvbnMvQWxsLmdlb2pzb24nKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF90aGlzMi5nZW9qc29uID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxpc3RfZGF0YTogZnVuY3Rpb24gbGlzdF9kYXRhKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBsYXN0X2RhdGUsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIChhd2FpdCBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCkpLmRhdGEuc3BsaXQoIlQiKVswXQogICAgICAgICAgICAgICAgbGFzdF9kYXRlID0gJzIwMjAtMDMtMjknOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9yZWdpb25fYnlfZGF0ZShsYXN0X2RhdGUpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQzLnNlbnQuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgX3RoaXMzLmRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICBpZiAoIWRhdGEubGF0aXR1ZGUgfHwgIWRhdGEubG9uZ2l0dWRlKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YS5sYXRpdHVkZSA9ICIxLjEiOwogICAgICAgICAgICAgICAgICAgIGRhdGEubG9uZ2l0dWRlID0gIjEuMSI7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGRhdGFbJ3Bvc2ljYW8nXSA9IHsKICAgICAgICAgICAgICAgICAgICBsYXQ6IGRhdGEubGF0aXR1ZGUsCiAgICAgICAgICAgICAgICAgICAgbG5nOiBkYXRhLmxvbmdpdHVkZQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB6b29tVXBkYXRlOiBmdW5jdGlvbiB6b29tVXBkYXRlKHpvb20pIHsKICAgICAgdGhpcy5jdXJyZW50Wm9vbSA9IHpvb207CiAgICB9LAogICAgY2VudGVyVXBkYXRlOiBmdW5jdGlvbiBjZW50ZXJVcGRhdGUoY2VudGVyKSB7CiAgICAgIHRoaXMuY3VycmVudENlbnRlciA9IGNlbnRlcjsKICAgIH0sCiAgICBzaG93TG9uZ1RleHQ6IGZ1bmN0aW9uIHNob3dMb25nVGV4dCgpIHsKICAgICAgdGhpcy5zaG93UGFyYWdyYXBoID0gIXRoaXMuc2hvd1BhcmFncmFwaDsKICAgIH0sCiAgICBpbm5lckNsaWNrOiBmdW5jdGlvbiBpbm5lckNsaWNrKCkgewogICAgICBhbGVydCgiQ2xpY2shIik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"mapCss\">\n    <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n    <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n    <l-geo-json :geojson=\"geojson\"></l-geo-json>\n        <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n        <v-marker-cluster>\n            <l-marker v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                <l-popup>\n                    <div @click=\"innerClick\">\n                        <v-card flat>\n                            <v-card-text>\n                                <b>Região:</b> {{ point.regiao }}\n                                <b>Infectados:</b> {{ point.num }}\n                                <b>Óbitos:</b> {{ point.obitos }}\n                            </v-card-text>\n                        </v-card>\n                    </div>\n                </l-popup>\n            </l-marker>\n        </v-marker-cluster>\n    </l-map>\n</div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\nlet api_data = new Data();\nexport default {\nname: \"Example\",\ncomponents: { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster },\ndata() {\n    return {\n        data: null,\n        last_date: null,\n        zoom: 10,\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        geojson: null\n    };\n},\nasync created(){\n    this.list_data();\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        this.geojson = await response.json();\n    },\n    async list_data(){\n        // (await api_data.get_last_date()).data.split(\"T\")[0]\n        let last_date = '2020-03-29'\n        let data = (await api_data.get_region_by_date(last_date) ).data\n        console.log(data)\n        this.data = data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude, lng: data.longitude}\n            return data\n        })\n    },\n    zoomUpdate(zoom) {\n    this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n    this.currentCenter = center;\n    },\n    showLongText() {\n    this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n    alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}