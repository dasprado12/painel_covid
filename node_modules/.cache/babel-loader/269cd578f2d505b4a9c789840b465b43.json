{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595603124804},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcHJhZG8vRGVza3RvcC91aW90L3BhaW5lbF9jb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiOwppbXBvcnQgeyBsYXRMbmcgfSBmcm9tICJsZWFmbGV0IjsKaW1wb3J0IHsgTEdlb0pzb24sIExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExQb3B1cCwgTEljb25EZWZhdWx0IH0gZnJvbSAidnVlMi1sZWFmbGV0IjsKaW1wb3J0IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlciBmcm9tICd2dWUyLWxlYWZsZXQtbWFya2VyY2x1c3Rlcic7CnZhciBhcGlfZGF0YSA9IG5ldyBEYXRhKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2ltcGxlTWFwIiwKICBjb21wb25lbnRzOiB7CiAgICBMR2VvSnNvbjogTEdlb0pzb24sCiAgICBMTWFwOiBMTWFwLAogICAgTFRpbGVMYXllcjogTFRpbGVMYXllciwKICAgIExNYXJrZXI6IExNYXJrZXIsCiAgICBMUG9wdXA6IExQb3B1cCwKICAgIExJY29uRGVmYXVsdDogTEljb25EZWZhdWx0LAogICAgJ3YtbWFya2VyLWNsdXN0ZXInOiBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBudWxsLAogICAgICBsYXN0X2RhdGU6IG51bGwsCiAgICAgIHpvb206IDEwLAogICAgICBjZW50ZXI6IGxhdExuZygtMTUuNzkzNTk5LCAtNDcuODE0OTg3KSwKICAgICAgdXJsOiAnaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLAogICAgICBjdXJyZW50Wm9vbTogMTEuNSwKICAgICAgY3VycmVudENlbnRlcjogbGF0TG5nKDQ3LjQxMzIyLCAtMS4yMTk0ODIpLAogICAgICBnZW9qc29uOiBudWxsLAogICAgICB0ZXN0ZTogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpcy5saXN0X2RhdGEoKTsKCiAgICAgICAgICAgICAgX3RoaXMuY3JlYXRlZCgpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGdlb2pzb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Rhc3ByYWRvMTIvQnJhc2lsaWEtUkFzLWdlb3JyZWZlcmVuY2lhZGFzL21hc3Rlci9HZW9qc29ucy9BbGwuZ2VvanNvbicpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZ2VvanNvbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnRlc3RlID0gZ2VvanNvblswXTsKICAgICAgICAgICAgICAgIGdlb2pzb24ubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLm5hbWUgPT0gJ0FzYSBOb3J0ZScpIHsKICAgICAgICAgICAgICAgICAgICBpdGVtWydzdHlsZSddID0gewogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjZmZhYTAwIgogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgaXRlbVsnc3R5bGUnXSA9IHsKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiI2ZmMDAwMCIKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX3RoaXMyLmdlb2pzb24gPSBnZW9qc29uOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsaXN0X2RhdGE6IGZ1bmN0aW9uIGxpc3RfZGF0YSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgbGFzdF9kYXRlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpX2RhdGEuZ2V0X2xhc3RfZGF0ZSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBsYXN0X2RhdGUgPSBfY29udGV4dDMuc2VudC5kYXRhLnNwbGl0KCJUIilbMF07CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlMihsYXN0X2RhdGUpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQzLnNlbnQuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMy5kYXRhID0gZGF0YS5tYXAoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhLmxhdGl0dWRlIHx8ICFkYXRhLmxvbmdpdHVkZSkgewogICAgICAgICAgICAgICAgICAgIGRhdGEubGF0aXR1ZGUgPSAiMS4xIjsKICAgICAgICAgICAgICAgICAgICBkYXRhLmxvbmdpdHVkZSA9ICIxLjEiOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBkYXRhWydwb3NpY2FvJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgbGF0OiBkYXRhLmxhdGl0dWRlLnJlcGxhY2UoIiwiLCAiLiIpLAogICAgICAgICAgICAgICAgICAgIGxuZzogZGF0YS5sb25naXR1ZGUucmVwbGFjZSgiLCIsICIuIikKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgem9vbVVwZGF0ZTogZnVuY3Rpb24gem9vbVVwZGF0ZSh6b29tKSB7CiAgICAgIHRoaXMuY3VycmVudFpvb20gPSB6b29tOwogICAgfSwKICAgIGNlbnRlclVwZGF0ZTogZnVuY3Rpb24gY2VudGVyVXBkYXRlKGNlbnRlcikgewogICAgICB0aGlzLmN1cnJlbnRDZW50ZXIgPSBjZW50ZXI7CiAgICB9LAogICAgc2hvd0xvbmdUZXh0OiBmdW5jdGlvbiBzaG93TG9uZ1RleHQoKSB7CiAgICAgIHRoaXMuc2hvd1BhcmFncmFwaCA9ICF0aGlzLnNob3dQYXJhZ3JhcGg7CiAgICB9LAogICAgaW5uZXJDbGljazogZnVuY3Rpb24gaW5uZXJDbGljaygpIHsKICAgICAgYWxlcnQoIkNsaWNrISIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mapCss\">{{teste}}\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n        <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n        <span v-for=\"item in geojson\" :key=\"item\">\n            <l-geo-json :geojson=\"item\" :options=\"item.style\" ></l-geo-json>\n\n        </span>\n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n            <v-marker-cluster>\n                <l-marker v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                    <l-popup>\n                        <div @click=\"innerClick\">\n                            <v-card flat>\n                                <v-card-text>\n                                    <b>Região:</b> {{ point.regiao }}\n                                    <b>Infectados:</b> {{ point.num }}\n                                    <b>Óbitos:</b> {{ point.obitos }}\n                                </v-card-text>\n                            </v-card>\n                        </div>\n                    </l-popup>\n                </l-marker>\n            </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\ncomponents: { \n        LGeoJson, \n        LMap, \n        LTileLayer, \n        LMarker, \n        LPopup, \n        LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster \n    },\ndata() {\n    return {\n        data: null,\n        last_date: null,\n        zoom: 10,\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        geojson: null,\n        teste: null\n    };\n},\nasync created(){\n    this.list_data();\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json()\n        this.teste = geojson[0]\n        geojson.map(function(item){\n            if(item.name == 'Asa Norte'){\n                item['style'] = { color: \"#ffaa00\" }\n            }else{\n                item['style'] = { color: \"#ff0000\" }\n\n            }\n            return item\n        })\n        this.geojson = geojson\n    },\n    async list_data(){\n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date2(last_date) ).data\n        this.data = data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude.replace(\",\", \".\"), lng: data.longitude.replace(\",\", \".\")}\n            return data\n        })\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}