{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595262410884},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"map\" class=\"mapCss\">\n    <!-- <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n    <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n    <l-geo-json :geojson=\"geojson\"></l-geo-json>\n        <l-icon-default></l-icon-default>\n        <v-marker-cluster>\n            <l-marker v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                <l-popup>\n                    <div @click=\"innerClick\">\n                        <v-card flat>\n                            <v-card-text>\n                                <b>Região:</b> {{ point.regiao }}\n                                <b>Infectados:</b> {{ point.num }}\n                                <b>Óbitos:</b> {{ point.obitos }}\n                            </v-card-text>\n                        </v-card>\n                    </div>\n                </l-popup>\n            </l-marker>\n        </v-marker-cluster>\n    </l-map> -->\n</div>\n</template>\n\n<script>\n// import { Data } from \"../../../functions/index.js\"\n// import { latLng } from \"leaflet\";\nimport * as L from \"leaflet\";\n\n// let api_data = new Data();\n\nexport default {\nname: \"Example\",\ndata() {\n    return {\n        data: null,\n        map:null,\n        // last_date: null,\n        tileLayer:null,\n        layers:[\n            {id:0,\n            active: true,\n            features:[],\n            }\n        ],\n        // geoLayer:null,\n        marker:null,\n        // zoom: 10,\n        // center: latLng(-15.793599, -47.814987),\n        // url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        // currentZoom: 11.5,\n        // currentCenter: latLng(47.41322, -1.219482),\n        geojson: null\n    };\n},\nmounted(){\n    this.createMap();\n    this.manipulate();\n},\nasync created(){\n    this.list_data();\n    this.created();\n\n\n},\nmethods: {\n\n    getIncidencia(geoName, data){\n    \n        let incid\n            data.forEach(function(point){\n                    let name = point.regiao.replace(/\\s/g,'')\n                    let nameReady = name.replace('/', \"-\")\n                        if(geoName=== nameReady){\n                            alert(geoName);\n\n                        incid = point.incidencia\n                        return incid\n                    \n                        }\n                        else{ incid = 0}\n                    \n                })\n\n                return incid;\n\n\n    },\n    async addGeojson(){\n        let geo = this.geojson\n        let map = this.map\n        // let layer = this.geoLayer\n        let myStyle\n        let data = this.data\n      \n                let leve={\n            \"color\":\"#ffbaba\",\n            \"fillColor\":\"#ffbaba\",\n            \"opacity\":\"0.2\"\n\n        }\n        let middle={\n            \"color\":\"#ff7b7b\",\n            \"fillOpacity\":\"0.8\"\n\n        }\n\n        // let middleB={\n        //     \"color\":\"#ff5252\"\n        // }\n        // let grave={\n        //     \"color\":\"#ff0000\"\n        // }\n        let muitoGrave={\n            \"color\":\"#a70000\",\n            \"fillColor\":\"#a70000\",\n            \"fillOpacity\":\"0.8\"\n        }\n        \n        let incid=0;\n\n       geo.features.forEach(function(geojson){\n           \n           let geoName= geojson.name\n        //    incid= esse.getIncidencia(geoName, data)\n           console.log(\"oooooo\")\n           console.log(incid)\n//pegar o numero de incidencias\n// console.log(\"AQUI\")\n                data.forEach(function(point){\n                    let name = point.regiao.replace(/\\s/g,'')\n                    let nameReady = name.replace('/', \"-\")\n                        if(geoName=== nameReady){\n\n                        incid = point.incidencia\n \n                        }\n                })\n\n                                    \n\n        //    let myStyle;\n\n            if (parseFloat(incid) <= 5){\n                myStyle = leve;\n            }\n            else if(parseFloat(incid) <= 10){\n                alert(geoName)\n                myStyle =middle;\n            }\n            else{\n                myStyle = muitoGrave\n            }\n        // layer.addData(geojson.features, {style: myStyle})\n        incid=0;\n        console.log(incid)\n           L.geoJSON(geojson.features,{style: myStyle}).addTo(map)\n        })\n    },\n    async createMap(){\n            this.map = L.map('map').setView([-15.793599, -47.814987], 10);\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n}).addTo(this.map);\n      \n    },\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        this.geojson = await response.json();\n    },\n\n    async manipulate(){\n        let mapa = this.map\n        \n        let array=[]\n                let icon = new L.Icon.Default();\n                icon.options.shadowSize = [0, 0];\n        this.data.forEach(function(point){\n            // let mark = {\n            //         key: point.regiao,\n            //         type:\"marker\",\n            //         posicao: point.posicao,\n            //     }\n            let mark = L.marker(point.posicao).addTo(mapa);\n                array.push(mark)\n            //    console.log(mark)\n            //     console.log(mark)\n            // this.layers[0].features.push(mark)\n         \n        })\n        this.layers[0].features = array;\n    },\n    async list_data(){\n        // let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        // let data = (await api_data.get_region_by_date2(last_date) ).data\n        let data = [{\"_id\":\"5ec4225498bbbca607865cd6\",\"regiao\":\"Águas Claras\",\"latitude\":-15.835754999999999,\"longitude\":-48.023703999999995,\"num\":16,\"porcentagem\":9.4,\"incidencia\":10.38,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd7\",\"regiao\":\"Recanto Das Emas\",\"latitude\":-15.916970000000001,\"longitude\":-48.101851,\"num\":0,\"porcentagem\":0,\"incidencia\":0,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd8\",\"regiao\":\"Samambaia\",\"latitude\":-15.874647,\"longitude\":-48.101735,\"num\":2,\"porcentagem\":1.2,\"incidencia\":0.82,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"}, {\"_id\":\"5ec4225498bbbca607865cde\",\"regiao\":\"Sudoeste/Octogonal\",\"latitude\":-15.791981,\"longitude\":-47.929973,\"num\":19,\"porcentagem\":11.1,\"incidencia\":34.38,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cf3\",\"regiao\":\"Jardim Botânico\",\"latitude\":-15.855691,\"longitude\":-47.809974,\"num\":3,\"porcentagem\":1.8,\"incidencia\":5.16,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd9\",\"regiao\":\"Taguatinga\",\"latitude\":-15.829303,\"longitude\":-48.055925,\"num\":6,\"porcentagem\":3.5,\"incidencia\":6.88,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"}]\n        this.data = data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude.toString().replace(\",\", \".\"), lng: data.longitude.toString().replace(\",\", \".\")};\n          \n        })\n        // this.manipulate(data);\n        this.data = data\n    \n            \n\n    },\n    zoomUpdate(zoom) {\n    this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n    this.currentCenter = center;\n    },\n    showLongText() {\n    this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n    alert(\"Click!\");\n    }\n},\n    watch:{\n        geojson: function(){\n            // let map = this.map\n            // this.geoLayer = L.geoJSON().addTo(map);\n            this.addGeojson();\n        }\n\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}