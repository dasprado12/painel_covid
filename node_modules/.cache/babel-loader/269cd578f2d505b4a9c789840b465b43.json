{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595614484891},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ByYWRvL0Rlc2t0b3AvdWlvdC9wYWluZWxfY292aWQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsKaW1wb3J0IHsgbGF0TG5nIH0gZnJvbSAibGVhZmxldCI7CmltcG9ydCB7IExHZW9Kc29uLCBMTWFwLCBMVGlsZUxheWVyLCBMTWFya2VyLCBMUG9wdXAsIExJY29uRGVmYXVsdCB9IGZyb20gInZ1ZTItbGVhZmxldCI7CmltcG9ydCBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIgZnJvbSAndnVlMi1sZWFmbGV0LW1hcmtlcmNsdXN0ZXInOwp2YXIgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNpbXBsZU1hcCIsCiAgcHJvcHM6IFsndHlwZSddLAogIGNvbXBvbmVudHM6IHsKICAgIExHZW9Kc29uOiBMR2VvSnNvbiwKICAgIExNYXA6IExNYXAsCiAgICBMVGlsZUxheWVyOiBMVGlsZUxheWVyLAogICAgTE1hcmtlcjogTE1hcmtlciwKICAgIExQb3B1cDogTFBvcHVwLAogICAgTEljb25EZWZhdWx0OiBMSWNvbkRlZmF1bHQsCiAgICAndi1tYXJrZXItY2x1c3Rlcic6IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IG51bGwsCiAgICAgIGdlb2pzb246IG51bGwsCiAgICAgIGxhc3RfZGF0ZTogbnVsbCwKICAgICAgem9vbTogMTAsCiAgICAgIGNvbG9yczogewogICAgICAgIG51bTogWycjZGJmZmUyJywgJyM5YWUzYTgnLCAnIzY1Yzk3OCcsICcjM2ViMDUzJywgJyMxODhjMmQnXSwKICAgICAgICBvYml0b3M6IFsnI2U4YjNiMycsICcjZThiM2IzJywgJyNjOTU3NTcnLCAnIzllMmIyYicsICcjNzgwNDA0J10KICAgICAgfSwKICAgICAgY2VudGVyOiBsYXRMbmcoLTE1Ljc5MzU5OSwgLTQ3LjgxNDk4NyksCiAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywKICAgICAgY3VycmVudFpvb206IDExLjUsCiAgICAgIGN1cnJlbnRDZW50ZXI6IGxhdExuZyg0Ny40MTMyMiwgLTEuMjE5NDgyKQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpcy5jcmVhdGVkKCk7CgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZ2VvanNvbiwgbGFzdF9kYXRlLCBkYXRhLCBpLCBqOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYXNwcmFkbzEyL0JyYXNpbGlhLVJBcy1nZW9ycmVmZXJlbmNpYWRhcy9tYXN0ZXIvR2VvanNvbnMvQWxsLmdlb2pzb24nKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGdlb2pzb24gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGxhc3RfZGF0ZSA9IF9jb250ZXh0Mi5zZW50LmRhdGEuc3BsaXQoIlQiKVswXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlKGxhc3RfZGF0ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5kYXRhID0gZGF0YTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZ2VvanNvbi5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgZGF0YS5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgIGlmIChnZW9qc29uW2ldLm5hbWUgPT0gZGF0YVtqXS5yZWdpYW8pIHsKICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhW2pdW190aGlzMi50eXBlXSA8IDEwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF90aGlzMi5jb2xvcnNbX3RoaXMyLnR5cGVdWzBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodDogMQogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhW2pdW190aGlzMi50eXBlXSA+PSAxMCAmJiBkYXRhW2pdW190aGlzMi50eXBlXSA8IDIwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF90aGlzMi5jb2xvcnNbX3RoaXMyLnR5cGVdWzFdLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodDogMQogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhW2pdW190aGlzMi50eXBlXSA+PSAyMCAmJiBkYXRhW2pdW190aGlzMi50eXBlXSA8IDMwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF90aGlzMi5jb2xvcnNbX3RoaXMyLnR5cGVdWzJdLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodDogMQogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhW2pdW190aGlzMi50eXBlXSA+PSAzMCAmJiBkYXRhW2pdW190aGlzMi50eXBlXSA8IDQwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF90aGlzMi5jb2xvcnNbX3RoaXMyLnR5cGVdWzNdLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodDogMQogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhW2pdW190aGlzMi50eXBlXSA+PSA0MCkgewogICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0gewogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBfdGhpczIuY29sb3JzW190aGlzMi50eXBlXVs0XSwKICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjODI4MjgyIgogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzMi5nZW9qc29uID0gZ2VvanNvbjsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHpvb21VcGRhdGU6IGZ1bmN0aW9uIHpvb21VcGRhdGUoem9vbSkgewogICAgICB0aGlzLmN1cnJlbnRab29tID0gem9vbTsKICAgIH0sCiAgICBjZW50ZXJVcGRhdGU6IGZ1bmN0aW9uIGNlbnRlclVwZGF0ZShjZW50ZXIpIHsKICAgICAgdGhpcy5jdXJyZW50Q2VudGVyID0gY2VudGVyOwogICAgfSwKICAgIHNob3dMb25nVGV4dDogZnVuY3Rpb24gc2hvd0xvbmdUZXh0KCkgewogICAgICB0aGlzLnNob3dQYXJhZ3JhcGggPSAhdGhpcy5zaG93UGFyYWdyYXBoOwogICAgfSwKICAgIGlubmVyQ2xpY2s6IGZ1bmN0aW9uIGlubmVyQ2xpY2soKSB7CiAgICAgIGFsZXJ0KCJDbGljayEiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mapCss\">\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n        <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n        <span v-for=\"item in geojson\" :key=\"item\">\n            <l-geo-json :geojson=\"item\" :options=\"item.style\" ></l-geo-json>\n        </span>\n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n            <v-marker-cluster>\n                <l-marker v-for=\"point in points\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                    <l-popup>\n                        <div @click=\"innerClick\">\n                            <v-card flat>\n                                <v-card-text>\n                                    <b>Região:</b> {{ point.regiao }}\n                                    <b>Infectados:</b> {{ point.num }}\n                                    <b>Óbitos:</b> {{ point.obitos }}\n                                </v-card-text>\n                            </v-card>\n                        </div>\n                    </l-popup>\n                </l-marker>\n            </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\nprops: [ 'type' ],  \ncomponents: { \n        LGeoJson, \n        LMap, \n        LTileLayer, \n        LMarker, \n        LPopup, \n        LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster \n    },\ndata() {\n    return {\n        data: null,\n        geojson: null,\n        last_date: null,\n        zoom: 10,\n        colors: {\n            num: [ '#dbffe2', '#9ae3a8', '#65c978', '#3eb053', '#188c2d' ],\n            obitos: [ '#e8b3b3', '#e8b3b3', '#c95757', '#9e2b2b', '#780404' ]\n        },\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n    };\n},\nasync created(){\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json() \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date(last_date) ).data\n        this.data = data\n        for(let i = 0; i < geojson.length; i++){\n            for(let j = 0; j < data.length; j++){\n                if(geojson[i].name == data[j].regiao){\n                    if(data[j][this.type] < 10){\n                        geojson[i]['style'] = { color: this.colors[this.type][0], weight: 1 }\n                    }else if(data[j][this.type] >= 10 && data[j][this.type] < 20 ){\n                        geojson[i]['style'] = { color: this.colors[this.type][1], weight: 1 }\n                    }else if(data[j][this.type] >= 20 && data[j][this.type] < 30){\n                        geojson[i]['style'] = { color: this.colors[this.type][2], weight: 1 }\n                    }else if(data[j][this.type] >= 30 && data[j][this.type] < 40 ){\n                        geojson[i]['style'] = { color: this.colors[this.type][3], weight: 1 }\n                    }else if(data[j][this.type] >= 40){\n                        geojson[i]['style'] = { color: this.colors[this.type][4], weight: 1 }\n                    }else{\n                        geojson[i]['style'] = { color: \"#828282\" }\n                    }\n                }\n            }\n        }\n        this.geojson = geojson\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}