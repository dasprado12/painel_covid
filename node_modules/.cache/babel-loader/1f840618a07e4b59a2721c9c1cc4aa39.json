{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js!/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue","mtime":1593699362966},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":1593699362690},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":1593699361522},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1593699362786},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":1593699362726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9wcmFkby9EZXNrdG9wL3Vpb3QvcGFpbmVsX2NvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IGRhdGEgZnJvbSAiLi4vLi4vLi4vZXhhbXBsZS9pbmRleC5qcyIKLy8gaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiCmltcG9ydCBiYXJDaGFydCBmcm9tICIuLi9jaGFydHMvQmFyQ2hhcnQudnVlIjsKaW1wb3J0IHsgRGF0YSB9IGZyb20gIi4uLy4uLy4uL2Z1bmN0aW9ucy9pbmRleC5qcyI7CnZhciBhcGlfZGF0YSA9IG5ldyBEYXRhKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogW10sCiAgY29tcG9uZW50czogewogICAgYmFyQ2hhcnQ6IGJhckNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFnZTogMSwKICAgICAgbGFzdF9kYXRlOiBudWxsLAogICAgICBkcmF3ZXI6IHRydWUsCiAgICAgIHJlZ2lvbnM6IFtdLAogICAgICBpdGVtczogbnVsbCwKICAgICAgbmFtZTogJ0RGJywKICAgICAgc2VsZWN0ZWQ6IFtdLAogICAgICBkYXRlczogbnVsbCwKICAgICAgZGFkb3M6IG51bGwsCiAgICAgIGRhZG9zX2ZpbHRyYWRvczogewogICAgICAgIGluZmVjdGFkb3M6IFtdLAogICAgICAgIGRpYTogW10sCiAgICAgICAgb2JpdG9zOiBbXQogICAgICB9LAogICAgICBpbmZlY3RhZG9zOiBbXSwKICAgICAgZGlhOiBbXSwKICAgICAgb2JpdG9zOiBbXSwKICAgICAgbnVtSWQ6IDAKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9hbGxfZGF0YSgpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF90aGlzLmRhZG9zID0gX2NvbnRleHQuc2VudC5kYXRhOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0X3JlZ2lvbnMoKTsKICAgIHRoaXMuZmlsdGVyX2RhdGEodGhpcy5yZWdpb25zKTsKICAgIHRoaXMubnVtSWQrKzsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldF9yZWdpb25zOiBmdW5jdGlvbiBnZXRfcmVnaW9ucygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9hbGxfcmVnaW9ucygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczIuaXRlbXMgPSBfY29udGV4dDIuc2VudC5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmaWx0ZXJfZGF0YTogZnVuY3Rpb24gZmlsdGVyX2RhdGEocmVnaW9ucykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBkYXksIGksIGluZmVjdGFkb3MsIG9iaXRvcywgajsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF5ID0gX2NvbnRleHQzLnNlbnQuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMy5sYXN0X2RhdGUgPSBkYXkuc3BsaXQoJ1QnKVswXTsgLy9wYXJhIGNhZGEgcmVnaWFvCgogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHJlZ2lvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgaW5mZWN0YWRvcyA9IDA7CiAgICAgICAgICAgICAgICAgIG9iaXRvcyA9IDA7CgogICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgX3RoaXMzLmRhZG9zLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgLy9jb21wYXJhIHNlIGEgcmVnaWFvIGNvaW5jaWRlCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlZ2lvbnNbaV0gPT0gX3RoaXMzLmRhZG9zW2pdLnJlZ2lhby50b1VwcGVyQ2FzZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAvL2NvbXBhcmEgc2UgYSBkYXRhIGNvaW5jaWRlCiAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF5ID09IF90aGlzMy5kYWRvc1tqXS5kYXRhRXh0cmFjYW8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgaW5mZWN0YWRvcyArPSBfdGhpczMuZGFkb3Nbal0ubnVtOwogICAgICAgICAgICAgICAgICAgICAgICBvYml0b3MgKz0gX3RoaXMzLmRhZG9zW2pdLm9iaXRvczsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF90aGlzMy5kYWRvc19maWx0cmFkb3MuaW5mZWN0YWRvcy5wdXNoKGluZmVjdGFkb3MpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMzLmRhZG9zX2ZpbHRyYWRvcy5vYml0b3MucHVzaChvYml0b3MpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzMy5pbmZlY3RhZG9zID0gX3RoaXMzLmRhZG9zX2ZpbHRyYWRvcy5pbmZlY3RhZG9zOwogICAgICAgICAgICAgICAgX3RoaXMzLm9iaXRvcyA9IF90aGlzMy5kYWRvc19maWx0cmFkb3Mub2JpdG9zOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICByZWdpb25zOiBmdW5jdGlvbiByZWdpb25zKHZhbCkgewogICAgICB0aGlzLmRhZG9zX2ZpbHRyYWRvcyA9IHsKICAgICAgICBpbmZlY3RhZG9zOiBbXSwKICAgICAgICBkaWE6IFtdLAogICAgICAgIG9iaXRvczogW10KICAgICAgfTsKICAgICAgdGhpcy5maWx0ZXJfZGF0YSh2YWwpOwogICAgICB0aGlzLm51bUlkKys7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card flat outlined>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n                <v-spacer/>\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips multiple/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <bar-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:region=\"regions\"\n                :key=\"numId\"\n            />\n            <!-- <v-card-actions>\n                <v-pagination\n                    v-model=\"page\"\n                    :length=\"3\"\n                    :total-visible=\"7\"\n                ></v-pagination>\n            </v-card-actions> -->\n        </v-card>\n        <v-row>\n            <v-col cols=\"12\" sm=\"8\" md=\"8\">\n            </v-col>\n            <v-col cols=\"12\" sm=\"4\" md=\"4\">\n                <span class=\"font-weight-light\">{{ last_date }}</span>\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\n// import data from \"../../../example/index.js\"\n// import dates from \"../../../example/dates.js\"\nimport barChart from \"../charts/BarChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ \n    ],\n    components: { \n        barChart\n    },\n    data(){\n        return {\n            page: 1,\n            last_date: null,\n            drawer: true,\n            regions: [ ],\n            items: null,\n            name: 'DF',\n            selected: [],\n            dates: null,\n            dados: null,\n            dados_filtrados: {\n                infectados: [],\n                dia: [],\n                obitos: []\n            },\n            infectados: [],\n            dia: [],\n            obitos: [],\n            numId: 0\n        }\n    },\n    async created(){\n        this.dados = (await api_data.get_all_data()).data\n    },\n    mounted(){\n        this.get_regions()\n        this.filter_data(this.regions)\n        this.numId++\n    },\n    methods: {\n        async get_regions(){\n            this.items = (await api_data.get_all_regions()).data\n        },\n        async filter_data(regions){\n            let day = (await api_data.get_last_date()).data\n            this.last_date = day.split('T')[0]\n            //para cada regiao\n            for(let i = 0; i < regions.length; i++ ){\n                let infectados = 0\n                let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    //compara se a regiao coincide\n                    if( regions[i] == this.dados[j].regiao.toUpperCase() ){\n                        //compara se a data coincide\n                        \n                        if(day == this.dados[j].dataExtracao){\n                            infectados += this.dados[j].num\n                            obitos += this.dados[j].obitos\n                        }\n                    }\n                }\n                this.dados_filtrados.infectados.push(infectados)\n                this.dados_filtrados.obitos.push(obitos)\n            }\n            this.infectados = this.dados_filtrados.infectados\n            this.obitos = this.dados_filtrados.obitos\n        }\n    },\n    watch: {\n        regions: function(val) {\n            this.dados_filtrados = {\n                infectados: [],\n                dia: [],\n                obitos: []\n            }\n            this.filter_data(val)\n            this.numId++\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>\n\n\n"],"sourceRoot":"src/views/Projeto/visualize"}]}