{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js!/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js!/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/GJMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/GJMap.vue","mtime":1595354766973},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GJMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"map\" class=\"mapCss\">\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport * as L from \"leaflet\";\nlet api_data = new Data()\n\nexport default {\n    props: [ 'date' ],\n    name: \"Example\",\n    data() {\n        return {\n            map:null,\n            tileLayer:null,\n            layers:[\n                {id:0,\n                active: true,\n                features:[],\n                }\n            ],\n            marker:null,\n            geojson: null,\n            numId: 0\n        };\n    },\n    mounted(){\n        this.createMap();\n        this.manipulate();\n    },\n    async created(){\n\n        this.list_data();\n        this.created();\n    },\n    computed: {\n        data(){\n            return [{\"_id\":\"5ec4225498bbbca607865cd6\",\"regiao\":\"Águas Claras\",\"latitude\":-15.835754999999999,\"longitude\":-48.023703999999995,\"num\":16,\"porcentagem\":9.4,\"incidencia\":10.38,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd7\",\"regiao\":\"Recanto Das Emas\",\"latitude\":-15.916970000000001,\"longitude\":-48.101851,\"num\":0,\"porcentagem\":0,\"incidencia\":0,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd8\",\"regiao\":\"Samambaia\",\"latitude\":-15.874647,\"longitude\":-48.101735,\"num\":2,\"porcentagem\":1.2,\"incidencia\":0.82,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"}, {\"_id\":\"5ec4225498bbbca607865cde\",\"regiao\":\"Sudoeste/Octogonal\",\"latitude\":-15.791981,\"longitude\":-47.929973,\"num\":19,\"porcentagem\":11.1,\"incidencia\":34.38,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cf3\",\"regiao\":\"Jardim Botânico\",\"latitude\":-15.855691,\"longitude\":-47.809974,\"num\":3,\"porcentagem\":1.8,\"incidencia\":5.16,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"},{\"_id\":\"5ec4225498bbbca607865cd9\",\"regiao\":\"Taguatinga\",\"latitude\":-15.829303,\"longitude\":-48.055925,\"num\":6,\"porcentagem\":3.5,\"incidencia\":6.88,\"obitos\":0,\"porcentagem obitos\":0,\"dataExtracao\":\"2020-03-26T00:00:00.000Z\"}]\n        }\n    },\n    methods: {\n        getIncidencia(geoName, data){\n            let incid\n                data.forEach(function(point){\n                        let name = point.regiao.replace(/\\s/g,'')\n                        let nameReady = name.replace('/', \"-\")\n                            if(geoName=== nameReady){\n                                alert(geoName);\n                            incid = point.incidencia\n                            return incid\n                            }\n                            else{ incid = 0}\n                    })\n                    return incid;\n        },\n        async addGeojson(){\n            let geo = this.geojson\n            let map = this.map\n            let myStyle\n            let data = this.data\n                    let leve={\n                \"color\":\"#ffbaba\",\n                \"fillColor\":\"#ffbaba\",\n                \"opacity\":\"0.2\"\n            }\n            let middle={\n                \"color\":\"#ff7b7b\",\n                \"fillOpacity\":\"0.8\"\n            }\n            let muitoGrave={\n                \"color\":\"#a70000\",\n                \"fillColor\":\"#a70000\",\n                \"fillOpacity\":\"0.8\"\n            }\n            let incid=0;\n            geo.features.forEach(function(geojson){\n            let geoName= geojson.name\n            console.log(incid)\n                data.forEach(function(point){\n                    let name = point.regiao.replace(/\\s/g,'')\n                    let nameReady = name.replace('/', \"-\")\n                        if(geoName=== nameReady){\n                        incid = point.incidencia\n                        }\n                })\n                if (parseFloat(incid) <= 5){\n                    myStyle = leve;\n                }\n                else if(parseFloat(incid) <= 10){\n                    // alert(geoName)\n                    myStyle =middle;\n                }\n                else{\n                    myStyle = muitoGrave\n                }\n                // layer.addData(geojson.features, {style: myStyle})\n                incid=0;\n                console.log(incid)\n                L.geoJSON(geojson.features,{style: myStyle}).addTo(map)\n            })\n        },\n        async createMap(){\n            this.map = L.map('map').setView([-15.793599, -47.814987], 10);\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(this.map);\n        },\n        async created(){\n            const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n            this.geojson = await response.json();\n        },\n        async manipulate(){\n            let mapa = this.map\n            let array=[]\n                    let icon = new L.Icon.Default();\n                    icon.options.shadowSize = [0, 0];\n            this.data.forEach(function(point){\n                // let mark = {\n                //         key: point.regiao,\n                //         type:\"marker\",\n                //         posicao: point.posicao,\n                //     }\n                let mark = L.marker(point.posicao).addTo(mapa);\n                    array.push(mark)\n                    console.log(mark)\n                // this.layers[0].features.push(mark)\n            })\n            this.layers[0].features = array;\n        },\n        async list_data(){\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n            let data = (await api_data.get_region_by_date2(last_date) ).data\n            this.data = data.map(function(data){\n                if(!data.latitude || !data.longitude){\n                    data.latitude = \"1.1\"\n                    data.longitude = \"1.1\"\n                }\n                data['posicao'] = { lat: data.latitude.toString().replace(\",\", \".\"), lng: data.longitude.toString().replace(\",\", \".\")};\n            })\n            // this.manipulate(data);\n            this.data = data\n        },\n        zoomUpdate(zoom) {\n            this.currentZoom = zoom;\n        },\n        centerUpdate(center) {\n            this.currentCenter = center;\n        },\n        showLongText() {\n            this.showParagraph = !this.showParagraph;\n        },\n        innerClick() {\n            alert(\"Click!\");\n        }\n    },\n    watch:{\n        geojson: function(){\n            // let map = this.map\n            // this.geoLayer = L.geoJSON().addTo(map);\n            this.addGeojson();\n        }\n    }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"],"sourceRoot":"src/views/Projeto/maps"}]}