{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/Dados.vue?vue&type=style&index=0&id=514eaf56&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/Dados.vue","mtime":1593656928768},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYWluLXRpdGxlewogICAgY29sb3I6IHJnYig3MywgNzMsIDczKTsKfQo="},{"version":3,"sources":["Dados.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA","file":"Dados.vue","sourceRoot":"src/views/Projeto","sourcesContent":["<template>\n    <div class=\"home\">\n        <div class=\"brasil\">\n            <v-container>\n                <h1 class=\"main-title font-weight-bold\"> Brasil </h1>\n                <v-divider ></v-divider>\n                <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                        <brasil-line/>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n        <div class=\"regioes\">\n            <v-container>\n                <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                        <h1 class=\"main-title font-weight-bold\"> Regioes </h1>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"4\" md=\"4\"/>\n                    <v-col cols=\"12\" sm=\"2\" md=\"2\">\n                        <v-select v-model=\"regiao_selecionada\" :items=\"regioes\" label=\"Regiões\"/>\n                    </v-col>\n                </v-row>\n                <v-divider/>\n                <!-- visualização dos estados -->\n                <estados v-show=\"show\" v-bind:region=\"regiao_selecionada\"></estados>\n            </v-container>\n        </div>\n        <div class=\"Mapas\">\n            <v-container>\n                <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                        <h1 class=\"main-title font-weight-bold\"> Mapa </h1>\n                    </v-col>\n                </v-row>\n                <v-divider/><br>\n                <v-card flat outlined>\n                    <v-card-title>\n                        <span class=\"font-weight-light\"> Infectados </span>\n                    </v-card-title>\n                    <simple-map/>\n                </v-card>\n            </v-container>\n        </div>\n    </div>\n</template>\n\n<script>\nimport BrasilLine from \"./visualize/BrasilLine.vue\"\nimport Estados from \"../Projeto/visualize/Regioes.vue\"\nimport SimpleMap from \"./maps/SimpleMap.vue\"\nimport { Data } from \"../../functions/index.js\"\n\nlet api_data = new Data()\n\nexport default {\n    name: \"Home\",\n    components: {\n        BrasilLine, Estados, SimpleMap\n    },\n    data(){\n        return {\n            selected: '2020-03-20',\n            show: false,\n            regioes: [ \"Regioes\", \"DF\"],\n            regiao_selecionada: \"\",\n            data_from_region: [],\n            dates: [],\n            dates_qty: null,\n            tab: null,\n            states: null,\n            state: null\n        }\n    },\n    watch:{\n        regiao_selecionada (value) {\n            if(value == 'Regioes'){\n                this.show = false\n            }else{\n                this.show = true\n            }\n        }\n    },\n    mounted() {\n        this.get_all_dates()\n    },\n    methods: {\n        season (val) {\n            return this.dates[val].split('T')[0].split('-')\n        },\n        async get_all_dates(){\n            let dates = (await api_data.get_all_dates()).data.sort()\n            this.dates = dates\n            this.dates_qty = dates.length\n        }\n    }\n};\n</script>\n\n<style scoped>\n.main-title{\n    color: rgb(73, 73, 73);\n}\n</style>\n\n"]}]}