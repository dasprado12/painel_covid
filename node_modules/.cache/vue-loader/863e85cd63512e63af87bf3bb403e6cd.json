{"remainingRequest":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\painel_covid\\src\\views\\Projeto\\charts\\TreeChartInfectados.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\painel_covid\\src\\views\\Projeto\\charts\\TreeChartInfectados.vue","mtime":1594648606896},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7DQppbXBvcnQgeyBUcmVlTWFwUGx1Z2luIH0gZnJvbSAiQHN5bmNmdXNpb24vZWoyLXZ1ZS10cmVlbWFwIjsNClZ1ZS51c2UoVHJlZU1hcFBsdWdpbik7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBwcm9wczogWyAnb2JqJyBdLA0KICAgIGRhdGE6IGZ1bmN0aW9uKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgLy8gZGF0YVNvdXJjZTogdGhpcy5vYmouZGF0YSwNCiAgICAgICAgICAgIC8vIHdlaWdodFZhbHVlUGF0aDogJ0NvdW50JywNCiAgICAgICAgICAgIC8vIGxlYWZJdGVtU2V0dGluZ3M6IHsNCiAgICAgICAgICAgIC8vICAgICBsYWJlbFBhdGg6ICdDaXR5JywNCiAgICAgICAgICAgIC8vICAgICBsYWJlbEZvcm1hdDogJyR7Q2l0eX08YnI+JHtDb3VudH0gY2Fzb3MnLA0KICAgICAgICAgICAgLy8gICAgIGdhcDo1LA0KICAgICAgICAgICAgLy8gICAgIGZpbGw6ICdncmVlbicNCiAgICAgICAgICAgIC8vIH0NCiAgICAgICAgfQ0KICAgIH0sDQogICAgY29tcHV0ZWQ6ew0KICAgICAgICBkYXRhU291cmNlKCl7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5vYmouZGF0YQ0KICAgICAgICB9LA0KICAgICAgICB3ZWlnaHRWYWx1ZVBhdGgoKXsNCiAgICAgICAgICAgIHJldHVybiAnQ291bnQnDQogICAgICAgIH0sDQogICAgICAgIGxlYWZJdGVtU2V0dGluZ3MoKXsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgbGFiZWxQYXRoOiAnQ2l0eScsDQogICAgICAgICAgICAgICAgbGFiZWxGb3JtYXQ6ICcke0NpdHl9PGJyPiR7Q291bnR9IGNhc29zJywNCiAgICAgICAgICAgICAgICBnYXA6NSwNCiAgICAgICAgICAgICAgICBmaWxsOiAnZ3JlZW4nDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["TreeChartInfectados.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeChartInfectados.vue","sourceRoot":"src/views/Projeto/charts","sourcesContent":["<template>\r\n    <div class=\"control_wrapper\">\r\n        <ejs-treemap \r\n            class=\"treemap\" \r\n            height='100%' \r\n            width='100%'\r\n            :dataSource='dataSource' \r\n            :weightValuePath='weightValuePath' \r\n            :leafItemSettings='leafItemSettings'\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue';\r\nimport { TreeMapPlugin } from \"@syncfusion/ej2-vue-treemap\";\r\nVue.use(TreeMapPlugin);\r\n\r\nexport default {\r\n    props: [ 'obj' ],\r\n    data: function() {\r\n        return {\r\n            // dataSource: this.obj.data,\r\n            // weightValuePath: 'Count',\r\n            // leafItemSettings: {\r\n            //     labelPath: 'City',\r\n            //     labelFormat: '${City}<br>${Count} casos',\r\n            //     gap:5,\r\n            //     fill: 'green'\r\n            // }\r\n        }\r\n    },\r\n    computed:{\r\n        dataSource(){\r\n            return this.obj.data\r\n        },\r\n        weightValuePath(){\r\n            return 'Count'\r\n        },\r\n        leafItemSettings(){\r\n            return {\r\n                labelPath: 'City',\r\n                labelFormat: '${City}<br>${Count} casos',\r\n                gap:5,\r\n                fill: 'green'\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"]}]}