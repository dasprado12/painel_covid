{"remainingRequest":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionBarChart.vue","mtime":1593045827591},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyBpbXBvcnQgZGF0YSBmcm9tICIuLi8uLi8uLi9leGFtcGxlL2luZGV4LmpzIg0KLy8gaW1wb3J0IGRhdGVzIGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZGF0ZXMuanMiDQppbXBvcnQgYmFyQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL0JhckNoYXJ0LnZ1ZSI7DQppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsNCg0KbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBwcm9wczogW10sDQogIGNvbXBvbmVudHM6IHsNCiAgICBiYXJDaGFydA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBwYWdlOiAxLA0KICAgICAgZHJhd2VyOiB0cnVlLA0KICAgICAgcmVnaW9uczogW10sDQogICAgICBpdGVtczogbnVsbCwNCiAgICAgIG5hbWU6ICJERiIsDQogICAgICBzZWxlY3RlZDogW10sDQogICAgICBkYXRlczogbnVsbCwNCiAgICAgIGRhZG9zOiBudWxsLA0KICAgICAgZGFkb3NfZmlsdHJhZG9zOiB7DQogICAgICAgIGluZmVjdGFkb3M6IFtdLA0KICAgICAgICBkaWE6IFtdLA0KICAgICAgICBvYml0b3M6IFtdDQogICAgICB9LA0KICAgICAgaW5mZWN0YWRvczogW10sDQogICAgICBkaWE6IFtdLA0KICAgICAgb2JpdG9zOiBbXSwNCiAgICAgIG51bUlkOiAwDQogICAgfTsNCiAgfSwNCiAgYXN5bmMgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmRhZG9zID0gKGF3YWl0IGFwaV9kYXRhLmdldF9hbGxfZGF0YSgpKS5kYXRhOw0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZ2V0X3JlZ2lvbnMoKTsNCiAgICB0aGlzLmZpbHRlcl9kYXRhKHRoaXMucmVnaW9ucyk7DQogICAgdGhpcy5udW1JZCsrOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0X3JlZ2lvbnMoKSB7DQogICAgICB0aGlzLml0ZW1zID0gKGF3YWl0IGFwaV9kYXRhLmdldF9hbGxfcmVnaW9ucygpKS5kYXRhOw0KICAgIH0sDQogICAgYXN5bmMgZmlsdGVyX2RhdGEocmVnaW9ucykgew0KICAgICAgbGV0IGRheSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCkpLmRhdGE7DQoNCiAgICAgIC8vcGFyYSBjYWRhIHJlZ2lhbw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZWdpb25zLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGxldCBpbmZlY3RhZG9zID0gMDsNCiAgICAgICAgbGV0IG9iaXRvcyA9IDA7DQogICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5kYWRvcy5sZW5ndGg7IGorKykgew0KICAgICAgICAgIC8vY29tcGFyYSBzZSBhIHJlZ2lhbyBjb2luY2lkZQ0KICAgICAgICAgIGlmIChyZWdpb25zW2ldID09IHRoaXMuZGFkb3Nbal0ucmVnaWFvLnRvVXBwZXJDYXNlKCkpIHsNCiAgICAgICAgICAgIC8vY29tcGFyYSBzZSBhIGRhdGEgY29pbmNpZGUNCg0KICAgICAgICAgICAgaWYgKGRheSA9PSB0aGlzLmRhZG9zW2pdLmRhdGFFeHRyYWNhbykgew0KICAgICAgICAgICAgICBpbmZlY3RhZG9zICs9IHRoaXMuZGFkb3Nbal0ubnVtOw0KICAgICAgICAgICAgICBvYml0b3MgKz0gdGhpcy5kYWRvc1tqXS5vYml0b3M7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHRoaXMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3MucHVzaChpbmZlY3RhZG9zKTsNCiAgICAgICAgdGhpcy5kYWRvc19maWx0cmFkb3Mub2JpdG9zLnB1c2gob2JpdG9zKTsNCiAgICAgIH0NCiAgICAgIHRoaXMuaW5mZWN0YWRvcyA9IHRoaXMuZGFkb3NfZmlsdHJhZG9zLmluZmVjdGFkb3M7DQogICAgICB0aGlzLm9iaXRvcyA9IHRoaXMuZGFkb3NfZmlsdHJhZG9zLm9iaXRvczsNCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgcmVnaW9uczogZnVuY3Rpb24odmFsKSB7DQogICAgICB0aGlzLmRhZG9zX2ZpbHRyYWRvcyA9IHsNCiAgICAgICAgaW5mZWN0YWRvczogW10sDQogICAgICAgIGRpYTogW10sDQogICAgICAgIG9iaXRvczogW10NCiAgICAgIH07DQogICAgICB0aGlzLmZpbHRlcl9kYXRhKHZhbCk7DQogICAgICB0aGlzLm51bUlkKys7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegionBarChart.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\r\n  <div>\r\n    <v-card flat outlined>\r\n      <v-card-title>\r\n        <span class=\"font-weight-light\">Cidades</span>\r\n        <v-spacer />\r\n        <v-select\r\n          dense\r\n          v-model=\"regions\"\r\n          :items=\"items\"\r\n          attach\r\n          chips\r\n          multiple\r\n        />\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n      <bar-chart\r\n        v-bind:infected=\"infectados\"\r\n        v-bind:time=\"dates\"\r\n        v-bind:death=\"obitos\"\r\n        v-bind:region=\"regions\"\r\n        :key=\"numId\"\r\n      />\r\n      <!-- <v-card-actions>\r\n                <v-pagination\r\n                    v-model=\"page\"\r\n                    :length=\"3\"\r\n                    :total-visible=\"7\"\r\n                ></v-pagination>\r\n            </v-card-actions> -->\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import data from \"../../../example/index.js\"\r\n// import dates from \"../../../example/dates.js\"\r\nimport barChart from \"../charts/BarChart.vue\";\r\nimport { Data } from \"../../../functions/index.js\";\r\n\r\nlet api_data = new Data();\r\n\r\nexport default {\r\n  props: [],\r\n  components: {\r\n    barChart\r\n  },\r\n  data() {\r\n    return {\r\n      page: 1,\r\n      drawer: true,\r\n      regions: [],\r\n      items: null,\r\n      name: \"DF\",\r\n      selected: [],\r\n      dates: null,\r\n      dados: null,\r\n      dados_filtrados: {\r\n        infectados: [],\r\n        dia: [],\r\n        obitos: []\r\n      },\r\n      infectados: [],\r\n      dia: [],\r\n      obitos: [],\r\n      numId: 0\r\n    };\r\n  },\r\n  async created() {\r\n    this.dados = (await api_data.get_all_data()).data;\r\n  },\r\n  mounted() {\r\n    this.get_regions();\r\n    this.filter_data(this.regions);\r\n    this.numId++;\r\n  },\r\n  methods: {\r\n    async get_regions() {\r\n      this.items = (await api_data.get_all_regions()).data;\r\n    },\r\n    async filter_data(regions) {\r\n      let day = (await api_data.get_last_date()).data;\r\n\r\n      //para cada regiao\r\n      for (let i = 0; i < regions.length; i++) {\r\n        let infectados = 0;\r\n        let obitos = 0;\r\n        for (let j = 0; j < this.dados.length; j++) {\r\n          //compara se a regiao coincide\r\n          if (regions[i] == this.dados[j].regiao.toUpperCase()) {\r\n            //compara se a data coincide\r\n\r\n            if (day == this.dados[j].dataExtracao) {\r\n              infectados += this.dados[j].num;\r\n              obitos += this.dados[j].obitos;\r\n            }\r\n          }\r\n        }\r\n        this.dados_filtrados.infectados.push(infectados);\r\n        this.dados_filtrados.obitos.push(obitos);\r\n      }\r\n      this.infectados = this.dados_filtrados.infectados;\r\n      this.obitos = this.dados_filtrados.obitos;\r\n    }\r\n  },\r\n  watch: {\r\n    regions: function(val) {\r\n      this.dados_filtrados = {\r\n        infectados: [],\r\n        dia: [],\r\n        obitos: []\r\n      };\r\n      this.filter_data(val);\r\n      this.numId++;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.selector {\r\n  text-align: center;\r\n  align-content: center;\r\n}\r\n</style>\r\n"]}]}