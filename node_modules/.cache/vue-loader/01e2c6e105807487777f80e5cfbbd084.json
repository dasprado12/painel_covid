{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/Regioes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/Regioes.vue","mtime":1594241088212},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":1593699361522},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1593699362786},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":1593699362726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhY3VtdWxhZG8gZnJvbSAiLi4vdmlzdWFsaXplL0FjdW11bGFkby52dWUiCmltcG9ydCBzZWxldG9yIGZyb20gIi4uL3Zpc3VhbGl6ZS9TZWxldG9yLnZ1ZSIKaW1wb3J0IHsgRGF0YSB9IGZyb20gIi4uLy4uLy4uL2Z1bmN0aW9ucy9pbmRleC5qcyIKbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsgYWN1bXVsYWRvLCBzZWxldG9yIH0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGltZTogbnVsbCwKICAgICAgICAgICAgbGFzdF90aW1lOiBudWxsLAogICAgICAgICAgICByZWdpb25zOiBbXSwKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewogICAgICAgIHRoaXMuZ2V0X3RpbWUoKQogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIGFzeW5jIGdldF90aW1lKCl7CiAgICAgICAgICAgIHRoaXMudGltZSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfYWxsX3JlZ2lvbnMoKSkuZGF0YQogICAgICAgICAgICB0aGlzLmxhc3RfdGltZSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCkpLmRhdGEuc3BsaXQoJ1QnKVswXQogICAgICAgIH0KICAgIH0KICAgIAp9Cg=="},{"version":3,"sources":["Regioes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Regioes.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\n    <div class=\"regioes\">\n        <div class=\"acumulado\">\n            <v-row>\n                <v-col cols=\"12\">\n                    <h2 class=\"font-weight-light\">Histórico</h2>\n                <v-divider/>\n                </v-col>\n                <v-col cols=\"12\">\n                    <v-card flat>\n                        <acumulado></acumulado>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </div>\n        <div class=\"seletor\">\n            <v-row>\n                <v-col cols=\"6\">\n                    <h2 class=\"font-weight-light\">Por Região</h2>\n                </v-col>\n                <v-col cols=\"6\">\n                    <h2 class=\"font-weight-light\">\n                        <v-select dense v-model=\"regions\" :items=\"time\" attach chips multiple/>\n                    </h2>\n                </v-col>\n                <v-col cols=\"12\">\n                    <v-card flat>\n                        <seletor \n                            v-bind:regions=\"regions\"\n                            v-bind:last_time=\"last_time\"\n                        />\n                    </v-card>\n                </v-col>\n            </v-row>\n        </div>\n    </div>\n</template>\n\n<script>\nimport acumulado from \"../visualize/Acumulado.vue\"\nimport seletor from \"../visualize/Seletor.vue\"\nimport { Data } from \"../../../functions/index.js\"\nlet api_data = new Data();\n\nexport default {\n    components: { acumulado, seletor },\n    data(){\n        return {\n            time: null,\n            last_time: null,\n            regions: [],\n        }\n    },\n    created(){\n        this.get_time()\n    },\n    methods:{\n        async get_time(){\n            this.time = (await api_data.get_all_regions()).data\n            this.last_time = (await api_data.get_last_date()).data.split('T')[0]\n        }\n    }\n    \n}\n</script>\n\n<style scoped>\n\n</style>"]}]}