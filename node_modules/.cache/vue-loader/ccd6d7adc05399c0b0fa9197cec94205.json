{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionLineChart.vue","mtime":1591416365729},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBsaW5lQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL0xpbmVDaGFydC52dWUiCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9leGFtcGxlL2Z1bmN0aW9ucy5qcyI7CgpsZXQgbmV3RGF0YSA9IG5ldyBEYXRhKCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogWyAncmVnaW9uJyBdLAogICAgY29tcG9uZW50czogeyBsaW5lQ2hhcnQgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByZWdpb25zOiBbIF0sCiAgICAgICAgICAgIGRhdGE6IG51bGwsCiAgICAgICAgICAgIGl0ZW1zOiBbIAogICAgICAgICAgICAgICAgIsOBR1VBUyBDTEFSQVMiLCAiUkVDQU5UTyBEQVMgRU1BUyIsICJTQU1BTUJBSUEiLCAiVEFHVUFUSU5HQSIsICJWSUNFTlRFIFBJUkVTIiwgIkNFTlRSQUwiLCAiU1VET0VTVEUiLCAiUExBTk8gUElMT1RPIiwgIlNVRE9FU1RFL09DVE9HT05BTCIsICJMQUdPIE5PUlRFIiwgIkxBR08gU1VMIiwgIlZBUkrDg08gRE8gVE9SVE8iLCAiQ0VOVFJPIFNVTCIsICJDQU5EQU5HT0zDgk5ESUEiLCAiUEFSS1dBWSIsICJHVUFSw4EiLCAiTsOaQ0xFTyBCQU5ERUlSQU5URSIsICJSSUFDSE8gRlVORE8gSSIsICJSSUFDSE8gRlVORE8gSUkiLCAiU0NJQSAoRVNUUlVUVVJBTCkiLCAiQ1JVWkVJUk8iLCAiTk9SVEUiLCAiRkVSQ0FMIiwgIlBMQU5BTFRJTkEiLCAiU09CUkFESU5ITyBJIiwgIlNPQlJBRElOSE8gSUkiLCAiR0FNQSIsICJTQU5UQSBNQVJJQSIsICJMRVNURSIsICJKQVJESU0gQk9Uw4JOSUNPIiwgIklUQVBPw4MiLCAiUEFSQU5Pw4EiLCAiU8ODTyBTRUJBU1RJw4NPIiwgIlNVTCIsICJPRVNURSIsICJCUkFaTMOCTkRJQSIsICJDRUlMw4JORElBIiwgIlBPUFVMQcOHw4NPIFBSSVZBREEgREUgTElCRVJEQURFIiwgIlMgSSBBIiwgIlJBIEVNIElOVkVTVElHQcOHw4NPIiAKICAgICAgICAgICAgXSwKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBpbmZlY3RhZG9zOiBbbnVsbF0sCiAgICAgICAgICAgIGRhdGVzOiBbbnVsbF0sCiAgICAgICAgICAgIG9iaXRvczogW251bGxdLAogICAgICAgICAgICBudW1JZDogMAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZ2V0X3JlZ2lvbignJykKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHJlZ2lvbnModmFsKXsKICAgICAgICAgICAgdGhpcy5nZXRfcmVnaW9uKHZhbCkKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldF9yZWdpb24ocmVnaW9uKXsKICAgICAgICAgICAgbGV0IGRhdGEgPSBuZXdEYXRhLmdldF9ieV9yZWdpb24ocmVnaW9uKQogICAgICAgICAgICBsZXQgaW5mZWN0YWRvcyA9IFtdCiAgICAgICAgICAgIGxldCBkYXRlcyA9IFtdCiAgICAgICAgICAgIGxldCBvYml0b3MgPSBbXQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgICBpbmZlY3RhZG9zLnB1c2goZGF0YVtpXS5udW0pCiAgICAgICAgICAgICAgICBkYXRlcy5wdXNoKCBuZXcgRGF0ZSggZGF0YVtpXS5kYXRhRXh0cmFjYW8pLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXS5zbGljZSg1KSApCiAgICAgICAgICAgICAgICBvYml0b3MucHVzaChkYXRhW2ldLm9iaXRvcykKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmluZmVjdGFkb3MgPSBpbmZlY3RhZG9zCiAgICAgICAgICAgIHRoaXMuZGF0ZXMgPSBkYXRlcwogICAgICAgICAgICB0aGlzLm9iaXRvcyA9IG9iaXRvcwogICAgICAgICAgICB0aGlzLm51bUlkKysKICAgICAgICB9LAogICAgICAgIGNoYW5nZUNoYXJ0KGl0ZW0pewogICAgICAgICAgICB0aGlzLnR5cGUgPSBpdGVtCiAgICAgICAgICAgIHRoaXMubnVtSWQrKwogICAgICAgIH0KICAgIH0gICAgICAgCn0K"},{"version":3,"sources":["RegionLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegionLineChart.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\n    <div>\n        <v-card>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <line-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:type=\"type\"\n                :key=\"numId\"\n            />\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"changeChart('line')\">Line</v-btn>\n                <v-btn text @click=\"changeChart('bar')\">Bar</v-btn>\n            </v-card-actions>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport lineChart from \"../charts/LineChart.vue\"\nimport { Data } from \"../../../example/functions.js\";\n\nlet newData = new Data();\n\nexport default {\n    props: [ 'region' ],\n    components: { lineChart },\n    data(){\n        return {\n            regions: [ ],\n            data: null,\n            items: [ \n                \"ÁGUAS CLARAS\", \"RECANTO DAS EMAS\", \"SAMAMBAIA\", \"TAGUATINGA\", \"VICENTE PIRES\", \"CENTRAL\", \"SUDOESTE\", \"PLANO PILOTO\", \"SUDOESTE/OCTOGONAL\", \"LAGO NORTE\", \"LAGO SUL\", \"VARJÃO DO TORTO\", \"CENTRO SUL\", \"CANDANGOLÂNDIA\", \"PARKWAY\", \"GUARÁ\", \"NÚCLEO BANDEIRANTE\", \"RIACHO FUNDO I\", \"RIACHO FUNDO II\", \"SCIA (ESTRUTURAL)\", \"CRUZEIRO\", \"NORTE\", \"FERCAL\", \"PLANALTINA\", \"SOBRADINHO I\", \"SOBRADINHO II\", \"GAMA\", \"SANTA MARIA\", \"LESTE\", \"JARDIM BOTÂNICO\", \"ITAPOÃ\", \"PARANOÁ\", \"SÃO SEBASTIÃO\", \"SUL\", \"OESTE\", \"BRAZLÂNDIA\", \"CEILÂNDIA\", \"POPULAÇÃO PRIVADA DE LIBERDADE\", \"S I A\", \"RA EM INVESTIGAÇÃO\" \n            ],\n            type: 'line',\n            infectados: [null],\n            dates: [null],\n            obitos: [null],\n            numId: 0\n        }\n    },\n    mounted() {\n        this.get_region('')\n    },\n    watch: {\n        regions(val){\n            this.get_region(val)\n        }\n    },\n    methods: {\n        get_region(region){\n            let data = newData.get_by_region(region)\n            let infectados = []\n            let dates = []\n            let obitos = []\n            for(let i = 0; i < data.length; i++){\n                infectados.push(data[i].num)\n                dates.push( new Date( data[i].dataExtracao).toISOString().split('T')[0].slice(5) )\n                obitos.push(data[i].obitos)\n            }\n            this.infectados = infectados\n            this.dates = dates\n            this.obitos = obitos\n            this.numId++\n        },\n        changeChart(item){\n            this.type = item\n            this.numId++\n        }\n    }       \n}\n</script>"]}]}