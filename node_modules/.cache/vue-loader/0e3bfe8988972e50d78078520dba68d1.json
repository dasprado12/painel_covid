{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/BrasilLine.vue?vue&type=style&index=0&id=5afa66d6&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/BrasilLine.vue","mtime":1592600380314},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWxlY3RvcnsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKfQo="},{"version":3,"sources":["BrasilLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA","file":"BrasilLine.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\n    <div>\n        <v-card flat outlined>\n            <v-card-title>\n                <span class=\"font-weight-light\"> Total </span> \n                <v-spacer/>\n                <v-btn text small class=\"font-weight-light\" @click=\"changeChart('line')\">Linha</v-btn>\n                <v-btn text small class=\"font-weight-light\" @click=\"changeChart('bar')\">Barra</v-btn>\n            </v-card-title>\n            <v-divider></v-divider>\n            <v-card-text>\n                <line-chart\n                    v-bind:infected=\"infectados\"\n                    v-bind:time=\"dates\"\n                    v-bind:death=\"obitos\"\n                    v-bind:type=\"type\"\n                    :key=\"numId\"\n                />\n            </v-card-text>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\";\n// import dates from \"../../../example/dates.js\"\nimport lineChart from \"../charts/LineChart.vue\"\n\nlet api_data = new Data()\n\nexport default {\n    components: { \n        lineChart\n    },\n    data(){\n        return {\n            // Dados que vao para o lineChart\n            type: 'line',\n            infectados: [],\n            obitos: [],\n            numId: 0,\n\n            selected: ['Infectados', 'Obitos'],\n\n            dates: null, // Datas vindos da API\n            dados: null, // Dados vindos da API\n        }\n    },\n    async created(){\n        this.list_data()\n        this.list_dates()\n    },\n    mounted(){\n        // this.modify_dates()\n    },\n    methods: {\n        async list_data(){\n            this.dados = (await api_data.get_all_data()).data.map(function(data){ return { num:data.num, obitos: data.obitos, dataExtracao: data.dataExtracao.split('T')[0] } })\n        },\n        async list_dates(){\n            this.dates = (await api_data.get_all_dates()).data.sort().map(function(date){ return date.split('T')[0] })\n        },\n        changeChart(item){\n            this.type = item\n            this.numId++\n        },\n        filter_data(){\n            let filtrado_infectados = []\n            let filtrado_obitos = []\n            for(let i = 0; i < this.dates.length; i++ ){\n            let infectados = 0\n            let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    if( this.dates[i] == this.dados[j].dataExtracao ){\n                        infectados += this.dados[j].num\n                        obitos += this.dados[j].obitos\n                    }\n                }\n                filtrado_infectados.push(infectados)\n                filtrado_obitos.push(obitos)\n            }\n            this.infectados = filtrado_infectados\n            this.obitos = filtrado_obitos\n            this.numId++\n        }\n    },\n    watch: {\n        dates(val){\n            if(val != null){\n                this.filter_data()\n            }\n        },\n        selected: function(val) {\n            if( !val.includes('Obitos') ){\n                this.obitos = [0]\n                this.numId++\n            }\n            if( val.includes('Obitos') ){\n                this.obitos = this.dados_filtrados.obitos\n                this.numId++\n            }\n            if( !val.includes('Infectados') ){\n                this.infectados = [0]\n                this.numId++\n            }\n            if( val.includes('Infectados') ){\n                this.infectados = this.dados_filtrados.infectados\n                this.numId++\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>"]}]}