{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1597697156094},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiCmltcG9ydCB7IGxhdExuZyB9IGZyb20gImxlYWZsZXQiOwppbXBvcnQgeyBMR2VvSnNvbiwgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTFBvcHVwLCBMSWNvbkRlZmF1bHQgfSBmcm9tICJ2dWUyLWxlYWZsZXQiOwppbXBvcnQgVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyIGZyb20gJ3Z1ZTItbGVhZmxldC1tYXJrZXJjbHVzdGVyJwoKbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsKCgpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJTaW1wbGVNYXAiLApwcm9wczogWyAnc2hvd1BvaW50cycsICd0eXBlJyBdLCAgCmNvbXBvbmVudHM6IHsgTEdlb0pzb24sIExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExQb3B1cCwgTEljb25EZWZhdWx0LCAndi1tYXJrZXItY2x1c3Rlcic6IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlciwKfSwKZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgICAgZGF0YTogbnVsbCwKICAgICAgICBmaWx0ZXJlZERhdGE6IG51bGwsCiAgICAgICAgZ2VvanNvbjogbnVsbCwKICAgICAgICBsYXN0X2RhdGU6IG51bGwsCiAgICAgICAgem9vbTogMTAsCiAgICAgICAgY29sb3JzOiB7CiAgICAgICAgICAgIG51bTogICAgWyAnI2VkZGVkMScsICcjZTNiZDlkJywgJyNkNDkzNWQnLCAnI2QxNmIxNycsICcjODU0MDA3JyBdLAogICAgICAgICAgICBvYml0b3M6IFsgJyNmMmU2ZTYnLCAnI2VkYmJiYicsICcjZDY3YzdjJywgJyNiMzNlM2UnLCAnIzY2MDQwNCcgXQogICAgICAgIH0sCiAgICAgICAgY2VudGVyOiBsYXRMbmcoLTE1Ljc5MzU5OSwgLTQ3LjgxNDk4NyksCiAgICAgICAgY3VycmVudFpvb206IDExLjUsCiAgICAgICAgY3VycmVudENlbnRlcjogbGF0TG5nKDQ3LjQxMzIyLCAtMS4yMTk0ODIpLAogICAgICAgIHJhbmdlOiB7CiAgICAgICAgICAgIG51bTogWyAxMDAwLCAyMDAwLCAzMDAwLCA0MDAwIF0sCiAgICAgICAgICAgIG9iaXRvczpbIDEwLCAyMCwgMzAsIDQwIF0KICAgICAgICB9LAogICAgICAgIGN1cnJlbnRPcHRpb246IHsKICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgIG51bTogJycsCiAgICAgICAgICAgIG9iaXRvczogJycsCiAgICAgICAgICAgIGNvbG9yOiBudWxsCiAgICAgICAgfQogICAgfQp9LAphc3luYyBtb3VudGVkKCl7CiAgICB0aGlzLmNyZWF0ZSgpOwogICAgdGhpcy5zZXRDdXJyZW50KHtzdHlsZTp7Y29sb3I6Jyd9LCBkYXRhOntyZWdpYW86J1JlZ2nDo28nLCBudW06Jy0tLS0tLS0tJywgb2JpdG9zOiAnLS0tLS0tLS0tJyB9fSkKfSwKbWV0aG9kczogewogICAgYXN5bmMgY3JlYXRlKCl7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Rhc3ByYWRvMTIvQnJhc2lsaWEtUkFzLWdlb3JyZWZlcmVuY2lhZGFzL21hc3Rlci9HZW9qc29ucy9BbGwuZ2VvanNvbicpOwogICAgICAgIGxldCBnZW9qc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpIAogICAgICAgIGxldCBsYXN0X2RhdGUgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X2xhc3RfZGF0ZSgpKS5kYXRhLnNwbGl0KCJUIilbMF0KICAgICAgICB0aGlzLnJhbmdlID0gewogICAgICAgICAgICBudW06IFsgMTAwMCwgMjAwMCwgMzAwMCwgNDAwMCBdLAogICAgICAgICAgICBvYml0b3M6WyAxMCwgMjAsIDMwLCA0MCBdCiAgICAgICAgfS8vKGF3YWl0IGFwaV9kYXRhLmdldF9pbmNpZCgpKS5kYXRhLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gfn5pdGVtfSkKICAgICAgICBsZXQgZGF0YSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfcmVnaW9uX2J5X2RhdGUobGFzdF9kYXRlKSApLmRhdGEubWFwKGZ1bmN0aW9uKGRhdGEpewogICAgICAgICAgICBpZighZGF0YS5sYXRpdHVkZSB8fCAhZGF0YS5sb25naXR1ZGUpewogICAgICAgICAgICAgICAgZGF0YS5sYXRpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgICAgICBkYXRhLmxvbmdpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YVsncG9zaWNhbyddID0geyBsYXQ6IGRhdGEubGF0aXR1ZGUsIGxuZzogZGF0YS5sb25naXR1ZGV9CiAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgfSkKICAgICAgICB0aGlzLmRhdGEgPSBkYXRhCiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGdlb2pzb24ubGVuZ3RoOyBpKyspewogICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgZGF0YS5sZW5ndGg7IGorKyl7CiAgICAgICAgICAgICAgICBpZihnZW9qc29uW2ldLm5hbWUgPT0gZGF0YVtqXS5yZWdpYW8pewogICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ2RhdGEnXSA9IHsgInJlZ2lhbyI6IGRhdGFbal0ucmVnaWFvLCAibnVtIjogZGF0YVtqXS5udW0sICJvYml0b3MiOiBkYXRhW2pdLm9iaXRvcyAgIH0KICAgICAgICAgICAgICAgICAgICBpZihkYXRhW2pdW3RoaXMudHlwZV0gPCB0aGlzLnJhbmdlW3RoaXMudHlwZV1bMF0pewogICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0geyBjb2xvcjogdGhpcy5jb2xvcnNbdGhpcy50eXBlXVswXSwgd2VpZ2h0OiAyIH0KICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZihkYXRhW2pdW3RoaXMudHlwZV0gPj0gdGhpcy5yYW5nZVt0aGlzLnR5cGVdWzBdICYmIGRhdGFbal1bdGhpcy50eXBlXSA8IHRoaXMucmFuZ2VbdGhpcy50eXBlXVsxXSApewogICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0geyBjb2xvcjogdGhpcy5jb2xvcnNbdGhpcy50eXBlXVsxXSwgd2VpZ2h0OiAyIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZihkYXRhW2pdW3RoaXMudHlwZV0gPj0gdGhpcy5yYW5nZVt0aGlzLnR5cGVdWzFdICYmIGRhdGFbal1bdGhpcy50eXBlXSA8IHRoaXMucmFuZ2VbdGhpcy50eXBlXVsyXSl7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7IGNvbG9yOiB0aGlzLmNvbG9yc1t0aGlzLnR5cGVdWzJdLCB3ZWlnaHQ6IDIgfQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKGRhdGFbal1bdGhpcy50eXBlXSA+PSB0aGlzLnJhbmdlW3RoaXMudHlwZV1bMl0gJiYgZGF0YVtqXVt0aGlzLnR5cGVdIDwgdGhpcy5yYW5nZVt0aGlzLnR5cGVdWzNdICl7CiAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7IGNvbG9yOiB0aGlzLmNvbG9yc1t0aGlzLnR5cGVdWzNdLCB3ZWlnaHQ6IDIgfQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKGRhdGFbal1bdGhpcy50eXBlXSA+PSB0aGlzLnJhbmdlW3RoaXMudHlwZV1bM10pewogICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0geyBjb2xvcjogdGhpcy5jb2xvcnNbdGhpcy50eXBlXVs0XSwgd2VpZ2h0OiAyIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgZ2VvanNvbltpXVsnc3R5bGUnXSA9IHsgY29sb3I6ICIjODI4MjgyIiB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuZ2VvanNvbiA9IGdlb2pzb24KICAgIH0sCiAgICBsZWdlbmRhKCl7CiAgICAgICAgbGV0IHJldCA9IHRoaXMucmFuZ2VbdGhpcy50eXBlXQogICAgICAgIGxldCBhcnJfcmV0ID0gW10KICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgcmV0Lmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgaWYoaT09MCl7CiAgICAgICAgICAgICAgICBhcnJfcmV0LnB1c2goeydtZW5vcic6IHJldFtpXX0pCiAgICAgICAgICAgIH1lbHNlIGlmKGkgPT0gMSl7CiAgICAgICAgICAgICAgICBhcnJfcmV0LnB1c2goeydtYWlvcic6IHJldFtpLTFdLCAnbWVub3InOiByZXRbaV19KQogICAgICAgICAgICB9ZWxzZSBpZihpID09IDIpewogICAgICAgICAgICAgICAgYXJyX3JldC5wdXNoKHsnbWFpb3InOiByZXRbaS0xXSwgJ21lbm9yJzogcmV0W2ldfSkKICAgICAgICAgICAgfWVsc2UgaWYoaSA9PSAzKXsKICAgICAgICAgICAgICAgIGFycl9yZXQucHVzaCh7J21haW9yJzogcmV0W2ktMV0sICdtZW5vcic6IHJldFtpXX0pCiAgICAgICAgICAgICAgICBhcnJfcmV0LnB1c2goeydtYWlvcic6IHJldFtpXX0pCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGFycl9yZXQKICAgIH0sCiAgICBnZXRDb2xvcih0aXBvLCBwb3NpY2FvKXsKICAgICAgICByZXR1cm4gdGhpcy5jb2xvcnNbdGhpcy50eXBlXVtwb3NpY2FvXQogICAgfSwKICAgIHpvb21VcGRhdGUoem9vbSkgewogICAgICAgIHRoaXMuY3VycmVudFpvb20gPSB6b29tOwogICAgfSwKICAgIGNlbnRlclVwZGF0ZShjZW50ZXIpIHsKICAgICAgICB0aGlzLmN1cnJlbnRDZW50ZXIgPSBjZW50ZXI7CiAgICB9LAogICAgc2hvd0xvbmdUZXh0KCkgewogICAgICAgIHRoaXMuc2hvd1BhcmFncmFwaCA9ICF0aGlzLnNob3dQYXJhZ3JhcGg7CiAgICB9LAogICAgaW5uZXJDbGljaygpIHsKICAgICAgICBhbGVydCgiQ2xpY2shIik7CiAgICB9LAogICAgc2hvd1BvcHVwKHZhbCl7CiAgICAgICAgYWxlcnQodmFsKQogICAgfSwKICAgIG1vdXNlT3ZlcihpdGVtKXsKICAgICAgICB0aGlzLnNldEN1cnJlbnQoaXRlbSkKICAgIH0sCiAgICBzZXRDdXJyZW50KGl0ZW0pewogICAgICAgIHRoaXMuY3VycmVudE9wdGlvbi5jb2xvciA9IGl0ZW0uc3R5bGUuY29sb3IKICAgICAgICB0aGlzLmN1cnJlbnRPcHRpb24ubmFtZSA9IGl0ZW0uZGF0YS5yZWdpYW8KICAgICAgICB0aGlzLmN1cnJlbnRPcHRpb24ubnVtID0gaXRlbS5kYXRhLm51bQogICAgICAgIHRoaXMuY3VycmVudE9wdGlvbi5vYml0b3MgPSBpdGVtLmRhdGEub2JpdG9zCiAgICB9LAogICAgY2hhbmdlVHh0Q29sb3IoY29sb3IpewogICAgICAgIGNvbnNvbGUubG9nKGNvbG9yKQogICAgfQp9Cn07Cg=="},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleMap.vue","sourceRoot":"src/views/Projeto/maps","sourcesContent":["<template>\n    <div class=\"mapCss\">\n        <div class=\"legenda\">\n            <v-card elevation=\"5\">\n                <v-row>\n                    <v-col cols=\"6\">\n                        <v-card-title class=\"`white--text`\">\n                            <h5 :class=\"`${changeTxtColor(currentOption.color)}--text`\">{{currentOption.name}}</h5>\n                        </v-card-title>\n                        <v-card-text>\n                            <span class=\"legenda-texto\"> <b>Infectados:</b> {{currentOption.num}} </span><br>\n                            <span class=\"legenda-texto\"> <b>Ã“bitos:</b> {{currentOption.obitos}} </span>\n                        </v-card-text>\n                    </v-col>\n                    <v-col cols=\"6\">\n                            <v-card-text>\n                                <div v-for=\"(item,idx) in legenda()\" :key=\"item\">\n                                    <span v-if=\"idx==0\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> 0 - {{item.menor-1}}  </span>\n                                    <span v-if=\"idx>=1 && idx <=3\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> {{item.maior}} - {{item.menor-1}}  </span>\n                                    <span v-if=\"idx==4\"> <v-badge :color=\"getColor(type, idx)\"/> <span class=\"simple-space\"/> {{item.maior}} - maior  </span>\n                                </div>\n                            </v-card-text>\n                    </v-col>\n                </v-row>\n            </v-card>\n        </div>\n        <div class=\"legenda2\">\n            <v-card flat color=\"transparent\">\n                \n            </v-card>\n        </div>\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n            <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n            <l-geo-json \n                v-for=\"item in geojson\" \n                :geojson=\"item\" \n                :options=\"item.style\" \n                :key=\"item.name\"\n                @mouseover=\"mouseOver(item)\"\n            />                \n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n                <v-marker-cluster>\n                    <l-marker  v-for=\"point in filteredData\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                        <l-popup>\n                            <div @click=\"innerClick\">\n                                <v-card flat>\n                                    <v-card-title><b>RegiÃ£o:</b> {{ point.regiao }}</v-card-title>\n                                    <v-card-text>\n                                        <b>Infectados:</b> {{ point.num }}\n                                        <b>Ã“bitos:</b> {{ point.obitos }}\n                                    </v-card-text>\n                                </v-card>\n                            </div>\n                        </l-popup>\n                    </l-marker>\n                </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\nprops: [ 'showPoints', 'type' ],  \ncomponents: { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster,\n},\ndata() {\n    return {\n        data: null,\n        filteredData: null,\n        geojson: null,\n        last_date: null,\n        zoom: 10,\n        colors: {\n            num:    [ '#edded1', '#e3bd9d', '#d4935d', '#d16b17', '#854007' ],\n            obitos: [ '#f2e6e6', '#edbbbb', '#d67c7c', '#b33e3e', '#660404' ]\n        },\n        center: latLng(-15.793599, -47.814987),\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        range: {\n            num: [ 1000, 2000, 3000, 4000 ],\n            obitos:[ 10, 20, 30, 40 ]\n        },\n        currentOption: {\n            name: '',\n            num: '',\n            obitos: '',\n            color: null\n        }\n    }\n},\nasync mounted(){\n    this.create();\n    this.setCurrent({style:{color:''}, data:{regiao:'RegiÃ£o', num:'--------', obitos: '---------' }})\n},\nmethods: {\n    async create(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json() \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        this.range = {\n            num: [ 1000, 2000, 3000, 4000 ],\n            obitos:[ 10, 20, 30, 40 ]\n        }//(await api_data.get_incid()).data.map(function(item){return ~~item})\n        let data = (await api_data.get_region_by_date(last_date) ).data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude, lng: data.longitude}\n            return data\n        })\n        this.data = data\n        for(let i = 0; i < geojson.length; i++){\n            for(let j = 0; j < data.length; j++){\n                if(geojson[i].name == data[j].regiao){\n                    geojson[i]['data'] = { \"regiao\": data[j].regiao, \"num\": data[j].num, \"obitos\": data[j].obitos   }\n                    if(data[j][this.type] < this.range[this.type][0]){\n                        geojson[i]['style'] = { color: this.colors[this.type][0], weight: 2 }\n                    }else if(data[j][this.type] >= this.range[this.type][0] && data[j][this.type] < this.range[this.type][1] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][1], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][1] && data[j][this.type] < this.range[this.type][2]){\n                        geojson[i]['style'] = { color: this.colors[this.type][2], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][2] && data[j][this.type] < this.range[this.type][3] ){\n                        geojson[i]['style'] = { color: this.colors[this.type][3], weight: 2 }\n                    \n                    }else if(data[j][this.type] >= this.range[this.type][3]){\n                        geojson[i]['style'] = { color: this.colors[this.type][4], weight: 2 }\n                    \n                    }else{\n                        geojson[i]['style'] = { color: \"#828282\" }\n                    }\n                }\n            }\n        }\n        this.geojson = geojson\n    },\n    legenda(){\n        let ret = this.range[this.type]\n        let arr_ret = []\n        for(let i = 0; i < ret.length; i++){\n            if(i==0){\n                arr_ret.push({'menor': ret[i]})\n            }else if(i == 1){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n            }else if(i == 2){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n            }else if(i == 3){\n                arr_ret.push({'maior': ret[i-1], 'menor': ret[i]})\n                arr_ret.push({'maior': ret[i]})\n            }\n        }\n        return arr_ret\n    },\n    getColor(tipo, posicao){\n        return this.colors[this.type][posicao]\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    },\n    showPopup(val){\n        alert(val)\n    },\n    mouseOver(item){\n        this.setCurrent(item)\n    },\n    setCurrent(item){\n        this.currentOption.color = item.style.color\n        this.currentOption.name = item.data.regiao\n        this.currentOption.num = item.data.num\n        this.currentOption.obitos = item.data.obitos\n    },\n    changeTxtColor(color){\n        console.log(color)\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n.cardColor{\n    background-color: rgb(240, 240, 240);\n}\n.legenda{\n    margin-left: 25px;\n    margin-top: 305px;\n    position: absolute;\n    z-index: 500;\n    color: rgb(202, 109, 109);\n}\n\n.text-legend{\n    position: absolute;\n    z-index: 500;\n}\n\n.simple-space{\n    padding-left: 20px;\n}\n\n.currentColor{\n    position: absolute;\n}\n\n</style>"]}]}