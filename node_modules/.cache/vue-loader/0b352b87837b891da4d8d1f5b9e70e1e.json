{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeInfectados.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeInfectados.vue","mtime":1597691200289},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmVlTWFwSW5mIGZyb20gIi4uL2NoYXJ0cy9QaWVDaGFydC52dWUiOwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsKCmxldCBhcGlfZGF0YSA9IG5ldyBEYXRhKCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogWyAncmVnaW9ucycgXSwKICAgIGNvbXBvbmVudHM6IHsgVHJlZU1hcEluZiB9LAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRhdGE6IG51bGwsCiAgICAgICAgICAgIGZpbHRlcl9kYXRhOiBbXSwKICAgICAgICAgICAgbGFzdF9kYXRlOiBudWxsLCAKICAgICAgICAgICAgYW1vdW50RGF0YTogW10sCiAgICAgICAgICAgIGFtb3VudFJlZ2lvbnM6IFtdLAogICAgICAgICAgICBrZXk6IDAsCiAgICAgICAgfQogICAgfSwKICAgIGFzeW5jIGNyZWF0ZWQoKXsKICAgICAgICB0aGlzLmdldF9kYXRhKHRoaXMucmVnaW9ucykKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgZ2V0X2RhdGEocmVnaW9ucyl7CiAgICAgICAgICAgIGxldCBsYXN0X2RhdGUgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X2xhc3RfZGF0ZSgpKS5kYXRhLnNwbGl0KCJUIilbMF0KICAgICAgICAgICAgbGV0IGRhdGEgPSAoIGF3YWl0IGFwaV9kYXRhLmdldF9yZWdpb25fYnlfZGF0ZShsYXN0X2RhdGUpICkuZGF0YQogICAgICAgICAgICB0aGlzLmFtb3VudERhdGEgPSBbXQogICAgICAgICAgICB0aGlzLmFtb3VudFJlZ2lvbnMgPSBbXQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgcmVnaW9ucy5sZW5ndGg7IGorKyl7CiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YVtpXS5yZWdpYW8gPT0gcmVnaW9uc1tqXSl7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYW1vdW50RGF0YS5wdXNoKGRhdGFbaV0ubnVtKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFtb3VudFJlZ2lvbnMucHVzaChkYXRhW2ldLnJlZ2lhbykKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5rZXkrKwogICAgICAgIH0sCiAgICB9LAogICAgd2F0Y2g6ewogICAgICAgIHJlZ2lvbnModmFsKXsKICAgICAgICAgICAgdGhpcy5nZXRfZGF0YSh2YWwpCiAgICAgICAgfQogICAgfQogICAgCn0K"},{"version":3,"sources":["TreeInfectados.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"TreeInfectados.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\n    <div>\n        <v-card outlined color=\"grey lighten-4\">\n            <v-card-title class=\"font-weight-light\"> Regi√µes com mais infectados </v-card-title>\n                <tree-map-inf \n                    :data=\"amountData\"\n                    :regions=\"amountRegions\"\n                    v-bind:obj=\"data_inf\" \n                    :key=\"key\"\n                />\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport TreeMapInf from \"../charts/PieChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ 'regions' ],\n    components: { TreeMapInf },\n    data(){\n        return {\n            data: null,\n            filter_data: [],\n            last_date: null, \n            amountData: [],\n            amountRegions: [],\n            key: 0,\n        }\n    },\n    async created(){\n        this.get_data(this.regions)\n    },\n    methods: {\n        async get_data(regions){\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n            let data = ( await api_data.get_region_by_date(last_date) ).data\n            this.amountData = []\n            this.amountRegions = []\n            for(let i = 0; i < data.length; i++){\n                for(let j = 0; j < regions.length; j++){\n                    if(data[i].regiao == regions[j]){\n                        this.amountData.push(data[i].num)\n                        this.amountRegions.push(data[i].regiao)\n                    }\n                }\n            }\n            this.key++\n        },\n    },\n    watch:{\n        regions(val){\n            this.get_data(val)\n        }\n    }\n    \n}\n</script>"]}]}