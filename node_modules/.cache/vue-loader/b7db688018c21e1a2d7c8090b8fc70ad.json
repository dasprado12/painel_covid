{"remainingRequest":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionBarChart.vue?vue&type=style&index=0&id=4e8d37fb&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionBarChart.vue","mtime":1593045380653},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592265200990},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1593041807827},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\postcss-loader\\src\\index.js","mtime":1590690792015},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1592265207055},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":1593041807827}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5zZWxlY3RvcnsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgYWxpZ24tY29udGVudDogY2VudGVyOw0KfQ0K"},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA","file":"RegionBarChart.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\r\n    <div>\r\n        <v-card flat outlined>\r\n            <v-card-title>\r\n                <span class=\"font-weight-light\">Cidades</span>\r\n                <v-spacer/>\r\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips multiple/>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n            <bar-chart\r\n                v-bind:infected=\"infectados\"\r\n                v-bind:time=\"dates\"\r\n                v-bind:death=\"obitos\"\r\n                v-bind:region=\"regions\"\r\n                :key=\"numId\"\r\n            />\r\n            <!-- <v-card-actions>\r\n                <v-pagination\r\n                    v-model=\"page\"\r\n                    :length=\"3\"\r\n                    :total-visible=\"7\"\r\n                ></v-pagination>\r\n            </v-card-actions> -->\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import data from \"../../../example/index.js\"\r\n// import dates from \"../../../example/dates.js\"\r\nimport barChart from \"../charts/BarChart.vue\";\r\nimport { Data } from \"../../../functions/index.js\";\r\n\r\nlet api_data = new Data();\r\n\r\nexport default {\r\n    props: [ \r\n    ],\r\n    components: { \r\n        barChart\r\n    },\r\n    data(){\r\n        return {\r\n            page: 1,\r\n            drawer: true,\r\n            regions: [ ],\r\n            items: null,\r\n            name: 'DF',\r\n            selected: [],\r\n            dates: null,\r\n            dados: null,\r\n            dados_filtrados: {\r\n                infectados: [],\r\n                dia: [],\r\n                obitos: []\r\n            },\r\n            infectados: [],\r\n            dia: [],\r\n            obitos: [],\r\n            numId: 0\r\n        }\r\n    },\r\n    async created(){\r\n        this.dados = (await api_data.get_all_data()).data\r\n    },\r\n    mounted(){\r\n        this.get_regions()\r\n        this.filter_data(this.regions)\r\n        this.numId++\r\n    },\r\n    methods: {\r\n        async get_regions(){\r\n            this.items = (await api_data.get_all_regions()).data\r\n        },\r\n        async filter_data(regions){\r\n            let day = (await api_data.get_last_date()).data\r\n\r\n            //para cada regiao\r\n            for(let i = 0; i < regions.length; i++ ){\r\n                let infectados = 0\r\n                let obitos = 0\r\n                for(let j = 0; j < this.dados.length; j++){\r\n                    //compara se a regiao coincide\r\n                    if( regions[i] == this.dados[j].regiao.toUpperCase() ){\r\n                        //compara se a data coincide\r\n                        \r\n                        if(day == this.dados[j].dataExtracao){\r\n                            infectados += this.dados[j].num\r\n                            obitos += this.dados[j].obitos\r\n                        }\r\n                    }\r\n                }\r\n                this.dados_filtrados.infectados.push(infectados)\r\n                this.dados_filtrados.obitos.push(obitos)\r\n            }\r\n            this.infectados = this.dados_filtrados.infectados\r\n            this.obitos = this.dados_filtrados.obitos\r\n        }\r\n    },\r\n    watch: {\r\n        regions: function(val) {\r\n            this.dados_filtrados = {\r\n                infectados: [],\r\n                dia: [],\r\n                obitos: []\r\n            }\r\n            this.filter_data(val)\r\n            this.numId++\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.selector{\r\n    text-align: center;\r\n    align-content: center;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}