{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue","mtime":1597692114466},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmVlTWFwSW5mIGZyb20gIi4uL2NoYXJ0cy9QaWVDaGFydC52dWUiOwppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsKCmxldCBhcGlfZGF0YSA9IG5ldyBEYXRhKCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogWyAncmVnaW9ucycgXSwKICAgIGNvbXBvbmVudHM6IHsgVHJlZU1hcEluZiB9LAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGZpbHRlcl9kYXRhOiBbXSwKICAgICAgICAgICAgYW1vdW50RGF0YTogW10sCiAgICAgICAgICAgIGFtb3VudFJlZ2lvbnM6IFtdLAogICAgICAgICAgICBjb2xvcnM6IFsgJyNlODUwNDYnLCAnI2U4ODc0NicsICcjZThjMDQ2JywgJyM4NTFjM2InLCAnIzQ4MWM4NScgIF0sCiAgICAgICAgICAgIGtleTogMCwKICAgICAgICB9CiAgICB9LAogICAgYXN5bmMgY3JlYXRlZCgpewogICAgICAgIHRoaXMuZ2V0X2RhdGEodGhpcy5yZWdpb25zKQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBnZXRfZGF0YShyZWdpb25zKXsKICAgICAgICAgICAgbGV0IGxhc3RfZGF0ZSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfbGFzdF9kYXRlKCkpLmRhdGEuc3BsaXQoIlQiKVswXQogICAgICAgICAgICBsZXQgZGF0YSA9ICggYXdhaXQgYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlKGxhc3RfZGF0ZSkgKS5kYXRhCiAgICAgICAgICAgIHRoaXMuYW1vdW50RGF0YSA9IFtdCiAgICAgICAgICAgIHRoaXMuYW1vdW50UmVnaW9ucyA9IFtdCiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCByZWdpb25zLmxlbmd0aDsgaisrKXsKICAgICAgICAgICAgICAgICAgICBpZihkYXRhW2ldLnJlZ2lhbyA9PSByZWdpb25zW2pdKXsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbW91bnREYXRhLnB1c2goZGF0YVtpXS5vYml0b3MpCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYW1vdW50UmVnaW9ucy5wdXNoKGRhdGFbaV0ucmVnaWFvKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmtleSsrCiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgcmVnaW9ucyh2YWwpewogICAgICAgICAgICB0aGlzLmdldF9kYXRhKHZhbCkKICAgICAgICB9CiAgICB9CiAgICAKfQo="},{"version":3,"sources":["TreeObitos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"TreeObitos.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\n    <div>\n        <v-card outlined color=\"grey lighten-4\">\n            <v-card-title class=\"font-weight-light\"> Regiões com mais óbitos </v-card-title>\n                <tree-map-inf \n                    :data=\"amountData\"\n                    :regions=\"amountRegions\"\n                    :colors=\"colors\"\n                    v-bind:obj=\"data_inf\" \n                    :key=\"key\"\n                />\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport TreeMapInf from \"../charts/PieChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ 'regions' ],\n    components: { TreeMapInf },\n    data(){\n        return {\n            filter_data: [],\n            amountData: [],\n            amountRegions: [],\n            colors: [ '#e85046', '#e88746', '#e8c046', '#851c3b', '#481c85'  ],\n            key: 0,\n        }\n    },\n    async created(){\n        this.get_data(this.regions)\n    },\n    methods: {\n        async get_data(regions){\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n            let data = ( await api_data.get_region_by_date(last_date) ).data\n            this.amountData = []\n            this.amountRegions = []\n            for(let i = 0; i < data.length; i++){\n                for(let j = 0; j < regions.length; j++){\n                    if(data[i].regiao == regions[j]){\n                        this.amountData.push(data[i].obitos)\n                        this.amountRegions.push(data[i].regiao)\n                    }\n                }\n            }\n            this.key++\n        },\n    },\n    watch:{\n        regions(val){\n            this.get_data(val)\n        }\n    }\n    \n}\n</script>"]}]}