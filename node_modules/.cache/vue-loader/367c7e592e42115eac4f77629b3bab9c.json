{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue?vue&type=style&index=0&id=3b464680&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/visualize/RegionBarChart.vue","mtime":1592595523343},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlbGVjdG9yewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYWxpZ24tY29udGVudDogY2VudGVyOwp9Cg=="},{"version":3,"sources":["RegionBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA","file":"RegionBarChart.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\n    <div>\n        <v-card flat outlined>\n            <v-card-title>\n                <span class=\"font-weight-light\">Cidades</span>\n                <v-spacer/>\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips multiple/>\n            </v-card-title>\n            <v-divider></v-divider>\n            <bar-chart\n                v-bind:infected=\"infectados\"\n                v-bind:time=\"dates\"\n                v-bind:death=\"obitos\"\n                v-bind:region=\"regions\"\n                :key=\"numId\"\n            />\n            <!-- <v-card-actions>\n                <v-pagination\n                    v-model=\"page\"\n                    :length=\"3\"\n                    :total-visible=\"7\"\n                ></v-pagination>\n            </v-card-actions> -->\n        </v-card>\n    </div>\n</template>\n\n<script>\n// import data from \"../../../example/index.js\"\n// import dates from \"../../../example/dates.js\"\nimport barChart from \"../charts/BarChart.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ \n    ],\n    components: { \n        barChart\n    },\n    data(){\n        return {\n            page: 1,\n            drawer: true,\n            regions: [ ],\n            items: null,\n            name: 'DF',\n            selected: [],\n            dates: null,\n            dados: null,\n            dados_filtrados: {\n                infectados: [],\n                dia: [],\n                obitos: []\n            },\n            infectados: [],\n            dia: [],\n            obitos: [],\n            numId: 0\n        }\n    },\n    async created(){\n        this.dados = (await api_data.get_all_data()).data\n    },\n    mounted(){\n        this.get_regions()\n        this.filter_data(this.regions)\n        this.numId++\n    },\n    methods: {\n        async get_regions(){\n            this.items = (await api_data.get_all_regions()).data\n        },\n        async filter_data(regions){\n            let day = (await api_data.get_last_date()).data\n\n            //para cada regiao\n            for(let i = 0; i < regions.length; i++ ){\n                let infectados = 0\n                let obitos = 0\n                for(let j = 0; j < this.dados.length; j++){\n                    //compara se a regiao coincide\n                    if( regions[i] == this.dados[j].regiao.toUpperCase() ){\n                        //compara se a data coincide\n                        \n                        if(day == this.dados[j].dataExtracao){\n                            infectados += this.dados[j].num\n                            obitos += this.dados[j].obitos\n                        }\n                    }\n                }\n                this.dados_filtrados.infectados.push(infectados)\n                this.dados_filtrados.obitos.push(obitos)\n            }\n            this.infectados = this.dados_filtrados.infectados\n            this.obitos = this.dados_filtrados.obitos\n        }\n    },\n    watch: {\n        regions: function(val) {\n            this.dados_filtrados = {\n                infectados: [],\n                dia: [],\n                obitos: []\n            }\n            this.filter_data(val)\n            this.numId++\n        }\n    }\n}\n</script>\n\n<style scoped>\n.selector{\n    text-align: center;\n    align-content: center;\n}\n</style>\n\n\n"]}]}