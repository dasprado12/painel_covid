{"remainingRequest":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\painel_covid\\src\\views\\Projeto\\components\\TreeObitos.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\painel_covid\\src\\views\\Projeto\\components\\TreeObitos.vue","mtime":1594648606898},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVHJlZU1hcE9idCBmcm9tICIuLi9jaGFydHMvVHJlZUNoYXJ0T2JpdG9zLnZ1ZSI7DQppbXBvcnQgeyBEYXRhIH0gZnJvbSAiLi4vLi4vLi4vZnVuY3Rpb25zL2luZGV4LmpzIjsNCg0KbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIHByb3BzOiBbICdjb2xvcicsICd0aXRsZScsICd0aW1lJywgJ3JlZ2lvbnMnIF0sDQogICAgY29tcG9uZW50czogeyBUcmVlTWFwT2J0IH0sDQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgZGF0YTogbnVsbCwNCiAgICAgICAgICAgIGRhdGFfaW5mOiB7DQogICAgICAgICAgICAgICAgY29sb3I6IHRoaXMuY29sb3IsDQogICAgICAgICAgICAgICAgZGF0YTogW10NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBmaWx0ZXJfZGF0YTogW10sDQogICAgICAgICAgICBsYXN0X2RhdGU6IG51bGwsIA0KICAgICAgICAgICAga2V5OiAwLA0KICAgICAgICB9DQogICAgfSwNCiAgICBhc3luYyBjcmVhdGVkKCl7DQogICAgICAgIHRoaXMuZ2V0X2RhdGEodGhpcy5yZWdpb25zKQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBhc3luYyBnZXRfZGF0YShyZWdpb25zKXsNCiAgICAgICAgICAgIGxldCBsYXN0X2RhdGUgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X2xhc3RfZGF0ZSgpKS5kYXRhLnNwbGl0KCJUIilbMF0NCiAgICAgICAgICAgIGxldCBkYXRhID0gKCBhd2FpdCBhcGlfZGF0YS5nZXRfcmVnaW9uX2J5X2RhdGUobGFzdF9kYXRlKSApLmRhdGENCiAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGENCiAgICAgICAgICAgIGxldCBmaWx0ZXJfZGF0YSA9IFtdDQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7DQogICAgICAgICAgICAgICAgZm9yKGxldCBqID0gMDsgaiA8IHJlZ2lvbnMubGVuZ3RoOyBqKyspew0KICAgICAgICAgICAgICAgICAgICBpZihkYXRhW2ldLnJlZ2lhbyA9PSByZWdpb25zW2pdKXsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcl9kYXRhLnB1c2goeyBDaXR5OiBkYXRhW2ldLnJlZ2lhbywgQ291bnQ6IGRhdGFbaV0ub2JpdG9zIH0pDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmRhdGFfaW5mLmRhdGE9ZmlsdGVyX2RhdGENCiAgICAgICAgICAgIHRoaXMua2V5KysNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIHdhdGNoOnsNCiAgICAgICAgcmVnaW9ucyh2YWwpew0KICAgICAgICAgICAgdGhpcy5nZXRfZGF0YSh2YWwpDQogICAgICAgIH0NCiAgICB9DQogICAgDQp9DQo="},{"version":3,"sources":["TreeObitos.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"TreeObitos.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-card flat outlined>\r\n            <v-card-title>\r\n                <span class=\"font-weight-light\">Regiões com mais Óbitos</span>\r\n            </v-card-title>\r\n            <v-divider/>\r\n            <tree-map-obt v-bind:obj=\"data_inf\" :key=\"key\"/>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TreeMapObt from \"../charts/TreeChartObitos.vue\";\r\nimport { Data } from \"../../../functions/index.js\";\r\n\r\nlet api_data = new Data();\r\n\r\nexport default {\r\n    props: [ 'color', 'title', 'time', 'regions' ],\r\n    components: { TreeMapObt },\r\n    data(){\r\n        return {\r\n            data: null,\r\n            data_inf: {\r\n                color: this.color,\r\n                data: []\r\n            },\r\n            filter_data: [],\r\n            last_date: null, \r\n            key: 0,\r\n        }\r\n    },\r\n    async created(){\r\n        this.get_data(this.regions)\r\n    },\r\n    methods: {\r\n        async get_data(regions){\r\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\r\n            let data = ( await api_data.get_region_by_date(last_date) ).data\r\n            this.data = data\r\n            let filter_data = []\r\n            for(let i = 0; i < data.length; i++){\r\n                for(let j = 0; j < regions.length; j++){\r\n                    if(data[i].regiao == regions[j]){\r\n                        filter_data.push({ City: data[i].regiao, Count: data[i].obitos })\r\n                    }\r\n                }\r\n            }\r\n            this.data_inf.data=filter_data\r\n            this.key++\r\n        },\r\n    },\r\n    watch:{\r\n        regions(val){\r\n            this.get_data(val)\r\n        }\r\n    }\r\n    \r\n}\r\n</script>"]}]}