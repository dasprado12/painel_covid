{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/HistoricoObitos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/HistoricoObitos.vue","mtime":1595373302043},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiCmltcG9ydCBPbmVMaW5lQ2hhcnQgZnJvbSAiLi4vY2hhcnRzL09uZUxpbmVDaGFydE9iaXRvcy52dWUiCmxldCBhcGlfZGF0YSA9IG5ldyBEYXRhKCkKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6IFsgJ3JlZ2lvbicsICdyYW5nZScgXSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBPbmVMaW5lQ2hhcnQKICAgIH0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY29sb3I6ICcjMDFmZTQzJywKICAgICAgICAgICAgdGltZTogbnVsbCwKICAgICAgICAgICAgZGF0YTogbnVsbCwKICAgICAgICAgICAgZmlsdGVyZWREYXRhOiBudWxsLAogICAgICAgICAgICBmaWx0ZXJlZFRpbWU6IG51bGwsCiAgICAgICAgICAgIGtleTogMAogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHJhbmdlKHZhbCl7CiAgICAgICAgICAgIHRoaXMuZmlsdGVyZWREYXRhID0gdGhpcy5kYXRhLnNsaWNlKHZhbFswXSwgdmFsWzFdKQogICAgICAgICAgICB0aGlzLmZpbHRlcmVkVGltZSA9IHRoaXMudGltZS5zbGljZSh2YWxbMF0sIHZhbFsxXSkKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewogICAgICAgIHRoaXMuaGlzdG9yaWNfZGF0YSgpCiAgICAgICAgdGhpcy5hdXgrKwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBoaXN0b3JpY19kYXRhKCl7CiAgICAgICAgICAgIGxldCBkYXRhID0gKGF3YWl0IGFwaV9kYXRhLmdldF9oaXN0X2RhdGEoKSkuZGF0YS5tYXAoZnVuY3Rpb24oaXRlbSl7IHJldHVybiBpdGVtLm9iaXRvcyB9KQogICAgICAgICAgICBsZXQgdGltZSA9IChhd2FpdCBhcGlfZGF0YS5nZXRfYWxsX2RhdGVzKCkpLmRhdGEubWFwKGZ1bmN0aW9uKGl0ZW0peyByZXR1cm4gaXRlbS5zcGxpdCgiVCIpWzBdIH0pCiAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGEKICAgICAgICAgICAgdGhpcy50aW1lID0gdGltZQogICAgICAgICAgICB0aGlzLmZpbHRlcmVkRGF0YSA9IGRhdGEKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZFRpbWUgPSB0aW1lCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["HistoricoObitos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HistoricoObitos.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\n    <div>\n        <v-card outlined color=\"grey lighten-4\">\n            <v-card-title class=\"font-weight-normal\"> Total - Ã“bitos </v-card-title>\n            <v-card-text>\n                <one-line-chart\n                    v-bind:time=\"filteredTime\"\n                    v-bind:data=\"filteredData\"\n                    v-bind:color=\"color\"\n                    :key=\"key\"\n                />\n            </v-card-text>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport OneLineChart from \"../charts/OneLineChartObitos.vue\"\nlet api_data = new Data()\nexport default {\n    props: [ 'region', 'range' ],\n    components: {\n        OneLineChart\n    },\n    data(){\n        return {\n            color: '#01fe43',\n            time: null,\n            data: null,\n            filteredData: null,\n            filteredTime: null,\n            key: 0\n        }\n    },\n    watch: {\n        range(val){\n            this.filteredData = this.data.slice(val[0], val[1])\n            this.filteredTime = this.time.slice(val[0], val[1])\n        }\n    },\n    created(){\n        this.historic_data()\n        this.aux++\n    },\n    methods: {\n        async historic_data(){\n            let data = (await api_data.get_hist_data()).data.map(function(item){ return item.obitos })\n            let time = (await api_data.get_all_dates()).data.map(function(item){ return item.split(\"T\")[0] })\n            this.data = data\n            this.time = time\n            this.filteredData = data\n            this.filteredTime = time\n        }\n    }\n}\n</script>"]}]}