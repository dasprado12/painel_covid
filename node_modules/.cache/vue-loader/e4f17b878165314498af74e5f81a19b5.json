{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595603148600},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiCmltcG9ydCB7IGxhdExuZyB9IGZyb20gImxlYWZsZXQiOwppbXBvcnQgeyBMR2VvSnNvbiwgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTFBvcHVwLCBMSWNvbkRlZmF1bHQgfSBmcm9tICJ2dWUyLWxlYWZsZXQiOwppbXBvcnQgVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyIGZyb20gJ3Z1ZTItbGVhZmxldC1tYXJrZXJjbHVzdGVyJwoKbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsKCgpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJTaW1wbGVNYXAiLApjb21wb25lbnRzOiB7IAogICAgICAgIExHZW9Kc29uLCAKICAgICAgICBMTWFwLCAKICAgICAgICBMVGlsZUxheWVyLCAKICAgICAgICBMTWFya2VyLCAKICAgICAgICBMUG9wdXAsIAogICAgICAgIExJY29uRGVmYXVsdCwgJ3YtbWFya2VyLWNsdXN0ZXInOiBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIgCiAgICB9LApkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgICBkYXRhOiBudWxsLAogICAgICAgIGxhc3RfZGF0ZTogbnVsbCwKICAgICAgICB6b29tOiAxMCwKICAgICAgICBjZW50ZXI6IGxhdExuZygtMTUuNzkzNTk5LCAtNDcuODE0OTg3KSwKICAgICAgICB1cmw6ICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgY3VycmVudFpvb206IDExLjUsCiAgICAgICAgY3VycmVudENlbnRlcjogbGF0TG5nKDQ3LjQxMzIyLCAtMS4yMTk0ODIpLAogICAgICAgIGdlb2pzb246IG51bGwsCiAgICAgICAgdGVzdGU6IG51bGwKICAgIH07Cn0sCmFzeW5jIGNyZWF0ZWQoKXsKICAgIHRoaXMubGlzdF9kYXRhKCk7CiAgICB0aGlzLmNyZWF0ZWQoKTsKfSwKbWV0aG9kczogewogICAgYXN5bmMgY3JlYXRlZCgpewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYXNwcmFkbzEyL0JyYXNpbGlhLVJBcy1nZW9ycmVmZXJlbmNpYWRhcy9tYXN0ZXIvR2VvanNvbnMvQWxsLmdlb2pzb24nKTsKICAgICAgICBsZXQgZ2VvanNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQogICAgICAgIHRoaXMudGVzdGUgPSBnZW9qc29uWzBdCiAgICAgICAgZ2VvanNvbi5tYXAoZnVuY3Rpb24oaXRlbSl7CiAgICAgICAgICAgIGlmKGl0ZW0ubmFtZSA9PSAnQXNhIE5vcnRlJyl7CiAgICAgICAgICAgICAgICBpdGVtWydzdHlsZSddID0geyBjb2xvcjogIiNmZmFhMDAiIH0KICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICBpdGVtWydzdHlsZSddID0geyBjb2xvcjogIiNmZjAwMDAiIH0KCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGl0ZW0KICAgICAgICB9KQogICAgICAgIHRoaXMuZ2VvanNvbiA9IGdlb2pzb24KICAgIH0sCiAgICBhc3luYyBsaXN0X2RhdGEoKXsKICAgICAgICBsZXQgbGFzdF9kYXRlID0gKGF3YWl0IGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKSkuZGF0YS5zcGxpdCgiVCIpWzBdCiAgICAgICAgbGV0IGRhdGEgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlMihsYXN0X2RhdGUpICkuZGF0YQogICAgICAgIHRoaXMuZGF0YSA9IGRhdGEubWFwKGZ1bmN0aW9uKGRhdGEpewogICAgICAgICAgICBpZighZGF0YS5sYXRpdHVkZSB8fCAhZGF0YS5sb25naXR1ZGUpewogICAgICAgICAgICAgICAgZGF0YS5sYXRpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgICAgICBkYXRhLmxvbmdpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YVsncG9zaWNhbyddID0geyBsYXQ6IGRhdGEubGF0aXR1ZGUucmVwbGFjZSgiLCIsICIuIiksIGxuZzogZGF0YS5sb25naXR1ZGUucmVwbGFjZSgiLCIsICIuIil9CiAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgfSkKICAgIH0sCiAgICB6b29tVXBkYXRlKHpvb20pIHsKICAgICAgICB0aGlzLmN1cnJlbnRab29tID0gem9vbTsKICAgIH0sCiAgICBjZW50ZXJVcGRhdGUoY2VudGVyKSB7CiAgICAgICAgdGhpcy5jdXJyZW50Q2VudGVyID0gY2VudGVyOwogICAgfSwKICAgIHNob3dMb25nVGV4dCgpIHsKICAgICAgICB0aGlzLnNob3dQYXJhZ3JhcGggPSAhdGhpcy5zaG93UGFyYWdyYXBoOwogICAgfSwKICAgIGlubmVyQ2xpY2soKSB7CiAgICAgICAgYWxlcnQoIkNsaWNrISIpOwogICAgfQp9Cn07Cg=="},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleMap.vue","sourceRoot":"src/views/Projeto/maps","sourcesContent":["<template>\n    <div class=\"mapCss\">{{teste}}\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n        <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n        <span v-for=\"item in geojson\" :key=\"item\">\n            <l-geo-json :geojson=\"item\" :options=\"item.style\" ></l-geo-json>\n\n        </span>\n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n            <v-marker-cluster>\n                <l-marker v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                    <l-popup>\n                        <div @click=\"innerClick\">\n                            <v-card flat>\n                                <v-card-text>\n                                    <b>Região:</b> {{ point.regiao }}\n                                    <b>Infectados:</b> {{ point.num }}\n                                    <b>Óbitos:</b> {{ point.obitos }}\n                                </v-card-text>\n                            </v-card>\n                        </div>\n                    </l-popup>\n                </l-marker>\n            </v-marker-cluster>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\ncomponents: { \n        LGeoJson, \n        LMap, \n        LTileLayer, \n        LMarker, \n        LPopup, \n        LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster \n    },\ndata() {\n    return {\n        data: null,\n        last_date: null,\n        zoom: 10,\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        geojson: null,\n        teste: null\n    };\n},\nasync created(){\n    this.list_data();\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json()\n        this.teste = geojson[0]\n        geojson.map(function(item){\n            if(item.name == 'Asa Norte'){\n                item['style'] = { color: \"#ffaa00\" }\n            }else{\n                item['style'] = { color: \"#ff0000\" }\n\n            }\n            return item\n        })\n        this.geojson = geojson\n    },\n    async list_data(){\n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date2(last_date) ).data\n        this.data = data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude.replace(\",\", \".\"), lng: data.longitude.replace(\",\", \".\")}\n            return data\n        })\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"]}]}