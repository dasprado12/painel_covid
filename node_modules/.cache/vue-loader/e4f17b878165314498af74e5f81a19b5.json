{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595376252169},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiCmltcG9ydCB7IGxhdExuZyB9IGZyb20gImxlYWZsZXQiOwppbXBvcnQgeyBMR2VvSnNvbiwgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTFBvcHVwLCBMSWNvbkRlZmF1bHQgfSBmcm9tICJ2dWUyLWxlYWZsZXQiOwppbXBvcnQgVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyIGZyb20gJ3Z1ZTItbGVhZmxldC1tYXJrZXJjbHVzdGVyJwpsZXQgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJFeGFtcGxlIiwKY29tcG9uZW50czogeyBMR2VvSnNvbiwgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTFBvcHVwLCBMSWNvbkRlZmF1bHQsICd2LW1hcmtlci1jbHVzdGVyJzogVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyIH0sCmRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAgIGRhdGE6IG51bGwsCiAgICAgICAgbGFzdF9kYXRlOiBudWxsLAogICAgICAgIHpvb206IDEwLAogICAgICAgIGNlbnRlcjogbGF0TG5nKC0xNS43OTM1OTksIC00Ny44MTQ5ODcpLAogICAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywKICAgICAgICBjdXJyZW50Wm9vbTogMTEuNSwKICAgICAgICBjdXJyZW50Q2VudGVyOiBsYXRMbmcoNDcuNDEzMjIsIC0xLjIxOTQ4MiksCiAgICAgICAgZ2VvanNvbjogbnVsbAogICAgfTsKfSwKYXN5bmMgY3JlYXRlZCgpewogICAgdGhpcy5saXN0X2RhdGEoKTsKICAgIHRoaXMuY3JlYXRlZCgpOwp9LAptZXRob2RzOiB7CiAgICBhc3luYyBjcmVhdGVkKCl7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Rhc3ByYWRvMTIvQnJhc2lsaWEtUkFzLWdlb3JyZWZlcmVuY2lhZGFzL21hc3Rlci9HZW9qc29ucy9BbGwuZ2VvanNvbicpOwogICAgICAgIHRoaXMuZ2VvanNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgIH0sCiAgICBhc3luYyBsaXN0X2RhdGEoKXsKICAgICAgICAvLyAKICAgICAgICBsZXQgbGFzdF9kYXRlID0gKGF3YWl0IGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKSkuZGF0YS5zcGxpdCgiVCIpWzBdCiAgICAgICAgbGV0IGRhdGEgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlMihsYXN0X2RhdGUpICkuZGF0YQogICAgICAgIHRoaXMuZGF0YSA9IGRhdGEubWFwKGZ1bmN0aW9uKGRhdGEpewogICAgICAgICAgICBpZighZGF0YS5sYXRpdHVkZSB8fCAhZGF0YS5sb25naXR1ZGUpewogICAgICAgICAgICAgICAgZGF0YS5sYXRpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgICAgICBkYXRhLmxvbmdpdHVkZSA9ICIxLjEiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YVsncG9zaWNhbyddID0geyBsYXQ6IGRhdGEubGF0aXR1ZGUucmVwbGFjZSgiLCIsICIuIiksIGxuZzogZGF0YS5sb25naXR1ZGUucmVwbGFjZSgiLCIsICIuIil9CiAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgfSkKICAgIH0sCiAgICB6b29tVXBkYXRlKHpvb20pIHsKICAgIHRoaXMuY3VycmVudFpvb20gPSB6b29tOwogICAgfSwKICAgIGNlbnRlclVwZGF0ZShjZW50ZXIpIHsKICAgIHRoaXMuY3VycmVudENlbnRlciA9IGNlbnRlcjsKICAgIH0sCiAgICBzaG93TG9uZ1RleHQoKSB7CiAgICB0aGlzLnNob3dQYXJhZ3JhcGggPSAhdGhpcy5zaG93UGFyYWdyYXBoOwogICAgfSwKICAgIGlubmVyQ2xpY2soKSB7CiAgICBhbGVydCgiQ2xpY2shIik7CiAgICB9Cn0KfTsK"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleMap.vue","sourceRoot":"src/views/Projeto/maps","sourcesContent":["<template>\n<div class=\"mapCss\">\n    <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n    <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n    <l-geo-json :geojson=\"geojson\"></l-geo-json>\n        <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n        <v-marker-cluster>\n            <l-marker v-for=\"point in data\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                <l-popup>\n                    <div @click=\"innerClick\">\n                        <v-card flat>\n                            <v-card-text>\n                                <b>Região:</b> {{ point.regiao }}\n                                <b>Infectados:</b> {{ point.num }}\n                                <b>Óbitos:</b> {{ point.obitos }}\n                            </v-card-text>\n                        </v-card>\n                    </div>\n                </l-popup>\n            </l-marker>\n        </v-marker-cluster>\n    </l-map>\n</div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\nlet api_data = new Data();\nexport default {\nname: \"Example\",\ncomponents: { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster },\ndata() {\n    return {\n        data: null,\n        last_date: null,\n        zoom: 10,\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        geojson: null\n    };\n},\nasync created(){\n    this.list_data();\n    this.created();\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        this.geojson = await response.json();\n    },\n    async list_data(){\n        // \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date2(last_date) ).data\n        this.data = data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude.replace(\",\", \".\"), lng: data.longitude.replace(\",\", \".\")}\n            return data\n        })\n    },\n    zoomUpdate(zoom) {\n    this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n    this.currentCenter = center;\n    },\n    showLongText() {\n    this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n    alert(\"Click!\");\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"]}]}