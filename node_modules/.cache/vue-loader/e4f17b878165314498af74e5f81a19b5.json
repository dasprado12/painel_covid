{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/maps/SimpleMap.vue","mtime":1595868875835},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi8uLi8uLi9mdW5jdGlvbnMvaW5kZXguanMiCmltcG9ydCB7IGxhdExuZyB9IGZyb20gImxlYWZsZXQiOwppbXBvcnQgeyBJbmZvQ29udHJvbCwgUmVmZXJlbmNlQ2hhcnQsIENob3JvcGxldGhMYXllciB9IGZyb20gJ3Z1ZS1jaG9yb3BsZXRoJwppbXBvcnQgeyBMR2VvSnNvbiwgTE1hcCwgTFRpbGVMYXllciwgTE1hcmtlciwgTFBvcHVwLCBMSWNvbkRlZmF1bHQgfSBmcm9tICJ2dWUyLWxlYWZsZXQiOwppbXBvcnQgVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyIGZyb20gJ3Z1ZTItbGVhZmxldC1tYXJrZXJjbHVzdGVyJwoKbGV0IGFwaV9kYXRhID0gbmV3IERhdGEoKTsKCgpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJTaW1wbGVNYXAiLApwcm9wczogWyAnc2hvd1BvaW50cycsICd0eXBlJyBdLCAgCmNvbXBvbmVudHM6IHsgTEdlb0pzb24sIExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExQb3B1cCwgTEljb25EZWZhdWx0LCAndi1tYXJrZXItY2x1c3Rlcic6IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlciwKICAgICdsLWluZm8tY29udHJvbCc6IEluZm9Db250cm9sLCAKICAgICdsLXJlZmVyZW5jZS1jaGFydCc6IFJlZmVyZW5jZUNoYXJ0LCAKICAgICdsLWNob3JvcGxldGgtbGF5ZXInOiBDaG9yb3BsZXRoTGF5ZXIgCn0sCmRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAgIHRlc3RlOiBudWxsLAogICAgICAgIGRhdGE6IG51bGwsCiAgICAgICAgZmlsdGVyZWREYXRhOiBudWxsLAogICAgICAgIGdlb2pzb246IG51bGwsCiAgICAgICAgbGFzdF9kYXRlOiBudWxsLAogICAgICAgIHpvb206IDEwLAogICAgICAgIGNvbG9yczogewogICAgICAgICAgICBudW06IFsgJyNkNGZmZDcnLCAnIzhjZGI5MicsICcjOGNkYjkyJywgJyMxYTg3MjInLCAnIzAzNTIwOScgXSwKICAgICAgICAgICAgb2JpdG9zOiBbICcjZThjY2NjJywgJyNkNDhjOGMnLCAnI2JhNTI1MicsICcjOWUyODI4JywgJyM3ODBlMGUnIF0KICAgICAgICB9LAogICAgICAgIGNlbnRlcjogbGF0TG5nKC0xNS43OTM1OTksIC00Ny44MTQ5ODcpLAogICAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywKICAgICAgICBjdXJyZW50Wm9vbTogMTEuNSwKICAgICAgICBjdXJyZW50Q2VudGVyOiBsYXRMbmcoNDcuNDEzMjIsIC0xLjIxOTQ4MiksCiAgICAgICAgcmFuZ2U6IHsKICAgICAgICAgICAgIm51bSI6IFsgNDAsIDgwLCAxMjAsIDE2MCBdLAogICAgICAgICAgICAib2JpdG9zIjpbIDUsIDEwLCAxNSwgMjAgXQogICAgICAgIH0sCiAgICB9Cn0sCmFzeW5jIGNyZWF0ZWQoKXsKICAgIHRoaXMuY3JlYXRlZCgpOwogICAgY29uc29sZS5sb2codGhpcy5zaG93UG9pbnRzKQp9LAp3YXRjaDogewogICAgc2hvd1BvaW50cyh2YWwpewogICAgICAgIGlmKHZhbCA9PSB0cnVlKXsKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZERhdGEgPSB0aGlzLmRhdGEKICAgICAgICB9CiAgICAgICAgaWYodmFsID09IGZhbHNlKXsKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZERhdGEgPSBbXQogICAgICAgIH0KICAgIH0KfSwKbWV0aG9kczogewogICAgYXN5bmMgY3JlYXRlZCgpewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYXNwcmFkbzEyL0JyYXNpbGlhLVJBcy1nZW9ycmVmZXJlbmNpYWRhcy9tYXN0ZXIvR2VvanNvbnMvQWxsLmdlb2pzb24nKTsKICAgICAgICBsZXQgZ2VvanNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKSAKICAgICAgICBsZXQgbGFzdF9kYXRlID0gKGF3YWl0IGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKSkuZGF0YS5zcGxpdCgiVCIpWzBdCiAgICAgICAgbGV0IGRhdGEgPSAoYXdhaXQgYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlKGxhc3RfZGF0ZSkgKS5kYXRhLm1hcChmdW5jdGlvbihkYXRhKXsKICAgICAgICAgICAgaWYoIWRhdGEubGF0aXR1ZGUgfHwgIWRhdGEubG9uZ2l0dWRlKXsKICAgICAgICAgICAgICAgIGRhdGEubGF0aXR1ZGUgPSAiMS4xIgogICAgICAgICAgICAgICAgZGF0YS5sb25naXR1ZGUgPSAiMS4xIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGRhdGFbJ3Bvc2ljYW8nXSA9IHsgbGF0OiBkYXRhLmxhdGl0dWRlLCBsbmc6IGRhdGEubG9uZ2l0dWRlfQogICAgICAgICAgICByZXR1cm4gZGF0YQogICAgICAgIH0pCiAgICAgICAgdGhpcy5kYXRhID0gZGF0YQogICAgICAgIGlmKGdlb2pzb24pewogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZ2VvanNvbi5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgZGF0YS5sZW5ndGg7IGorKyl7CiAgICAgICAgICAgICAgICAgICAgaWYoZ2VvanNvbltpXS5uYW1lID09IGRhdGFbal0ucmVnaWFvKXsKICAgICAgICAgICAgICAgICAgICAgICAgZ2VvanNvbltpXVsnZGF0YSddID0geyAicmVnaWFvIjogZGF0YVtqXS5yZWdpYW8sICJudW0iOiBkYXRhW2pdLm51bSwgIm9iaXRvcyI6IGRhdGFbal0ub2JpdG9zICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRhW2pdW3RoaXMudHlwZV0gPCB0aGlzLnJhbmdlW3RoaXMudHlwZV1bMF0pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2VvanNvbltpXVsnc3R5bGUnXSA9IHsgY29sb3I6IHRoaXMuY29sb3JzW3RoaXMudHlwZV1bMF0sIHdlaWdodDogMSB9CiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKGRhdGFbal1bdGhpcy50eXBlXSA+PSB0aGlzLnJhbmdlW3RoaXMudHlwZV1bMF0gJiYgZGF0YVtqXVt0aGlzLnR5cGVdIDwgdGhpcy5yYW5nZVt0aGlzLnR5cGVdWzFdICl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0geyBjb2xvcjogdGhpcy5jb2xvcnNbdGhpcy50eXBlXVsxXSwgd2VpZ2h0OiAxIH0KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKGRhdGFbal1bdGhpcy50eXBlXSA+PSB0aGlzLnJhbmdlW3RoaXMudHlwZV1bMV0gJiYgZGF0YVtqXVt0aGlzLnR5cGVdIDwgdGhpcy5yYW5nZVt0aGlzLnR5cGVdWzJdKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7IGNvbG9yOiB0aGlzLmNvbG9yc1t0aGlzLnR5cGVdWzJdLCB3ZWlnaHQ6IDEgfQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoZGF0YVtqXVt0aGlzLnR5cGVdID49IHRoaXMucmFuZ2VbdGhpcy50eXBlXVsyXSAmJiBkYXRhW2pdW3RoaXMudHlwZV0gPCB0aGlzLnJhbmdlW3RoaXMudHlwZV1bM10gKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlb2pzb25baV1bJ3N0eWxlJ10gPSB7IGNvbG9yOiB0aGlzLmNvbG9yc1t0aGlzLnR5cGVdWzNdLCB3ZWlnaHQ6IDEgfQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoZGF0YVtqXVt0aGlzLnR5cGVdID49IHRoaXMucmFuZ2VbdGhpcy50eXBlXVszXSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW9qc29uW2ldWydzdHlsZSddID0geyBjb2xvcjogdGhpcy5jb2xvcnNbdGhpcy50eXBlXVs0XSwgd2VpZ2h0OiAxIH0KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2VvanNvbltpXVsnc3R5bGUnXSA9IHsgY29sb3I6ICIjODI4MjgyIiB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB0aGlzLmdlb2pzb24gPSBnZW9qc29uCiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHRoaXMuZ2VvanNvbiA9IGdlb2pzb24KICAgICAgICB9CiAgICB9LAogICAgem9vbVVwZGF0ZSh6b29tKSB7CiAgICAgICAgdGhpcy5jdXJyZW50Wm9vbSA9IHpvb207CiAgICB9LAogICAgY2VudGVyVXBkYXRlKGNlbnRlcikgewogICAgICAgIHRoaXMuY3VycmVudENlbnRlciA9IGNlbnRlcjsKICAgIH0sCiAgICBzaG93TG9uZ1RleHQoKSB7CiAgICAgICAgdGhpcy5zaG93UGFyYWdyYXBoID0gIXRoaXMuc2hvd1BhcmFncmFwaDsKICAgIH0sCiAgICBpbm5lckNsaWNrKCkgewogICAgICAgIGFsZXJ0KCJDbGljayEiKTsKICAgIH0sCiAgICBzaG93UG9wdXAodmFsKXsKICAgICAgICBjb25zb2xlLmxvZyh2YWwpCiAgICB9Cn0KfTsK"},{"version":3,"sources":["SimpleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleMap.vue","sourceRoot":"src/views/Projeto/maps","sourcesContent":["<template>\n    <div class=\"mapCss\">\n        <l-map :zoom=\"zoom\" :center=\"center\" @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n            <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"/>\n            <l-geo-json \n                v-for=\"item in geojson\" \n                :geojson=\"item\" \n                :options=\"item.style\" \n                :key=\"item.name\"\n                @click=\"showPopup(item)\"\n            >\n                <l-popup>\n                    <div >\n                        <v-card flat>\n                            <v-card-title><b>Região:</b> {{ item }}</v-card-title>\n                            <!-- <v-card-text>\n                                <b>Infectados:</b> {{ point.num }}\n                                <b>Óbitos:</b> {{ point.obitos }}\n                            </v-card-text> -->\n                        </v-card>\n                    </div>\n                </l-popup>\n            </l-geo-json>\n            <l-icon-default :image-path=\"'../../../assets/marker.png'\"></l-icon-default>\n            <span v-show=\"showPoints\">\n                <v-marker-cluster v-show=\"showPoints\">\n                    <l-marker v-for=\"point in filteredData\" :key=\"point.regiao\" :lat-lng=\"point.posicao\">\n                        <l-popup>\n                            <div @click=\"innerClick\">\n                                <v-card flat>\n                                    <v-card-title><b>Região:</b> {{ point.regiao }}</v-card-title>\n                                    <v-card-text>\n                                        <b>Infectados:</b> {{ point.num }}\n                                        <b>Óbitos:</b> {{ point.obitos }}\n                                    </v-card-text>\n                                </v-card>\n                            </div>\n                        </l-popup>\n                    </l-marker>\n                </v-marker-cluster>\n            </span>\n        </l-map>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../../../functions/index.js\"\nimport { latLng } from \"leaflet\";\nimport { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth'\nimport { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\n\nlet api_data = new Data();\n\n\nexport default {\nname: \"SimpleMap\",\nprops: [ 'showPoints', 'type' ],  \ncomponents: { LGeoJson, LMap, LTileLayer, LMarker, LPopup, LIconDefault, 'v-marker-cluster': Vue2LeafletMarkerCluster,\n    'l-info-control': InfoControl, \n    'l-reference-chart': ReferenceChart, \n    'l-choropleth-layer': ChoroplethLayer \n},\ndata() {\n    return {\n        teste: null,\n        data: null,\n        filteredData: null,\n        geojson: null,\n        last_date: null,\n        zoom: 10,\n        colors: {\n            num: [ '#d4ffd7', '#8cdb92', '#8cdb92', '#1a8722', '#035209' ],\n            obitos: [ '#e8cccc', '#d48c8c', '#ba5252', '#9e2828', '#780e0e' ]\n        },\n        center: latLng(-15.793599, -47.814987),\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        currentZoom: 11.5,\n        currentCenter: latLng(47.41322, -1.219482),\n        range: {\n            \"num\": [ 40, 80, 120, 160 ],\n            \"obitos\":[ 5, 10, 15, 20 ]\n        },\n    }\n},\nasync created(){\n    this.created();\n    console.log(this.showPoints)\n},\nwatch: {\n    showPoints(val){\n        if(val == true){\n            this.filteredData = this.data\n        }\n        if(val == false){\n            this.filteredData = []\n        }\n    }\n},\nmethods: {\n    async created(){\n        const response = await fetch('https://raw.githubusercontent.com/dasprado12/Brasilia-RAs-georreferenciadas/master/Geojsons/All.geojson');\n        let geojson = await response.json() \n        let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n        let data = (await api_data.get_region_by_date(last_date) ).data.map(function(data){\n            if(!data.latitude || !data.longitude){\n                data.latitude = \"1.1\"\n                data.longitude = \"1.1\"\n            }\n            data['posicao'] = { lat: data.latitude, lng: data.longitude}\n            return data\n        })\n        this.data = data\n        if(geojson){\n            for(let i = 0; i < geojson.length; i++){\n                for(let j = 0; j < data.length; j++){\n                    if(geojson[i].name == data[j].regiao){\n                        geojson[i]['data'] = { \"regiao\": data[j].regiao, \"num\": data[j].num, \"obitos\": data[j].obitos   }\n                        if(data[j][this.type] < this.range[this.type][0]){\n                            geojson[i]['style'] = { color: this.colors[this.type][0], weight: 1 }\n                        }else if(data[j][this.type] >= this.range[this.type][0] && data[j][this.type] < this.range[this.type][1] ){\n                            geojson[i]['style'] = { color: this.colors[this.type][1], weight: 1 }\n                        \n                        }else if(data[j][this.type] >= this.range[this.type][1] && data[j][this.type] < this.range[this.type][2]){\n                            geojson[i]['style'] = { color: this.colors[this.type][2], weight: 1 }\n                        \n                        }else if(data[j][this.type] >= this.range[this.type][2] && data[j][this.type] < this.range[this.type][3] ){\n                            geojson[i]['style'] = { color: this.colors[this.type][3], weight: 1 }\n                        \n                        }else if(data[j][this.type] >= this.range[this.type][3]){\n                            geojson[i]['style'] = { color: this.colors[this.type][4], weight: 1 }\n                        \n                        }else{\n                            geojson[i]['style'] = { color: \"#828282\" }\n                        }\n                    }\n                }\n            }\n        this.geojson = geojson\n        }else{\n            this.geojson = geojson\n        }\n    },\n    zoomUpdate(zoom) {\n        this.currentZoom = zoom;\n    },\n    centerUpdate(center) {\n        this.currentCenter = center;\n    },\n    showLongText() {\n        this.showParagraph = !this.showParagraph;\n    },\n    innerClick() {\n        alert(\"Click!\");\n    },\n    showPopup(val){\n        console.log(val)\n    }\n}\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n@import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n.charts-highcharts {\n}\n.-map {\n    width: 100%;\n    height: 800px;\n}\n.mapCss{\n    height: 500px; \n    width: 100%\n}\n</style>"]}]}