{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/Dados.vue?vue&type=style&index=0&id=514eaf56&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/Dados.vue","mtime":1597422033878},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgxLCBoMnsKICAgIGNvbG9yOiByZ2IoNzcsIDc3LCA3Nyk7Cn0K"},{"version":3,"sources":["Dados.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA;AACA","file":"Dados.vue","sourceRoot":"src/views/Projeto","sourcesContent":["<template>\n    <div class=\"dados\">\n        <div class=\"regioes\">\n            <v-container>\n                <h1 class=\"font-weight-bold\">Região - DF</h1>\n                <teste></teste>\n                <v-divider/>\n                    <v-layout row wrap>\n                        <v-col cols=\"12\">\n                            <data-seletor @changeRange=\"dateRange\" v-bind:dates=\"rawData.dates\"/>\n                        </v-col>\n                        <v-col xl=\"6\" lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\"><historico-infectados :dataset=\"filteredData\" /></v-col>\n                        <v-col xl=\"6\" lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\"><dia-infectados :dataset=\"filteredData\" /></v-col>\n                        <v-col xl=\"6\" lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\"><historico-obitos :dataset=\"filteredData\" /></v-col>\n                        <v-col xl=\"6\" lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\"><dia-obitos :dataset=\"filteredData\" /></v-col>\n                        <v-col cols=\"12\"><simple-map/></v-col>\n                    </v-layout><br>\n                    <v-layout>\n                        <v-flex row wrap>\n                            <v-col>\n                                <h2 class=\"font-weight-normal\">Por região</h2>\n                            </v-col>\n                            <v-col>\n                                <v-combobox\n                                    v-model=\"region\"\n                                    :items=\"regions\"\n                                    label=\"Escolha as Regiões\"\n                                    multiple\n                                    small-chips\n                                    solo\n                                    dense\n                                >\n                                    <template v-slot:selection=\"{ item, parent }\">\n                                        <v-chip color=\"blue lighten-3\" label small>\n                                            <span class=\"pr-2\">\n                                                {{ item }}\n                                            </span>\n                                            <v-icon small @click=\"parent.selectItem(item)\">mdi-close</v-icon>\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                            </v-col>\n                        </v-flex>\n                    </v-layout>\n                    <v-divider/>\n                    <v-container>\n                    <v-row row wrap v-show=\"isSelected\">\n                        <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                            <mix-infectados :key=\"numId\" v-bind:regions=\"region\"/>\n                        </v-col>\n                        <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                            <tree-infectados v-bind:regions=\"region\"/>\n                        </v-col>\n                        <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                            <mix-obitos v-bind:regions=\"region\"/>\n                        </v-col>\n                        <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                            <tree-obitos v-bind:regions=\"region\"/>\n                        </v-col>\n                    </v-row>\n                    </v-container>\n            </v-container>\n        </div>\n    </div>\n</template>\n\n<script>\nimport historicoInfectados from \"./components/HistoricoInfectados.vue\"\nimport diaInfectados from \"./components/DiaInfectados.vue\"\nimport historicoObitos from \"./components/HistoricoObitos.vue\"\nimport diaObitos from \"./components/DiaObitos.vue\"\nimport simpleMap from \"./components/SimpleMap.vue\"\nimport mixInfectados from \"./components/MixInfectados.vue\"\nimport mixObitos from \"./components/MixObitos.vue\"\nimport treeInfectados from \"./components/TreeInfectados.vue\"\nimport treeObitos from \"./components/TreeObitos.vue\"\nimport dataSeletor from \"./components/Seletor.vue\"\n// import GJMap from './components/GJMap.vue' \n\nimport { Data } from \"../../functions/index.js\"\nlet api_data = new Data()\n\nexport default {\n    components: {\n        historicoInfectados,\n        diaInfectados,\n        historicoObitos,\n        diaObitos,\n        simpleMap,\n        mixInfectados,\n        mixObitos,\n        treeInfectados,\n        treeObitos,\n        dataSeletor,\n    },\n    data: () => ({\n        rawData: {\n            amountData: null,\n            dates: null,\n            num: null,\n            obitos: null,\n        },\n        filteredData: {\n            amountData: null,\n            dates: null,\n            num: null,\n            obitos: null,\n        },\n        region: [ 'Total DF' ],\n        regions: null,\n        isSelected: true,\n        range: null,\n        numId: 0,\n        activator: null,\n        index: -1,\n        nonce: 1,\n    }),\n    async created(){\n        this.getData()\n\n    },\n    watch: {\n        region(val){\n            if(val.length == 0){\n                this.isSelected = false\n            }else{\n                this.isSelected = true\n            }\n        },\n        range(val){\n            this.filterData(val)\n            this.numId++\n        },\n        watch: {\n            model (val, prev) {\n                if (val.length === prev.length) return\n                this.model = val.map(v => {\n                    if (typeof v === 'string') {\n                        v = {\n                            text: v,\n                            color: this.colors[this.nonce - 1],\n                        }\n                        this.items.push(v)\n                        this.nonce++\n                    }\n                    return v\n                })\n            },\n        },\n    },\n    methods:{\n        async getData(){\n            this.rawData.amountData = (await api_data.get_hist_data()).data\n            this.rawData.num = (await api_data.get_hist_data()).data.map(function(item){ return item.num })\n            this.rawData.obitos = (await api_data.get_hist_data()).data.map(function(item){ return item.obitos })\n            this.rawData.dates = (await api_data.get_all_dates()).data.map(function(item){ return Date(item)})\n\n            this.filteredData.amountData = (await api_data.get_hist_data()).data\n            this.filteredData.num = (await api_data.get_hist_data()).data.map(function(item){ return item.num })\n            this.filteredData.obitos = (await api_data.get_hist_data()).data.map(function(item){ return item.obitos })\n            this.filteredData.dates = (await api_data.get_all_dates()).data.map(function(item){ return Date(item)})\n            \n            this.regions = (await api_data.get_all_regions()).data.filter(function(item){ if( item != \"OESTE\" && item != \"SUL\" &&  item != \"LESTE\" && item != \"NORTE\" && item != \"CENTRAL\" && item != \"SUDOESTE\" && item != \"CENTRO SUL\" ){ return item } })\n        },\n        filterData(val){\n            this.filteredData.amountData = this.rawData.amountData.slice(val[0], val[1]+1)\n            this.filteredData.dates = this.rawData.dates.slice(val[0], val[1]+1).map(function(item){ return Date(item)})\n            this.filteredData.num = this.rawData.num.slice(val[0], val[1]+1)\n            this.filteredData.obitos = this.rawData.obitos.slice(val[0], val[1]+1)\n        },\n        dateRange(val){\n            this.range = val\n        },\n    }\n}\n</script>\n\n<style scoped>\nh1, h2{\n    color: rgb(77, 77, 77);\n}\n</style>"]}]}