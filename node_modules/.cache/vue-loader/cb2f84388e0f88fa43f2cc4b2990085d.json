{"remainingRequest":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\BrasilLine.vue?vue&type=style&index=0&id=43a06670&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\BrasilLine.vue","mtime":1593045380651},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592265200990},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1593041807827},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\postcss-loader\\src\\index.js","mtime":1590690792015},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1592265207055},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":1593041807827}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2VsZWN0b3J7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["BrasilLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA","file":"BrasilLine.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\r\n    <div>\r\n        <v-card flat outlined>\r\n            <v-card-title>\r\n                <span class=\"font-weight-light\"> Total </span> \r\n                <v-spacer/>\r\n                <v-btn text small class=\"font-weight-light\" @click=\"changeChart('line')\">Linha</v-btn>\r\n                <v-btn text small class=\"font-weight-light\" @click=\"changeChart('bar')\">Barra</v-btn>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n            <v-card-text>\r\n                <line-chart\r\n                    v-bind:infected=\"infectados\"\r\n                    v-bind:time=\"dates\"\r\n                    v-bind:death=\"obitos\"\r\n                    v-bind:type=\"type\"\r\n                    :key=\"numId\"\r\n                />\r\n            </v-card-text>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Data } from \"../../../functions/index.js\";\r\n// import dates from \"../../../example/dates.js\"\r\nimport lineChart from \"../charts/LineChart.vue\"\r\n\r\nlet api_data = new Data()\r\n\r\nexport default {\r\n    components: { \r\n        lineChart\r\n    },\r\n    data(){\r\n        return {\r\n            // Dados que vao para o lineChart\r\n            type: 'line',\r\n            infectados: [],\r\n            obitos: [],\r\n            numId: 0,\r\n\r\n            selected: ['Infectados', 'Obitos'],\r\n\r\n            dates: null, // Datas vindos da API\r\n            dados: null, // Dados vindos da API\r\n        }\r\n    },\r\n    async created(){\r\n        this.list_data()\r\n        this.list_dates()\r\n    },\r\n    mounted(){\r\n        // this.modify_dates()\r\n    },\r\n    methods: {\r\n        async list_data(){\r\n            this.dados = (await api_data.get_all_data()).data.map(function(data){ return { num:data.num, obitos: data.obitos, dataExtracao: data.dataExtracao.split('T')[0] } })\r\n        },\r\n        async list_dates(){\r\n            this.dates = (await api_data.get_all_dates()).data.sort().map(function(date){ return date.split('T')[0] })\r\n        },\r\n        changeChart(item){\r\n            this.type = item\r\n            this.numId++\r\n        },\r\n        filter_data(){\r\n            let filtrado_infectados = []\r\n            let filtrado_obitos = []\r\n            for(let i = 0; i < this.dates.length; i++ ){\r\n            let infectados = 0\r\n            let obitos = 0\r\n                for(let j = 0; j < this.dados.length; j++){\r\n                    if( this.dates[i] == this.dados[j].dataExtracao ){\r\n                        infectados += this.dados[j].num\r\n                        obitos += this.dados[j].obitos\r\n                    }\r\n                }\r\n                filtrado_infectados.push(infectados)\r\n                filtrado_obitos.push(obitos)\r\n            }\r\n            this.infectados = filtrado_infectados\r\n            this.obitos = filtrado_obitos\r\n            this.numId++\r\n        }\r\n    },\r\n    watch: {\r\n        dates(val){\r\n            if(val != null){\r\n                this.filter_data()\r\n            }\r\n        },\r\n        selected: function(val) {\r\n            if( !val.includes('Obitos') ){\r\n                this.obitos = [0]\r\n                this.numId++\r\n            }\r\n            if( val.includes('Obitos') ){\r\n                this.obitos = this.dados_filtrados.obitos\r\n                this.numId++\r\n            }\r\n            if( !val.includes('Infectados') ){\r\n                this.infectados = [0]\r\n                this.numId++\r\n            }\r\n            if( val.includes('Infectados') ){\r\n                this.infectados = this.dados_filtrados.infectados\r\n                this.numId++\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.selector{\r\n    text-align: center;\r\n    align-content: center;\r\n}\r\n</style>"]}]}