{"remainingRequest":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\src\\views\\Projeto\\visualize\\RegionLineChart.vue","mtime":1592256700129},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591025987221},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":1590690790716},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1592265207055},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591025987502},{"path":"C:\\Users\\natha\\Projetos\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":1591026009799}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbGluZUNoYXJ0IGZyb20gIi4uL2NoYXJ0cy9MaW5lQ2hhcnQudnVlIg0KaW1wb3J0IHsgRGF0YSB9IGZyb20gIi4uLy4uLy4uL2V4YW1wbGUvZnVuY3Rpb25zLmpzIjsNCg0KbGV0IG5ld0RhdGEgPSBuZXcgRGF0YSgpOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgcHJvcHM6IFsgJ3JlZ2lvbicgXSwNCiAgICBjb21wb25lbnRzOiB7IGxpbmVDaGFydCB9LA0KICAgIGRhdGEoKXsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHJlZ2lvbnM6IFsgXSwNCiAgICAgICAgICAgIGRhdGE6IG51bGwsDQogICAgICAgICAgICBpdGVtczogWyANCiAgICAgICAgICAgICAgICAiw4FHVUFTIENMQVJBUyIsICJSRUNBTlRPIERBUyBFTUFTIiwgIlNBTUFNQkFJQSIsICJUQUdVQVRJTkdBIiwgIlZJQ0VOVEUgUElSRVMiLCAiQ0VOVFJBTCIsICJTVURPRVNURSIsICJQTEFOTyBQSUxPVE8iLCAiU1VET0VTVEUvT0NUT0dPTkFMIiwgIkxBR08gTk9SVEUiLCAiTEFHTyBTVUwiLCAiVkFSSsODTyBETyBUT1JUTyIsICJDRU5UUk8gU1VMIiwgIkNBTkRBTkdPTMOCTkRJQSIsICJQQVJLV0FZIiwgIkdVQVLDgSIsICJOw5pDTEVPIEJBTkRFSVJBTlRFIiwgIlJJQUNITyBGVU5ETyBJIiwgIlJJQUNITyBGVU5ETyBJSSIsICJTQ0lBIChFU1RSVVRVUkFMKSIsICJDUlVaRUlSTyIsICJOT1JURSIsICJGRVJDQUwiLCAiUExBTkFMVElOQSIsICJTT0JSQURJTkhPIEkiLCAiU09CUkFESU5ITyBJSSIsICJHQU1BIiwgIlNBTlRBIE1BUklBIiwgIkxFU1RFIiwgIkpBUkRJTSBCT1TDgk5JQ08iLCAiSVRBUE/DgyIsICJQQVJBTk/DgSIsICJTw4NPIFNFQkFTVEnDg08iLCAiU1VMIiwgIk9FU1RFIiwgIkJSQVpMw4JORElBIiwgIkNFSUzDgk5ESUEiLCAiUE9QVUxBw4fDg08gUFJJVkFEQSBERSBMSUJFUkRBREUiLCAiUyBJIEEiLCAiUkEgRU0gSU5WRVNUSUdBw4fDg08iIA0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICAgIGluZmVjdGFkb3M6IFtudWxsXSwNCiAgICAgICAgICAgIGRhdGVzOiBbbnVsbF0sDQogICAgICAgICAgICBvYml0b3M6IFtudWxsXSwNCiAgICAgICAgICAgIG51bUlkOiAwDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMuZ2V0X3JlZ2lvbignJykNCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIHJlZ2lvbnModmFsKXsNCiAgICAgICAgICAgIHRoaXMuZ2V0X3JlZ2lvbih2YWwpDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgZ2V0X3JlZ2lvbihyZWdpb24pew0KICAgICAgICAgICAgbGV0IGRhdGEgPSBuZXdEYXRhLmdldF9ieV9yZWdpb24ocmVnaW9uKQ0KICAgICAgICAgICAgbGV0IGluZmVjdGFkb3MgPSBbXQ0KICAgICAgICAgICAgbGV0IGRhdGVzID0gW10NCiAgICAgICAgICAgIGxldCBvYml0b3MgPSBbXQ0KICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspew0KICAgICAgICAgICAgICAgIGluZmVjdGFkb3MucHVzaChkYXRhW2ldLm51bSkNCiAgICAgICAgICAgICAgICBkYXRlcy5wdXNoKCBuZXcgRGF0ZSggZGF0YVtpXS5kYXRhRXh0cmFjYW8pLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXS5zbGljZSg1KSApDQogICAgICAgICAgICAgICAgb2JpdG9zLnB1c2goZGF0YVtpXS5vYml0b3MpDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmluZmVjdGFkb3MgPSBpbmZlY3RhZG9zDQogICAgICAgICAgICB0aGlzLmRhdGVzID0gZGF0ZXMNCiAgICAgICAgICAgIHRoaXMub2JpdG9zID0gb2JpdG9zDQogICAgICAgICAgICB0aGlzLm51bUlkKysNCiAgICAgICAgfSwNCiAgICAgICAgY2hhbmdlQ2hhcnQoaXRlbSl7DQogICAgICAgICAgICB0aGlzLnR5cGUgPSBpdGVtDQogICAgICAgICAgICB0aGlzLm51bUlkKysNCiAgICAgICAgfQ0KICAgIH0gICAgICAgDQp9DQo="},{"version":3,"sources":["RegionLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegionLineChart.vue","sourceRoot":"src/views/Projeto/visualize","sourcesContent":["<template>\r\n    <div>\r\n        <v-card>\r\n            <v-card-title>\r\n                <span class=\"font-weight-light\">Cidades</span>\r\n\r\n                <v-select dense v-model=\"regions\" :items=\"items\" attach chips/>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n            <line-chart\r\n                v-bind:infected=\"infectados\"\r\n                v-bind:time=\"dates\"\r\n                v-bind:death=\"obitos\"\r\n                v-bind:type=\"type\"\r\n                :key=\"numId\"\r\n            />\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn text @click=\"changeChart('line')\">Line</v-btn>\r\n                <v-btn text @click=\"changeChart('bar')\">Bar</v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport lineChart from \"../charts/LineChart.vue\"\r\nimport { Data } from \"../../../example/functions.js\";\r\n\r\nlet newData = new Data();\r\n\r\nexport default {\r\n    props: [ 'region' ],\r\n    components: { lineChart },\r\n    data(){\r\n        return {\r\n            regions: [ ],\r\n            data: null,\r\n            items: [ \r\n                \"ÁGUAS CLARAS\", \"RECANTO DAS EMAS\", \"SAMAMBAIA\", \"TAGUATINGA\", \"VICENTE PIRES\", \"CENTRAL\", \"SUDOESTE\", \"PLANO PILOTO\", \"SUDOESTE/OCTOGONAL\", \"LAGO NORTE\", \"LAGO SUL\", \"VARJÃO DO TORTO\", \"CENTRO SUL\", \"CANDANGOLÂNDIA\", \"PARKWAY\", \"GUARÁ\", \"NÚCLEO BANDEIRANTE\", \"RIACHO FUNDO I\", \"RIACHO FUNDO II\", \"SCIA (ESTRUTURAL)\", \"CRUZEIRO\", \"NORTE\", \"FERCAL\", \"PLANALTINA\", \"SOBRADINHO I\", \"SOBRADINHO II\", \"GAMA\", \"SANTA MARIA\", \"LESTE\", \"JARDIM BOTÂNICO\", \"ITAPOÃ\", \"PARANOÁ\", \"SÃO SEBASTIÃO\", \"SUL\", \"OESTE\", \"BRAZLÂNDIA\", \"CEILÂNDIA\", \"POPULAÇÃO PRIVADA DE LIBERDADE\", \"S I A\", \"RA EM INVESTIGAÇÃO\" \r\n            ],\r\n            type: 'line',\r\n            infectados: [null],\r\n            dates: [null],\r\n            obitos: [null],\r\n            numId: 0\r\n        }\r\n    },\r\n    mounted() {\r\n        this.get_region('')\r\n    },\r\n    watch: {\r\n        regions(val){\r\n            this.get_region(val)\r\n        }\r\n    },\r\n    methods: {\r\n        get_region(region){\r\n            let data = newData.get_by_region(region)\r\n            let infectados = []\r\n            let dates = []\r\n            let obitos = []\r\n            for(let i = 0; i < data.length; i++){\r\n                infectados.push(data[i].num)\r\n                dates.push( new Date( data[i].dataExtracao).toISOString().split('T')[0].slice(5) )\r\n                obitos.push(data[i].obitos)\r\n            }\r\n            this.infectados = infectados\r\n            this.dates = dates\r\n            this.obitos = obitos\r\n            this.numId++\r\n        },\r\n        changeChart(item){\r\n            this.type = item\r\n            this.numId++\r\n        }\r\n    }       \r\n}\r\n</script>"]}]}