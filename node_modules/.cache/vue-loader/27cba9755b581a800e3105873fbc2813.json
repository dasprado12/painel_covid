{"remainingRequest":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\painel_covid\\src\\views\\Projeto\\components\\TreeInfectados.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\painel_covid\\src\\views\\Projeto\\components\\TreeInfectados.vue","mtime":1594648606898},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\painel_covid\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVHJlZU1hcEluZiBmcm9tICIuLi9jaGFydHMvVHJlZUNoYXJ0SW5mZWN0YWRvcy52dWUiOw0KaW1wb3J0IHsgRGF0YSB9IGZyb20gIi4uLy4uLy4uL2Z1bmN0aW9ucy9pbmRleC5qcyI7DQoNCmxldCBhcGlfZGF0YSA9IG5ldyBEYXRhKCk7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBwcm9wczogWyAndGl0bGUnLCAndGltZScsICdyZWdpb25zJyBdLA0KICAgIGNvbXBvbmVudHM6IHsgVHJlZU1hcEluZiB9LA0KICAgIGRhdGEoKXsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGRhdGE6IG51bGwsDQogICAgICAgICAgICBkYXRhX2luZjogew0KICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLA0KICAgICAgICAgICAgICAgIGRhdGE6IFtdDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZmlsdGVyX2RhdGE6IFtdLA0KICAgICAgICAgICAgbGFzdF9kYXRlOiBudWxsLCANCiAgICAgICAgICAgIGtleTogMCwNCiAgICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgY3JlYXRlZCgpew0KICAgICAgICB0aGlzLmdldF9kYXRhKHRoaXMucmVnaW9ucykNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgYXN5bmMgZ2V0X2RhdGEocmVnaW9ucyl7DQogICAgICAgICAgICBsZXQgbGFzdF9kYXRlID0gKGF3YWl0IGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKSkuZGF0YS5zcGxpdCgiVCIpWzBdDQogICAgICAgICAgICBsZXQgZGF0YSA9ICggYXdhaXQgYXBpX2RhdGEuZ2V0X3JlZ2lvbl9ieV9kYXRlKGxhc3RfZGF0ZSkgKS5kYXRhDQogICAgICAgICAgICB0aGlzLmRhdGEgPSBkYXRhDQogICAgICAgICAgICBsZXQgZmlsdGVyX2RhdGEgPSBbXQ0KICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspew0KICAgICAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCByZWdpb25zLmxlbmd0aDsgaisrKXsNCiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YVtpXS5yZWdpYW8gPT0gcmVnaW9uc1tqXSl7DQogICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJfZGF0YS5wdXNoKHsgQ2l0eTogZGF0YVtpXS5yZWdpYW8sIENvdW50OiBkYXRhW2ldLm51bSB9KQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5kYXRhX2luZi5kYXRhPWZpbHRlcl9kYXRhDQogICAgICAgICAgICB0aGlzLmtleSsrDQogICAgICAgIH0sDQogICAgfSwNCiAgICB3YXRjaDp7DQogICAgICAgIHJlZ2lvbnModmFsKXsNCiAgICAgICAgICAgIHRoaXMuZ2V0X2RhdGEodmFsKQ0KICAgICAgICB9DQogICAgfQ0KICAgIA0KfQ0K"},{"version":3,"sources":["TreeInfectados.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"TreeInfectados.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-card flat outlined>\r\n            <v-card-title>\r\n                <span class=\"font-weight-light\">Regi√µes com mais casos</span>\r\n            </v-card-title>\r\n            <v-divider/>\r\n            <tree-map-inf v-bind:obj=\"data_inf\" :key=\"key\"></tree-map-inf>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TreeMapInf from \"../charts/TreeChartInfectados.vue\";\r\nimport { Data } from \"../../../functions/index.js\";\r\n\r\nlet api_data = new Data();\r\n\r\nexport default {\r\n    props: [ 'title', 'time', 'regions' ],\r\n    components: { TreeMapInf },\r\n    data(){\r\n        return {\r\n            data: null,\r\n            data_inf: {\r\n                color: this.color,\r\n                data: []\r\n            },\r\n            filter_data: [],\r\n            last_date: null, \r\n            key: 0,\r\n        }\r\n    },\r\n    async created(){\r\n        this.get_data(this.regions)\r\n    },\r\n    methods: {\r\n        async get_data(regions){\r\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\r\n            let data = ( await api_data.get_region_by_date(last_date) ).data\r\n            this.data = data\r\n            let filter_data = []\r\n            for(let i = 0; i < data.length; i++){\r\n                for(let j = 0; j < regions.length; j++){\r\n                    if(data[i].regiao == regions[j]){\r\n                        filter_data.push({ City: data[i].regiao, Count: data[i].num })\r\n                    }\r\n                }\r\n            }\r\n            this.data_inf.data=filter_data\r\n            this.key++\r\n        },\r\n    },\r\n    watch:{\r\n        regions(val){\r\n            this.get_data(val)\r\n        }\r\n    }\r\n    \r\n}\r\n</script>"]}]}