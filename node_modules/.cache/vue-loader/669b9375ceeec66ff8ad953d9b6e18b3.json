{"remainingRequest":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Desktop/uiot/painel_covid/src/views/Projeto/components/TreeObitos.vue","mtime":1594927444721},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/thread-loader/dist/cjs.js","mtime":1593699362690},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/babel-loader/lib/index.js","mtime":1593699361522},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vuetify-loader/lib/loader.js","mtime":1593699362786},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/cache-loader/dist/cjs.js","mtime":1593699361554},{"path":"/home/prado/Desktop/uiot/painel_covid/node_modules/vue-loader/lib/index.js","mtime":1593699362726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmVlTWFwT2J0IGZyb20gIi4uL2NoYXJ0cy9UcmVlQ2hhcnRPYml0b3MudnVlIjsKaW1wb3J0IHsgRGF0YSB9IGZyb20gIi4uLy4uLy4uL2Z1bmN0aW9ucy9pbmRleC5qcyI7CgpsZXQgYXBpX2RhdGEgPSBuZXcgRGF0YSgpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6IFsgJ2NvbG9yJywgJ3RpdGxlJywgJ3RpbWUnLCAncmVnaW9ucycgXSwKICAgIGNvbXBvbmVudHM6IHsgVHJlZU1hcE9idCB9LAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRhdGE6IG51bGwsCiAgICAgICAgICAgIGRhdGFfaW5mOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvciwKICAgICAgICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZpbHRlcl9kYXRhOiBbXSwKICAgICAgICAgICAgbGFzdF9kYXRlOiBudWxsLCAKICAgICAgICAgICAga2V5OiAwLAogICAgICAgIH0KICAgIH0sCiAgICBhc3luYyBjcmVhdGVkKCl7CiAgICAgICAgdGhpcy5nZXRfZGF0YSh0aGlzLnJlZ2lvbnMpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIGdldF9kYXRhKHJlZ2lvbnMpewogICAgICAgICAgICBsZXQgbGFzdF9kYXRlID0gKGF3YWl0IGFwaV9kYXRhLmdldF9sYXN0X2RhdGUoKSkuZGF0YS5zcGxpdCgiVCIpWzBdCiAgICAgICAgICAgIGxldCBkYXRhID0gKCBhd2FpdCBhcGlfZGF0YS5nZXRfcmVnaW9uX2J5X2RhdGUobGFzdF9kYXRlKSApLmRhdGEKICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YQogICAgICAgICAgICBsZXQgZmlsdGVyX2RhdGEgPSBbXQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgcmVnaW9ucy5sZW5ndGg7IGorKyl7CiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YVtpXS5yZWdpYW8gPT0gcmVnaW9uc1tqXSl7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcl9kYXRhLnB1c2goeyBDaXR5OiBkYXRhW2ldLnJlZ2lhbywgQ291bnQ6IGRhdGFbaV0ub2JpdG9zIH0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuZGF0YV9pbmYuZGF0YT1maWx0ZXJfZGF0YQogICAgICAgICAgICB0aGlzLmtleSsrCiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgcmVnaW9ucyh2YWwpewogICAgICAgICAgICB0aGlzLmdldF9kYXRhKHZhbCkKICAgICAgICB9CiAgICB9CiAgICAKfQo="},{"version":3,"sources":["TreeObitos.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"TreeObitos.vue","sourceRoot":"src/views/Projeto/components","sourcesContent":["<template>\n    <div>\n        <v-card outlined color=\"grey lighten-4\"> \n            <v-card-title class=\"font-weight-light\"> Óbitos por região </v-card-title>\n            <v-divider/>\n            <tree-map-obt v-bind:obj=\"data_inf\" :key=\"key\"/>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport TreeMapObt from \"../charts/TreeChartObitos.vue\";\nimport { Data } from \"../../../functions/index.js\";\n\nlet api_data = new Data();\n\nexport default {\n    props: [ 'color', 'title', 'time', 'regions' ],\n    components: { TreeMapObt },\n    data(){\n        return {\n            data: null,\n            data_inf: {\n                color: this.color,\n                data: []\n            },\n            filter_data: [],\n            last_date: null, \n            key: 0,\n        }\n    },\n    async created(){\n        this.get_data(this.regions)\n    },\n    methods: {\n        async get_data(regions){\n            let last_date = (await api_data.get_last_date()).data.split(\"T\")[0]\n            let data = ( await api_data.get_region_by_date(last_date) ).data\n            this.data = data\n            let filter_data = []\n            for(let i = 0; i < data.length; i++){\n                for(let j = 0; j < regions.length; j++){\n                    if(data[i].regiao == regions[j]){\n                        filter_data.push({ City: data[i].regiao, Count: data[i].obitos })\n                    }\n                }\n            }\n            this.data_inf.data=filter_data\n            this.key++\n        },\n    },\n    watch:{\n        regions(val){\n            this.get_data(val)\n        }\n    }\n    \n}\n</script>"]}]}